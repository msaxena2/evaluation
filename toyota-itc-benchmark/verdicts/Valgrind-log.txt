Valgrind being tested on 01.w_Defects 1 1

vflag_file = 1 vflag_func = 1 vflag_copy =1001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 1 2

vflag_file = 1 vflag_func = 2 vflag_copy =1002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 1 3

vflag_file = 1 vflag_func = 3 vflag_copy =1003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 1 4

vflag_file = 1 vflag_func = 4 vflag_copy =1004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 1 5

vflag_file = 1 vflag_func = 5 vflag_copy =1005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 1 6

vflag_file = 1 vflag_func = 6 vflag_copy =1006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 1 7

vflag_file = 1 vflag_func = 7 vflag_copy =1007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 1 8

vflag_file = 1 vflag_func = 8 vflag_copy =1008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 1 9

vflag_file = 1 vflag_func = 9 vflag_copy =1009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 1 10

vflag_file = 1 vflag_func = 10 vflag_copy =1010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 1 11

vflag_file = 1 vflag_func = 11 vflag_copy =1011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 1 12

vflag_file = 1 vflag_func = 12 vflag_copy =1012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 1 13

vflag_file = 1 vflag_func = 13 vflag_copy =1013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 1 14

vflag_file = 1 vflag_func = 14 vflag_copy =1014  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 1 15

vflag_file = 1 vflag_func = 15 vflag_copy =1015  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 1 16

vflag_file = 1 vflag_func = 16 vflag_copy =1016  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 1 17

vflag_file = 1 vflag_func = 17 vflag_copy =1017  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 2 1

==32278== Memcheck, a memory error detector 
==32278== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32278== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32278== Command: s 002001 
==32278==  
==32278== Invalid write of size 1 
==32278==    at 0x401DD4: dynamic_buffer_overrun_001 (in ) 
==32278==    by 0x402A8A: dynamic_buffer_overrun_main (in ) 
==32278==    by 0x4017DA: main (in ) 
==32278==  Address 0x5720045 is 0 bytes after a block of size 5 alloc'd 
==32278==    at 0x4C2CC70: calloc (in ) 
==32278==    by 0x401DB2: dynamic_buffer_overrun_001 (in ) 
==32278==    by 0x402A8A: dynamic_buffer_overrun_main (in ) 
==32278==    by 0x4017DA: main (in ) 
==32278==  
==32278==  
==32278== HEAP SUMMARY: 
==32278==     in use at exit: 0 bytes in 0 blocks 
==32278==   total heap usage: 1 allocs, 1 frees, 5 bytes allocated 
==32278==  
==32278== All heap blocks were freed -- no leaks are possible 
==32278==  
==32278== For counts of detected and suppressed errors, rerun with: -v 
==32278== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 2

==32279== Memcheck, a memory error detector 
==32279== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32279== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32279== Command: s 002002 
==32279==  
==32279== Invalid write of size 2 
==32279==    at 0x401E19: dynamic_buffer_overrun_002 (in ) 
==32279==    by 0x402AAC: dynamic_buffer_overrun_main (in ) 
==32279==    by 0x4017DA: main (in ) 
==32279==  Address 0x572004a is 0 bytes after a block of size 10 alloc'd 
==32279==    at 0x4C2CC70: calloc (in ) 
==32279==    by 0x401E05: dynamic_buffer_overrun_002 (in ) 
==32279==    by 0x402AAC: dynamic_buffer_overrun_main (in ) 
==32279==    by 0x4017DA: main (in ) 
==32279==  
==32279==  
==32279== HEAP SUMMARY: 
==32279==     in use at exit: 0 bytes in 0 blocks 
==32279==   total heap usage: 1 allocs, 1 frees, 10 bytes allocated 
==32279==  
==32279== All heap blocks were freed -- no leaks are possible 
==32279==  
==32279== For counts of detected and suppressed errors, rerun with: -v 
==32279== ERROR SUMMARY: 2 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 3

==32280== Memcheck, a memory error detector 
==32280== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32280== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32280== Command: s 002003 
==32280==  
==32280== Invalid read of size 4 
==32280==    at 0x401E7F: dynamic_buffer_overrun_003 (in ) 
==32280==    by 0x402ACE: dynamic_buffer_overrun_main (in ) 
==32280==    by 0x4017DA: main (in ) 
==32280==  Address 0x5720054 is 0 bytes after a block of size 20 alloc'd 
==32280==    at 0x4C2CC70: calloc (in ) 
==32280==    by 0x401E42: dynamic_buffer_overrun_003 (in ) 
==32280==    by 0x402ACE: dynamic_buffer_overrun_main (in ) 
==32280==    by 0x4017DA: main (in ) 
==32280==  
==32280==  
==32280== HEAP SUMMARY: 
==32280==     in use at exit: 0 bytes in 0 blocks 
==32280==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32280==  
==32280== All heap blocks were freed -- no leaks are possible 
==32280==  
==32280== For counts of detected and suppressed errors, rerun with: -v 
==32280== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 4

==32281== Memcheck, a memory error detector 
==32281== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32281== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32281== Command: s 002004 
==32281==  
==32281== Invalid write of size 4 
==32281==    at 0x401ED1: dynamic_buffer_overrun_004 (in ) 
==32281==    by 0x402AF0: dynamic_buffer_overrun_main (in ) 
==32281==    by 0x4017DA: main (in ) 
==32281==  Address 0x5720054 is 0 bytes after a block of size 20 alloc'd 
==32281==    at 0x4C2CC70: calloc (in ) 
==32281==    by 0x401EBD: dynamic_buffer_overrun_004 (in ) 
==32281==    by 0x402AF0: dynamic_buffer_overrun_main (in ) 
==32281==    by 0x4017DA: main (in ) 
==32281==  
==32281==  
==32281== HEAP SUMMARY: 
==32281==     in use at exit: 0 bytes in 0 blocks 
==32281==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32281==  
==32281== All heap blocks were freed -- no leaks are possible 
==32281==  
==32281== For counts of detected and suppressed errors, rerun with: -v 
==32281== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 5

==32282== Memcheck, a memory error detector 
==32282== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32282== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32282== Command: s 002005 
==32282==  
==32282== Invalid write of size 8 
==32282==    at 0x401F24: dynamic_buffer_overrun_005 (in ) 
==32282==    by 0x402B12: dynamic_buffer_overrun_main (in ) 
==32282==    by 0x4017DA: main (in ) 
==32282==  Address 0x5720068 is 0 bytes after a block of size 40 alloc'd 
==32282==    at 0x4C2CC70: calloc (in ) 
==32282==    by 0x401EFB: dynamic_buffer_overrun_005 (in ) 
==32282==    by 0x402B12: dynamic_buffer_overrun_main (in ) 
==32282==    by 0x4017DA: main (in ) 
==32282==  
==32282==  
==32282== HEAP SUMMARY: 
==32282==     in use at exit: 0 bytes in 0 blocks 
==32282==   total heap usage: 1 allocs, 1 frees, 40 bytes allocated 
==32282==  
==32282== All heap blocks were freed -- no leaks are possible 
==32282==  
==32282== For counts of detected and suppressed errors, rerun with: -v 
==32282== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 6

==32283== Memcheck, a memory error detector 
==32283== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32283== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32283== Command: s 002006 
==32283==  
==32283== Invalid write of size 4 
==32283==    at 0x401F88: dynamic_buffer_overrun_006 (in ) 
==32283==    by 0x402B34: dynamic_buffer_overrun_main (in ) 
==32283==    by 0x4017DA: main (in ) 
==32283==  Address 0x5720054 is 0 bytes after a block of size 20 alloc'd 
==32283==    at 0x4C2CC70: calloc (in ) 
==32283==    by 0x401F59: dynamic_buffer_overrun_006 (in ) 
==32283==    by 0x402B34: dynamic_buffer_overrun_main (in ) 
==32283==    by 0x4017DA: main (in ) 
==32283==  
==32283==  
==32283== HEAP SUMMARY: 
==32283==     in use at exit: 0 bytes in 0 blocks 
==32283==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32283==  
==32283== All heap blocks were freed -- no leaks are possible 
==32283==  
==32283== For counts of detected and suppressed errors, rerun with: -v 
==32283== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 7

==32284== Memcheck, a memory error detector 
==32284== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32284== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32284== Command: s 002007 
==32284==  
==32284== Invalid write of size 8 
==32284==    at 0x401FEB: dynamic_buffer_overrun_007 (in ) 
==32284==    by 0x402B56: dynamic_buffer_overrun_main (in ) 
==32284==    by 0x4017DA: main (in ) 
==32284==  Address 0x5720068 is 0 bytes after a block of size 40 alloc'd 
==32284==    at 0x4C2CC70: calloc (in ) 
==32284==    by 0x401FB8: dynamic_buffer_overrun_007 (in ) 
==32284==    by 0x402B56: dynamic_buffer_overrun_main (in ) 
==32284==    by 0x4017DA: main (in ) 
==32284==  
==32284==  
==32284== HEAP SUMMARY: 
==32284==     in use at exit: 0 bytes in 0 blocks 
==32284==   total heap usage: 1 allocs, 1 frees, 40 bytes allocated 
==32284==  
==32284== All heap blocks were freed -- no leaks are possible 
==32284==  
==32284== For counts of detected and suppressed errors, rerun with: -v 
==32284== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 8

==32285== Memcheck, a memory error detector 
==32285== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32285== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32285== Command: s 002008 
==32285==  
==32285== Invalid write of size 4 
==32285==    at 0x402095: dynamic_buffer_overrun_008 (in ) 
==32285==    by 0x402B78: dynamic_buffer_overrun_main (in ) 
==32285==    by 0x4017DA: main (in ) 
==32285==  Address 0x57200c4 is 0 bytes after a block of size 20 alloc'd 
==32285==    at 0x4C2CC70: calloc (in ) 
==32285==    by 0x40204E: dynamic_buffer_overrun_008 (in ) 
==32285==    by 0x402B78: dynamic_buffer_overrun_main (in ) 
==32285==    by 0x4017DA: main (in ) 
==32285==  
==32285==  
==32285== HEAP SUMMARY: 
==32285==     in use at exit: 0 bytes in 0 blocks 
==32285==   total heap usage: 6 allocs, 6 frees, 140 bytes allocated 
==32285==  
==32285== All heap blocks were freed -- no leaks are possible 
==32285==  
==32285== For counts of detected and suppressed errors, rerun with: -v 
==32285== ERROR SUMMARY: 5 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 9

==32286== Memcheck, a memory error detector 
==32286== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32286== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32286== Command: s 002009 
==32286==  
==32286== Invalid write of size 4 
==32286==    at 0x402196: dynamic_buffer_overrun_009 (in ) 
==32286==    by 0x402B9A: dynamic_buffer_overrun_main (in ) 
==32286==    by 0x4017DA: main (in ) 
==32286==  Address 0x5720058 is 4 bytes after a block of size 20 alloc'd 
==32286==    at 0x4C2CC70: calloc (in ) 
==32286==    by 0x4020F3: dynamic_buffer_overrun_009 (in ) 
==32286==    by 0x402B9A: dynamic_buffer_overrun_main (in ) 
==32286==    by 0x4017DA: main (in ) 
==32286==  
==32286==  
==32286== HEAP SUMMARY: 
==32286==     in use at exit: 0 bytes in 0 blocks 
==32286==   total heap usage: 5 allocs, 5 frees, 100 bytes allocated 
==32286==  
==32286== All heap blocks were freed -- no leaks are possible 
==32286==  
==32286== For counts of detected and suppressed errors, rerun with: -v 
==32286== ERROR SUMMARY: 5 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 10

==32287== Memcheck, a memory error detector 
==32287== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32287== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32287== Command: s 002010 
==32287==  
==32287== Invalid write of size 4 
==32287==    at 0x40220E: dynamic_buffer_overrun_010 (in ) 
==32287==    by 0x402BBC: dynamic_buffer_overrun_main (in ) 
==32287==    by 0x4017DA: main (in ) 
==32287==  Address 0x572007c is 0 bytes after a block of size 60 alloc'd 
==32287==    at 0x4C2CC70: calloc (in ) 
==32287==    by 0x4021FA: dynamic_buffer_overrun_010 (in ) 
==32287==    by 0x402BBC: dynamic_buffer_overrun_main (in ) 
==32287==    by 0x4017DA: main (in ) 
==32287==  
==32287==  
==32287== HEAP SUMMARY: 
==32287==     in use at exit: 0 bytes in 0 blocks 
==32287==   total heap usage: 1 allocs, 1 frees, 60 bytes allocated 
==32287==  
==32287== All heap blocks were freed -- no leaks are possible 
==32287==  
==32287== For counts of detected and suppressed errors, rerun with: -v 
==32287== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 11

==32288== Memcheck, a memory error detector 
==32288== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32288== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32288== Command: s 002011 
==32288==  
==32288== Invalid write of size 4 
==32288==    at 0x40224E: dynamic_buffer_overrun_011 (in ) 
==32288==    by 0x402BDE: dynamic_buffer_overrun_main (in ) 
==32288==    by 0x4017DA: main (in ) 
==32288==  Address 0x57200e4 is 20 bytes after a block of size 144 in arena "client" 
==32288==  
==32288==  
==32288== HEAP SUMMARY: 
==32288==     in use at exit: 0 bytes in 0 blocks 
==32288==   total heap usage: 1 allocs, 1 frees, 140 bytes allocated 
==32288==  
==32288== All heap blocks were freed -- no leaks are possible 
==32288==  
==32288== For counts of detected and suppressed errors, rerun with: -v 
==32288== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 12

==32289== Memcheck, a memory error detector 
==32289== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32289== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32289== Command: s 002012 
==32289==  
==32289== Invalid write of size 4 
==32289==    at 0x4022A0: dynamic_buffer_overrun_012 (in ) 
==32289==    by 0x402C00: dynamic_buffer_overrun_main (in ) 
==32289==    by 0x4017DA: main (in ) 
==32289==  Address 0x5720054 is 0 bytes after a block of size 20 alloc'd 
==32289==    at 0x4C2CC70: calloc (in ) 
==32289==    by 0x402279: dynamic_buffer_overrun_012 (in ) 
==32289==    by 0x402C00: dynamic_buffer_overrun_main (in ) 
==32289==    by 0x4017DA: main (in ) 
==32289==  
==32289==  
==32289== HEAP SUMMARY: 
==32289==     in use at exit: 0 bytes in 0 blocks 
==32289==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32289==  
==32289== All heap blocks were freed -- no leaks are possible 
==32289==  
==32289== For counts of detected and suppressed errors, rerun with: -v 
==32289== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 13

==32290== Memcheck, a memory error detector 
==32290== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32290== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32290== Command: s 002013 
==32290==  
==32290== Invalid write of size 4 
==32290==    at 0x4022F1: dynamic_buffer_overrun_013 (in ) 
==32290==    by 0x402C22: dynamic_buffer_overrun_main (in ) 
==32290==    by 0x4017DA: main (in ) 
==32290==  Address 0x5720054 is 0 bytes after a block of size 20 alloc'd 
==32290==    at 0x4C2CC70: calloc (in ) 
==32290==    by 0x4022CA: dynamic_buffer_overrun_013 (in ) 
==32290==    by 0x402C22: dynamic_buffer_overrun_main (in ) 
==32290==    by 0x4017DA: main (in ) 
==32290==  
==32290==  
==32290== HEAP SUMMARY: 
==32290==     in use at exit: 0 bytes in 0 blocks 
==32290==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32290==  
==32290== All heap blocks were freed -- no leaks are possible 
==32290==  
==32290== For counts of detected and suppressed errors, rerun with: -v 
==32290== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 14

==32291== Memcheck, a memory error detector 
==32291== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32291== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32291== Command: s 002014 
==32291==  
==32291== Invalid write of size 4 
==32291==    at 0x402342: dynamic_buffer_overrun_014 (in ) 
==32291==    by 0x402C44: dynamic_buffer_overrun_main (in ) 
==32291==    by 0x4017DA: main (in ) 
==32291==  Address 0x572005c is 8 bytes after a block of size 20 alloc'd 
==32291==    at 0x4C2CC70: calloc (in ) 
==32291==    by 0x40231B: dynamic_buffer_overrun_014 (in ) 
==32291==    by 0x402C44: dynamic_buffer_overrun_main (in ) 
==32291==    by 0x4017DA: main (in ) 
==32291==  
==32291==  
==32291== HEAP SUMMARY: 
==32291==     in use at exit: 0 bytes in 0 blocks 
==32291==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32291==  
==32291== All heap blocks were freed -- no leaks are possible 
==32291==  
==32291== For counts of detected and suppressed errors, rerun with: -v 
==32291== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 15

==32292== Memcheck, a memory error detector 
==32292== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32292== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32292== Command: s 002015 
==32292==  
==32292== Invalid write of size 4 
==32292==    at 0x40239B: dynamic_buffer_overrun_015 (in ) 
==32292==    by 0x402C66: dynamic_buffer_overrun_main (in ) 
==32292==    by 0x4017DA: main (in ) 
==32292==  Address 0x5720054 is 0 bytes after a block of size 20 alloc'd 
==32292==    at 0x4C2CC70: calloc (in ) 
==32292==    by 0x40236C: dynamic_buffer_overrun_015 (in ) 
==32292==    by 0x402C66: dynamic_buffer_overrun_main (in ) 
==32292==    by 0x4017DA: main (in ) 
==32292==  
==32292==  
==32292== HEAP SUMMARY: 
==32292==     in use at exit: 0 bytes in 0 blocks 
==32292==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32292==  
==32292== All heap blocks were freed -- no leaks are possible 
==32292==  
==32292== For counts of detected and suppressed errors, rerun with: -v 
==32292== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 16

==32293== Memcheck, a memory error detector 
==32293== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32293== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32293== Command: s 002016 
==32293==  
==32293== Invalid write of size 4 
==32293==    at 0x4023F7: dynamic_buffer_overrun_016 (in ) 
==32293==    by 0x402C88: dynamic_buffer_overrun_main (in ) 
==32293==    by 0x4017DA: main (in ) 
==32293==  Address 0x5720054 is 0 bytes after a block of size 20 alloc'd 
==32293==    at 0x4C2CC70: calloc (in ) 
==32293==    by 0x4023D0: dynamic_buffer_overrun_016 (in ) 
==32293==    by 0x402C88: dynamic_buffer_overrun_main (in ) 
==32293==    by 0x4017DA: main (in ) 
==32293==  
==32293==  
==32293== HEAP SUMMARY: 
==32293==     in use at exit: 0 bytes in 0 blocks 
==32293==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32293==  
==32293== All heap blocks were freed -- no leaks are possible 
==32293==  
==32293== For counts of detected and suppressed errors, rerun with: -v 
==32293== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 17

==32294== Memcheck, a memory error detector 
==32294== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32294== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32294== Command: s 002017 
==32294==  
==32294== Invalid write of size 4 
==32294==    at 0x402444: dynamic_buffer_overrun_017_func_001 (in ) 
==32294==    by 0x402465: dynamic_buffer_overrun_017 (in ) 
==32294==    by 0x402CAA: dynamic_buffer_overrun_main (in ) 
==32294==    by 0x4017DA: main (in ) 
==32294==  Address 0x5720054 is 0 bytes after a block of size 20 alloc'd 
==32294==    at 0x4C2CC70: calloc (in ) 
==32294==    by 0x402424: dynamic_buffer_overrun_017_func_001 (in ) 
==32294==    by 0x402465: dynamic_buffer_overrun_017 (in ) 
==32294==    by 0x402CAA: dynamic_buffer_overrun_main (in ) 
==32294==    by 0x4017DA: main (in ) 
==32294==  
==32294==  
==32294== HEAP SUMMARY: 
==32294==     in use at exit: 0 bytes in 0 blocks 
==32294==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32294==  
==32294== All heap blocks were freed -- no leaks are possible 
==32294==  
==32294== For counts of detected and suppressed errors, rerun with: -v 
==32294== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 18

==32295== Memcheck, a memory error detector 
==32295== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32295== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32295== Command: s 002018 
==32295==  
==32295== Invalid write of size 4 
==32295==    at 0x4024C7: dynamic_buffer_overrun_018 (in ) 
==32295==    by 0x402CCC: dynamic_buffer_overrun_main (in ) 
==32295==    by 0x4017DA: main (in ) 
==32295==  Address 0x171f100 is not stack'd, malloc'd or (recently) free'd 
==32295==  
==32295==  
==32295== Process terminating with default action of signal 11 (SIGSEGV) 
==32295==  Access not within mapped region at address 0x171F100 
==32295==    at 0x4024C7: dynamic_buffer_overrun_018 (in ) 
==32295==    by 0x402CCC: dynamic_buffer_overrun_main (in ) 
==32295==    by 0x4017DA: main (in ) 
==32295==  If you believe this happened as a result of a stack 
==32295==  overflow in your program's main thread (unlikely but 
==32295==  possible), you can try to increase the size of the 
==32295==  main thread stack using the --main-stacksize= flag. 
==32295==  The main thread stack size used in this run was 8388608. 
==32295==  
==32295== HEAP SUMMARY: 
==32295==     in use at exit: 20 bytes in 1 blocks 
==32295==   total heap usage: 1 allocs, 0 frees, 20 bytes allocated 
==32295==  
==32295== LEAK SUMMARY: 
==32295==    definitely lost: 0 bytes in 0 blocks 
==32295==    indirectly lost: 0 bytes in 0 blocks 
==32295==      possibly lost: 0 bytes in 0 blocks 
==32295==    still reachable: 20 bytes in 1 blocks 
==32295==         suppressed: 0 bytes in 0 blocks 
==32295== Rerun with --leak-check=full to see details of leaked memory 
==32295==  
==32295== For counts of detected and suppressed errors, rerun with: -v 
==32295== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 19

==32299== Memcheck, a memory error detector 
==32299== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32299== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32299== Command: s 002019 
==32299==  
==32299== Invalid write of size 4 
==32299==    at 0x40251E: dynamic_buffer_overrun_019 (in ) 
==32299==    by 0x402CEE: dynamic_buffer_overrun_main (in ) 
==32299==    by 0x4017DA: main (in ) 
==32299==  Address 0x5720054 is 0 bytes after a block of size 20 alloc'd 
==32299==    at 0x4C2CC70: calloc (in ) 
==32299==    by 0x4024F1: dynamic_buffer_overrun_019 (in ) 
==32299==    by 0x402CEE: dynamic_buffer_overrun_main (in ) 
==32299==    by 0x4017DA: main (in ) 
==32299==  
==32299==  
==32299== HEAP SUMMARY: 
==32299==     in use at exit: 0 bytes in 0 blocks 
==32299==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32299==  
==32299== All heap blocks were freed -- no leaks are possible 
==32299==  
==32299== For counts of detected and suppressed errors, rerun with: -v 
==32299== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 20

==32300== Memcheck, a memory error detector 
==32300== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32300== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32300== Command: s 002020 
==32300==  
==32300== Invalid write of size 4 
==32300==    at 0x40257B: dynamic_buffer_overrun_020 (in ) 
==32300==    by 0x402D10: dynamic_buffer_overrun_main (in ) 
==32300==    by 0x4017DA: main (in ) 
==32300==  Address 0x5720054 is 0 bytes after a block of size 20 alloc'd 
==32300==    at 0x4C2CC70: calloc (in ) 
==32300==    by 0x402548: dynamic_buffer_overrun_020 (in ) 
==32300==    by 0x402D10: dynamic_buffer_overrun_main (in ) 
==32300==    by 0x4017DA: main (in ) 
==32300==  
==32300==  
==32300== HEAP SUMMARY: 
==32300==     in use at exit: 0 bytes in 0 blocks 
==32300==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32300==  
==32300== All heap blocks were freed -- no leaks are possible 
==32300==  
==32300== For counts of detected and suppressed errors, rerun with: -v 
==32300== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 21

==32301== Memcheck, a memory error detector 
==32301== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32301== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32301== Command: s 002021 
==32301==  
==32301== Invalid write of size 4 
==32301==    at 0x4025C9: dynamic_buffer_overrun_021 (in ) 
==32301==    by 0x402D32: dynamic_buffer_overrun_main (in ) 
==32301==    by 0x4017DA: main (in ) 
==32301==  Address 0x5720054 is 0 bytes after a block of size 20 alloc'd 
==32301==    at 0x4C2CC70: calloc (in ) 
==32301==    by 0x4025A5: dynamic_buffer_overrun_021 (in ) 
==32301==    by 0x402D32: dynamic_buffer_overrun_main (in ) 
==32301==    by 0x4017DA: main (in ) 
==32301==  
==32301==  
==32301== HEAP SUMMARY: 
==32301==     in use at exit: 0 bytes in 0 blocks 
==32301==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32301==  
==32301== All heap blocks were freed -- no leaks are possible 
==32301==  
==32301== For counts of detected and suppressed errors, rerun with: -v 
==32301== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 22

==32302== Memcheck, a memory error detector 
==32302== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32302== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32302== Command: s 002022 
==32302==  
==32302== Invalid write of size 4 
==32302==    at 0x40260F: dynamic_buffer_overrun_022 (in ) 
==32302==    by 0x402D54: dynamic_buffer_overrun_main (in ) 
==32302==    by 0x4017DA: main (in ) 
==32302==  Address 0x5720054 is 0 bytes after a block of size 20 alloc'd 
==32302==    at 0x4C2CC70: calloc (in ) 
==32302==    by 0x4025F3: dynamic_buffer_overrun_022 (in ) 
==32302==    by 0x402D54: dynamic_buffer_overrun_main (in ) 
==32302==    by 0x4017DA: main (in ) 
==32302==  
==32302==  
==32302== HEAP SUMMARY: 
==32302==     in use at exit: 0 bytes in 0 blocks 
==32302==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32302==  
==32302== All heap blocks were freed -- no leaks are possible 
==32302==  
==32302== For counts of detected and suppressed errors, rerun with: -v 
==32302== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 23

==32303== Memcheck, a memory error detector 
==32303== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32303== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32303== Command: s 002023 
==32303==  
==32303== Invalid write of size 4 
==32303==    at 0x40265A: dynamic_buffer_overrun_023 (in ) 
==32303==    by 0x402D76: dynamic_buffer_overrun_main (in ) 
==32303==    by 0x4017DA: main (in ) 
==32303==  Address 0x5720054 is 0 bytes after a block of size 20 alloc'd 
==32303==    at 0x4C2CC70: calloc (in ) 
==32303==    by 0x402639: dynamic_buffer_overrun_023 (in ) 
==32303==    by 0x402D76: dynamic_buffer_overrun_main (in ) 
==32303==    by 0x4017DA: main (in ) 
==32303==  
==32303==  
==32303== HEAP SUMMARY: 
==32303==     in use at exit: 0 bytes in 0 blocks 
==32303==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32303==  
==32303== All heap blocks were freed -- no leaks are possible 
==32303==  
==32303== For counts of detected and suppressed errors, rerun with: -v 
==32303== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 24

==32304== Memcheck, a memory error detector 
==32304== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32304== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32304== Command: s 002024 
==32304==  
==32304== Invalid write of size 4 
==32304==    at 0x40268D: dynamic_buffer_overrun_024_func_001 (in ) 
==32304==    by 0x4026BB: dynamic_buffer_overrun_024 (in ) 
==32304==    by 0x402D98: dynamic_buffer_overrun_main (in ) 
==32304==    by 0x4017DA: main (in ) 
==32304==  Address 0x5720054 is 0 bytes after a block of size 20 alloc'd 
==32304==    at 0x4C2CC70: calloc (in ) 
==32304==    by 0x4026AB: dynamic_buffer_overrun_024 (in ) 
==32304==    by 0x402D98: dynamic_buffer_overrun_main (in ) 
==32304==    by 0x4017DA: main (in ) 
==32304==  
==32304==  
==32304== HEAP SUMMARY: 
==32304==     in use at exit: 0 bytes in 0 blocks 
==32304==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32304==  
==32304== All heap blocks were freed -- no leaks are possible 
==32304==  
==32304== For counts of detected and suppressed errors, rerun with: -v 
==32304== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 25

==32305== Memcheck, a memory error detector 
==32305== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32305== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32305== Command: s 002025 
==32305==  
==32305== Invalid write of size 1 
==32305==    at 0x402709: dynamic_buffer_overrun_025 (in ) 
==32305==    by 0x402DBA: dynamic_buffer_overrun_main (in ) 
==32305==    by 0x4017DA: main (in ) 
==32305==  Address 0x5720045 is 0 bytes after a block of size 5 alloc'd 
==32305==    at 0x4C2CC70: calloc (in ) 
==32305==    by 0x4026E7: dynamic_buffer_overrun_025 (in ) 
==32305==    by 0x402DBA: dynamic_buffer_overrun_main (in ) 
==32305==    by 0x4017DA: main (in ) 
==32305==  
==32305==  
==32305== HEAP SUMMARY: 
==32305==     in use at exit: 0 bytes in 0 blocks 
==32305==   total heap usage: 1 allocs, 1 frees, 5 bytes allocated 
==32305==  
==32305== All heap blocks were freed -- no leaks are possible 
==32305==  
==32305== For counts of detected and suppressed errors, rerun with: -v 
==32305== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 26

==32306== Memcheck, a memory error detector 
==32306== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32306== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32306== Command: s 002026 
==32306==  
==32306== Invalid write of size 4 
==32306==    at 0x402756: dynamic_buffer_overrun_026 (in ) 
==32306==    by 0x402DDC: dynamic_buffer_overrun_main (in ) 
==32306==    by 0x4017DA: main (in ) 
==32306==  Address 0x5720054 is 15 bytes after a block of size 5 alloc'd 
==32306==    at 0x4C2CC70: calloc (in ) 
==32306==    by 0x40273A: dynamic_buffer_overrun_026 (in ) 
==32306==    by 0x402DDC: dynamic_buffer_overrun_main (in ) 
==32306==    by 0x4017DA: main (in ) 
==32306==  
==32306==  
==32306== HEAP SUMMARY: 
==32306==     in use at exit: 0 bytes in 0 blocks 
==32306==   total heap usage: 1 allocs, 1 frees, 5 bytes allocated 
==32306==  
==32306== All heap blocks were freed -- no leaks are possible 
==32306==  
==32306== For counts of detected and suppressed errors, rerun with: -v 
==32306== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 27

==32307== Memcheck, a memory error detector 
==32307== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32307== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32307== Command: s 002027 
==32307==  
==32307== Invalid write of size 1 
==32307==    at 0x40279C: dynamic_buffer_overrun_027 (in ) 
==32307==    by 0x402DFE: dynamic_buffer_overrun_main (in ) 
==32307==    by 0x4017DA: main (in ) 
==32307==  Address 0x572005e is 10 bytes after a block of size 20 alloc'd 
==32307==    at 0x4C2CC70: calloc (in ) 
==32307==    by 0x402780: dynamic_buffer_overrun_027 (in ) 
==32307==    by 0x402DFE: dynamic_buffer_overrun_main (in ) 
==32307==    by 0x4017DA: main (in ) 
==32307==  
==32307==  
==32307== HEAP SUMMARY: 
==32307==     in use at exit: 0 bytes in 0 blocks 
==32307==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32307==  
==32307== All heap blocks were freed -- no leaks are possible 
==32307==  
==32307== For counts of detected and suppressed errors, rerun with: -v 
==32307== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 28

==32308== Memcheck, a memory error detector 
==32308== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32308== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32308== Command: s 002028 
==32308==  
==32308== Invalid read of size 4 
==32308==    at 0x40280F: dynamic_buffer_overrun_028 (in ) 
==32308==    by 0x402E20: dynamic_buffer_overrun_main (in ) 
==32308==    by 0x4017DA: main (in ) 
==32308==  Address 0x5720054 is 0 bytes after a block of size 20 alloc'd 
==32308==    at 0x4C2CC70: calloc (in ) 
==32308==    by 0x4027C3: dynamic_buffer_overrun_028 (in ) 
==32308==    by 0x402E20: dynamic_buffer_overrun_main (in ) 
==32308==    by 0x4017DA: main (in ) 
==32308==  
==32308==  
==32308== HEAP SUMMARY: 
==32308==     in use at exit: 0 bytes in 0 blocks 
==32308==   total heap usage: 2 allocs, 2 frees, 32 bytes allocated 
==32308==  
==32308== All heap blocks were freed -- no leaks are possible 
==32308==  
==32308== For counts of detected and suppressed errors, rerun with: -v 
==32308== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 29

==32309== Memcheck, a memory error detector 
==32309== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32309== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32309== Command: s 002029 
==32309==  
==32309== Invalid write of size 1 
==32309==    at 0x402878: dynamic_buffer_overrun_029 (in ) 
==32309==    by 0x402E42: dynamic_buffer_overrun_main (in ) 
==32309==    by 0x4017DA: main (in ) 
==32309==  Address 0x5720042 is 1 bytes after a block of size 1 alloc'd 
==32309==    at 0x4C2AB80: malloc (in ) 
==32309==    by 0x40285C: dynamic_buffer_overrun_029 (in ) 
==32309==    by 0x402E42: dynamic_buffer_overrun_main (in ) 
==32309==    by 0x4017DA: main (in ) 
==32309==  
==32309==  
==32309== HEAP SUMMARY: 
==32309==     in use at exit: 0 bytes in 0 blocks 
==32309==   total heap usage: 1 allocs, 1 frees, 1 bytes allocated 
==32309==  
==32309== All heap blocks were freed -- no leaks are possible 
==32309==  
==32309== For counts of detected and suppressed errors, rerun with: -v 
==32309== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 30

==32310== Memcheck, a memory error detector 
==32310== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32310== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32310== Command: s 002030 
==32310==  
==32310== Invalid write of size 1 
==32310==    at 0x402910: dynamic_buffer_overrun_030 (in ) 
==32310==    by 0x402E64: dynamic_buffer_overrun_main (in ) 
==32310==    by 0x4017DA: main (in ) 
==32310==  Address 0x57200da is 0 bytes after a block of size 10 alloc'd 
==32310==    at 0x4C2AB80: malloc (in ) 
==32310==    by 0x4028D1: dynamic_buffer_overrun_030 (in ) 
==32310==    by 0x402E64: dynamic_buffer_overrun_main (in ) 
==32310==    by 0x4017DA: main (in ) 
==32310==  
==32310==  
==32310== HEAP SUMMARY: 
==32310==     in use at exit: 0 bytes in 0 blocks 
==32310==   total heap usage: 11 allocs, 11 frees, 180 bytes allocated 
==32310==  
==32310== All heap blocks were freed -- no leaks are possible 
==32310==  
==32310== For counts of detected and suppressed errors, rerun with: -v 
==32310== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 31

==32311== Memcheck, a memory error detector 
==32311== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32311== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32311== Command: s 002031 
==32311==  
==32311== Invalid write of size 1 
==32311==    at 0x4029A8: dynamic_buffer_overrun_031 (in ) 
==32311==    by 0x402E86: dynamic_buffer_overrun_main (in ) 
==32311==    by 0x4017DA: main (in ) 
==32311==  Address 0x572004c is 0 bytes after a block of size 12 alloc'd 
==32311==    at 0x4C2CC70: calloc (in ) 
==32311==    by 0x40297E: dynamic_buffer_overrun_031 (in ) 
==32311==    by 0x402E86: dynamic_buffer_overrun_main (in ) 
==32311==    by 0x4017DA: main (in ) 
==32311==  
==32311==  
==32311== HEAP SUMMARY: 
==32311==     in use at exit: 0 bytes in 0 blocks 
==32311==   total heap usage: 1 allocs, 1 frees, 12 bytes allocated 
==32311==  
==32311== All heap blocks were freed -- no leaks are possible 
==32311==  
==32311== For counts of detected and suppressed errors, rerun with: -v 
==32311== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 2 32

==32312== Memcheck, a memory error detector 
==32312== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32312== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32312== Command: s 002032 
==32312==  
==32312== Invalid write of size 1 
==32312==    at 0x402A49: dynamic_buffer_overrun_032 (in ) 
==32312==    by 0x402EA8: dynamic_buffer_overrun_main (in ) 
==32312==    by 0x4017DA: main (in ) 
==32312==  Address 0x5720252 is 10 bytes after a block of size 520 alloc'd 
==32312==    at 0x4C2AB80: malloc (in ) 
==32312==    by 0x402A0B: dynamic_buffer_overrun_032 (in ) 
==32312==    by 0x402EA8: dynamic_buffer_overrun_main (in ) 
==32312==    by 0x4017DA: main (in ) 
==32312==  
==32312==  
==32312== HEAP SUMMARY: 
==32312==     in use at exit: 0 bytes in 0 blocks 
==32312==   total heap usage: 1 allocs, 1 frees, 520 bytes allocated 
==32312==  
==32312== All heap blocks were freed -- no leaks are possible 
==32312==  
==32312== For counts of detected and suppressed errors, rerun with: -v 
==32312== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 1

==32313== Memcheck, a memory error detector 
==32313== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32313== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32313== Command: s 003001 
==32313==  
==32313== Invalid write of size 1 
==32313==    at 0x40423D: dynamic_buffer_underrun_001 (in ) 
==32313==    by 0x405378: dynamic_buffer_underrun_main (in ) 
==32313==    by 0x4017F7: main (in ) 
==32313==  Address 0x572003f is 1 bytes before a block of size 5 alloc'd 
==32313==    at 0x4C2CC70: calloc (in ) 
==32313==    by 0x40420C: dynamic_buffer_underrun_001 (in ) 
==32313==    by 0x405378: dynamic_buffer_underrun_main (in ) 
==32313==    by 0x4017F7: main (in ) 
==32313==  
==32313==  
==32313== HEAP SUMMARY: 
==32313==     in use at exit: 0 bytes in 0 blocks 
==32313==   total heap usage: 1 allocs, 1 frees, 5 bytes allocated 
==32313==  
==32313== All heap blocks were freed -- no leaks are possible 
==32313==  
==32313== For counts of detected and suppressed errors, rerun with: -v 
==32313== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 2

==32314== Memcheck, a memory error detector 
==32314== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32314== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32314== Command: s 003002 
==32314==  
==32314== Invalid write of size 2 
==32314==    at 0x404291: dynamic_buffer_underrun_002 (in ) 
==32314==    by 0x40539A: dynamic_buffer_underrun_main (in ) 
==32314==    by 0x4017F7: main (in ) 
==32314==  Address 0x5720036 is 10 bytes before a block of size 10 alloc'd 
==32314==    at 0x4C2CC70: calloc (in ) 
==32314==    by 0x40427D: dynamic_buffer_underrun_002 (in ) 
==32314==    by 0x40539A: dynamic_buffer_underrun_main (in ) 
==32314==    by 0x4017F7: main (in ) 
==32314==  
==32314==  
==32314== HEAP SUMMARY: 
==32314==     in use at exit: 0 bytes in 0 blocks 
==32314==   total heap usage: 1 allocs, 1 frees, 10 bytes allocated 
==32314==  
==32314== All heap blocks were freed -- no leaks are possible 
==32314==  
==32314== For counts of detected and suppressed errors, rerun with: -v 
==32314== ERROR SUMMARY: 2 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 3

==32315== Memcheck, a memory error detector 
==32315== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32315== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32315== Command: s 003003 
==32315==  
==32315== Invalid read of size 4 
==32315==    at 0x4042F7: dynamic_buffer_underrun_003 (in ) 
==32315==    by 0x4053BC: dynamic_buffer_underrun_main (in ) 
==32315==    by 0x4017F7: main (in ) 
==32315==  Address 0x572003c is 4 bytes before a block of size 20 alloc'd 
==32315==    at 0x4C2CC70: calloc (in ) 
==32315==    by 0x4042BA: dynamic_buffer_underrun_003 (in ) 
==32315==    by 0x4053BC: dynamic_buffer_underrun_main (in ) 
==32315==    by 0x4017F7: main (in ) 
==32315==  
==32315==  
==32315== HEAP SUMMARY: 
==32315==     in use at exit: 0 bytes in 0 blocks 
==32315==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32315==  
==32315== All heap blocks were freed -- no leaks are possible 
==32315==  
==32315== For counts of detected and suppressed errors, rerun with: -v 
==32315== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 4

==32316== Memcheck, a memory error detector 
==32316== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32316== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32316== Command: s 003004 
==32316==  
==32316== Invalid write of size 4 
==32316==    at 0x404349: dynamic_buffer_underrun_004 (in ) 
==32316==    by 0x4053DE: dynamic_buffer_underrun_main (in ) 
==32316==    by 0x4017F7: main (in ) 
==32316==  Address 0x572002c is 20 bytes before a block of size 20 alloc'd 
==32316==    at 0x4C2CC70: calloc (in ) 
==32316==    by 0x404335: dynamic_buffer_underrun_004 (in ) 
==32316==    by 0x4053DE: dynamic_buffer_underrun_main (in ) 
==32316==    by 0x4017F7: main (in ) 
==32316==  
==32316==  
==32316== HEAP SUMMARY: 
==32316==     in use at exit: 0 bytes in 0 blocks 
==32316==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32316==  
==32316== All heap blocks were freed -- no leaks are possible 
==32316==  
==32316== For counts of detected and suppressed errors, rerun with: -v 
==32316== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 5

==32317== Memcheck, a memory error detector 
==32317== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32317== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32317== Command: s 003005 
==32317==  
==32317== Invalid write of size 8 
==32317==    at 0x40439C: dynamic_buffer_underrun_005 (in ) 
==32317==    by 0x405400: dynamic_buffer_underrun_main (in ) 
==32317==    by 0x4017F7: main (in ) 
==32317==  Address 0x5720038 is 8 bytes before a block of size 40 alloc'd 
==32317==    at 0x4C2CC70: calloc (in ) 
==32317==    by 0x404373: dynamic_buffer_underrun_005 (in ) 
==32317==    by 0x405400: dynamic_buffer_underrun_main (in ) 
==32317==    by 0x4017F7: main (in ) 
==32317==  
==32317==  
==32317== HEAP SUMMARY: 
==32317==     in use at exit: 0 bytes in 0 blocks 
==32317==   total heap usage: 1 allocs, 1 frees, 40 bytes allocated 
==32317==  
==32317== All heap blocks were freed -- no leaks are possible 
==32317==  
==32317== For counts of detected and suppressed errors, rerun with: -v 
==32317== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 6

==32318== Memcheck, a memory error detector 
==32318== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32318== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32318== Command: s 003006 
==32318==  
==32318== Invalid write of size 4 
==32318==    at 0x404400: dynamic_buffer_underrun_006 (in ) 
==32318==    by 0x405422: dynamic_buffer_underrun_main (in ) 
==32318==    by 0x4017F7: main (in ) 
==32318==  Address 0x572003c is 4 bytes before a block of size 20 alloc'd 
==32318==    at 0x4C2CC70: calloc (in ) 
==32318==    by 0x4043D1: dynamic_buffer_underrun_006 (in ) 
==32318==    by 0x405422: dynamic_buffer_underrun_main (in ) 
==32318==    by 0x4017F7: main (in ) 
==32318==  
==32318==  
==32318== HEAP SUMMARY: 
==32318==     in use at exit: 0 bytes in 0 blocks 
==32318==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32318==  
==32318== All heap blocks were freed -- no leaks are possible 
==32318==  
==32318== For counts of detected and suppressed errors, rerun with: -v 
==32318== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 7

==32319== Memcheck, a memory error detector 
==32319== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32319== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32319== Command: s 003007 
==32319==  
==32319== Invalid write of size 8 
==32319==    at 0x404463: dynamic_buffer_underrun_007 (in ) 
==32319==    by 0x405444: dynamic_buffer_underrun_main (in ) 
==32319==    by 0x4017F7: main (in ) 
==32319==  Address 0x5720038 is 8 bytes before a block of size 40 alloc'd 
==32319==    at 0x4C2CC70: calloc (in ) 
==32319==    by 0x404430: dynamic_buffer_underrun_007 (in ) 
==32319==    by 0x405444: dynamic_buffer_underrun_main (in ) 
==32319==    by 0x4017F7: main (in ) 
==32319==  
==32319==  
==32319== HEAP SUMMARY: 
==32319==     in use at exit: 0 bytes in 0 blocks 
==32319==   total heap usage: 1 allocs, 1 frees, 40 bytes allocated 
==32319==  
==32319== All heap blocks were freed -- no leaks are possible 
==32319==  
==32319== For counts of detected and suppressed errors, rerun with: -v 
==32319== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 8

==32320== Memcheck, a memory error detector 
==32320== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32320== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32320== Command: s 003008 
==32320==  
==32320== Invalid read of size 8 
==32320==    at 0x4044FA: dynamic_buffer_underrun_008 (in ) 
==32320==    by 0x405466: dynamic_buffer_underrun_main (in ) 
==32320==    by 0x4017F7: main (in ) 
==32320==  Address 0x5720038 is 8 bytes before a block of size 40 alloc'd 
==32320==    at 0x4C2CC70: calloc (in ) 
==32320==    by 0x404495: dynamic_buffer_underrun_008 (in ) 
==32320==    by 0x405466: dynamic_buffer_underrun_main (in ) 
==32320==    by 0x4017F7: main (in ) 
==32320==  
==32320== Invalid write of size 4 
==32320==    at 0x40450D: dynamic_buffer_underrun_008 (in ) 
==32320==    by 0x405466: dynamic_buffer_underrun_main (in ) 
==32320==    by 0x4017F7: main (in ) 
==32320==  Address 0x0 is not stack'd, malloc'd or (recently) free'd 
==32320==  
==32320==  
==32320== Process terminating with default action of signal 11 (SIGSEGV) 
==32320==  Access not within mapped region at address 0x0 
==32320==    at 0x40450D: dynamic_buffer_underrun_008 (in ) 
==32320==    by 0x405466: dynamic_buffer_underrun_main (in ) 
==32320==    by 0x4017F7: main (in ) 
==32320==  If you believe this happened as a result of a stack 
==32320==  overflow in your program's main thread (unlikely but 
==32320==  possible), you can try to increase the size of the 
==32320==  main thread stack using the --main-stacksize= flag. 
==32320==  The main thread stack size used in this run was 8388608. 
==32320==  
==32320== HEAP SUMMARY: 
==32320==     in use at exit: 140 bytes in 6 blocks 
==32320==   total heap usage: 6 allocs, 0 frees, 140 bytes allocated 
==32320==  
==32320== LEAK SUMMARY: 
==32320==    definitely lost: 0 bytes in 0 blocks 
==32320==    indirectly lost: 0 bytes in 0 blocks 
==32320==      possibly lost: 0 bytes in 0 blocks 
==32320==    still reachable: 140 bytes in 6 blocks 
==32320==         suppressed: 0 bytes in 0 blocks 
==32320== Rerun with --leak-check=full to see details of leaked memory 
==32320==  
==32320== For counts of detected and suppressed errors, rerun with: -v 
==32320== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 9

==32324== Memcheck, a memory error detector 
==32324== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32324== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32324== Command: s 003009 
==32324==  
==32324== Invalid write of size 4 
==32324==    at 0x404617: dynamic_buffer_underrun_009 (in ) 
==32324==    by 0x405488: dynamic_buffer_underrun_main (in ) 
==32324==    by 0x4017F7: main (in ) 
==32324==  Address 0x10 is not stack'd, malloc'd or (recently) free'd 
==32324==  
==32324==  
==32324== Process terminating with default action of signal 11 (SIGSEGV) 
==32324==  Access not within mapped region at address 0x10 
==32324==    at 0x404617: dynamic_buffer_underrun_009 (in ) 
==32324==    by 0x405488: dynamic_buffer_underrun_main (in ) 
==32324==    by 0x4017F7: main (in ) 
==32324==  If you believe this happened as a result of a stack 
==32324==  overflow in your program's main thread (unlikely but 
==32324==  possible), you can try to increase the size of the 
==32324==  main thread stack using the --main-stacksize= flag. 
==32324==  The main thread stack size used in this run was 8388608. 
==32324==  
==32324== HEAP SUMMARY: 
==32324==     in use at exit: 100 bytes in 5 blocks 
==32324==   total heap usage: 5 allocs, 0 frees, 100 bytes allocated 
==32324==  
==32324== LEAK SUMMARY: 
==32324==    definitely lost: 0 bytes in 0 blocks 
==32324==    indirectly lost: 0 bytes in 0 blocks 
==32324==      possibly lost: 0 bytes in 0 blocks 
==32324==    still reachable: 100 bytes in 5 blocks 
==32324==         suppressed: 0 bytes in 0 blocks 
==32324== Rerun with --leak-check=full to see details of leaked memory 
==32324==  
==32324== For counts of detected and suppressed errors, rerun with: -v 
==32324== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 10

==32328== Memcheck, a memory error detector 
==32328== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32328== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32328== Command: s 003010 
==32328==  
==32328== Invalid write of size 4 
==32328==    at 0x40468F: dynamic_buffer_underrun_010 (in ) 
==32328==    by 0x4054AA: dynamic_buffer_underrun_main (in ) 
==32328==    by 0x4017F7: main (in ) 
==32328==  Address 0x5720034 is 12 bytes before a block of size 60 alloc'd 
==32328==    at 0x4C2CC70: calloc (in ) 
==32328==    by 0x40467B: dynamic_buffer_underrun_010 (in ) 
==32328==    by 0x4054AA: dynamic_buffer_underrun_main (in ) 
==32328==    by 0x4017F7: main (in ) 
==32328==  
==32328==  
==32328== HEAP SUMMARY: 
==32328==     in use at exit: 0 bytes in 0 blocks 
==32328==   total heap usage: 1 allocs, 1 frees, 60 bytes allocated 
==32328==  
==32328== All heap blocks were freed -- no leaks are possible 
==32328==  
==32328== For counts of detected and suppressed errors, rerun with: -v 
==32328== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 11

vflag_file = 3 vflag_func = 11 vflag_copy =3011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 3 12

==32330== Memcheck, a memory error detector 
==32330== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32330== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32330== Command: s 003012 
==32330==  
==32330== Invalid write of size 4 
==32330==    at 0x404723: dynamic_buffer_underrun_012 (in ) 
==32330==    by 0x4054EE: dynamic_buffer_underrun_main (in ) 
==32330==    by 0x4017F7: main (in ) 
==32330==  Address 0x572002c is 20 bytes before a block of size 20 alloc'd 
==32330==    at 0x4C2CC70: calloc (in ) 
==32330==    by 0x4046FA: dynamic_buffer_underrun_012 (in ) 
==32330==    by 0x4054EE: dynamic_buffer_underrun_main (in ) 
==32330==    by 0x4017F7: main (in ) 
==32330==  
==32330==  
==32330== HEAP SUMMARY: 
==32330==     in use at exit: 0 bytes in 0 blocks 
==32330==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32330==  
==32330== All heap blocks were freed -- no leaks are possible 
==32330==  
==32330== For counts of detected and suppressed errors, rerun with: -v 
==32330== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 13

==32331== Memcheck, a memory error detector 
==32331== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32331== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32331== Command: s 003013 
==32331==  
==32331== Invalid write of size 4 
==32331==    at 0x404781: dynamic_buffer_underrun_013 (in ) 
==32331==    by 0x405510: dynamic_buffer_underrun_main (in ) 
==32331==    by 0x4017F7: main (in ) 
==32331==  Address 0xfffffffe5744eaac is not stack'd, malloc'd or (recently) free'd 
==32331==  
==32331==  
==32331== Process terminating with default action of signal 11 (SIGSEGV) 
==32331==  Access not within mapped region at address 0xFFFFFFFE5744EAAC 
==32331==    at 0x404781: dynamic_buffer_underrun_013 (in ) 
==32331==    by 0x405510: dynamic_buffer_underrun_main (in ) 
==32331==    by 0x4017F7: main (in ) 
==32331==  If you believe this happened as a result of a stack 
==32331==  overflow in your program's main thread (unlikely but 
==32331==  possible), you can try to increase the size of the 
==32331==  main thread stack using the --main-stacksize= flag. 
==32331==  The main thread stack size used in this run was 8388608. 
==32331==  
==32331== HEAP SUMMARY: 
==32331==     in use at exit: 20 bytes in 1 blocks 
==32331==   total heap usage: 1 allocs, 0 frees, 20 bytes allocated 
==32331==  
==32331== LEAK SUMMARY: 
==32331==    definitely lost: 0 bytes in 0 blocks 
==32331==    indirectly lost: 0 bytes in 0 blocks 
==32331==      possibly lost: 0 bytes in 0 blocks 
==32331==    still reachable: 20 bytes in 1 blocks 
==32331==         suppressed: 0 bytes in 0 blocks 
==32331== Rerun with --leak-check=full to see details of leaked memory 
==32331==  
==32331== For counts of detected and suppressed errors, rerun with: -v 
==32331== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 14

==32335== Memcheck, a memory error detector 
==32335== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32335== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32335== Command: s 003014 
==32335==  
==32335== Invalid write of size 4 
==32335==    at 0x4047DB: dynamic_buffer_underrun_014 (in ) 
==32335==    by 0x405532: dynamic_buffer_underrun_main (in ) 
==32335==    by 0x4017F7: main (in ) 
==32335==  Address 0x572002c is 20 bytes before a block of size 20 alloc'd 
==32335==    at 0x4C2CC70: calloc (in ) 
==32335==    by 0x4047AB: dynamic_buffer_underrun_014 (in ) 
==32335==    by 0x405532: dynamic_buffer_underrun_main (in ) 
==32335==    by 0x4017F7: main (in ) 
==32335==  
==32335==  
==32335== HEAP SUMMARY: 
==32335==     in use at exit: 0 bytes in 0 blocks 
==32335==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32335==  
==32335== All heap blocks were freed -- no leaks are possible 
==32335==  
==32335== For counts of detected and suppressed errors, rerun with: -v 
==32335== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 15

==32336== Memcheck, a memory error detector 
==32336== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32336== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32336== Command: s 003015 
==32336==  
==32336== Invalid write of size 4 
==32336==    at 0x404830: dynamic_buffer_underrun_015 (in ) 
==32336==    by 0x405554: dynamic_buffer_underrun_main (in ) 
==32336==    by 0x4017F7: main (in ) 
==32336==  Address 0x572003c is 4 bytes before a block of size 20 alloc'd 
==32336==    at 0x4C2CC70: calloc (in ) 
==32336==    by 0x404805: dynamic_buffer_underrun_015 (in ) 
==32336==    by 0x405554: dynamic_buffer_underrun_main (in ) 
==32336==    by 0x4017F7: main (in ) 
==32336==  
==32336==  
==32336== HEAP SUMMARY: 
==32336==     in use at exit: 0 bytes in 0 blocks 
==32336==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32336==  
==32336== All heap blocks were freed -- no leaks are possible 
==32336==  
==32336== For counts of detected and suppressed errors, rerun with: -v 
==32336== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 16

==32337== Memcheck, a memory error detector 
==32337== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32337== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32337== Command: s 003016 
==32337==  
==32337== Invalid write of size 4 
==32337==    at 0x40488C: dynamic_buffer_underrun_016 (in ) 
==32337==    by 0x405576: dynamic_buffer_underrun_main (in ) 
==32337==    by 0x4017F7: main (in ) 
==32337==  Address 0x572003c is 4 bytes before a block of size 20 alloc'd 
==32337==    at 0x4C2CC70: calloc (in ) 
==32337==    by 0x404865: dynamic_buffer_underrun_016 (in ) 
==32337==    by 0x405576: dynamic_buffer_underrun_main (in ) 
==32337==    by 0x4017F7: main (in ) 
==32337==  
==32337==  
==32337== HEAP SUMMARY: 
==32337==     in use at exit: 0 bytes in 0 blocks 
==32337==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32337==  
==32337== All heap blocks were freed -- no leaks are possible 
==32337==  
==32337== For counts of detected and suppressed errors, rerun with: -v 
==32337== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 17

==32338== Memcheck, a memory error detector 
==32338== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32338== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32338== Command: s 003017 
==32338==  
==32338== Invalid write of size 4 
==32338==    at 0x4048DB: dynamic_buffer_underrun_017_func_001 (in ) 
==32338==    by 0x4048FC: dynamic_buffer_underrun_017 (in ) 
==32338==    by 0x405598: dynamic_buffer_underrun_main (in ) 
==32338==    by 0x4017F7: main (in ) 
==32338==  Address 0x572002c is 20 bytes before a block of size 20 alloc'd 
==32338==    at 0x4C2CC70: calloc (in ) 
==32338==    by 0x4048B9: dynamic_buffer_underrun_017_func_001 (in ) 
==32338==    by 0x4048FC: dynamic_buffer_underrun_017 (in ) 
==32338==    by 0x405598: dynamic_buffer_underrun_main (in ) 
==32338==    by 0x4017F7: main (in ) 
==32338==  
==32338==  
==32338== HEAP SUMMARY: 
==32338==     in use at exit: 0 bytes in 0 blocks 
==32338==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32338==  
==32338== All heap blocks were freed -- no leaks are possible 
==32338==  
==32338== For counts of detected and suppressed errors, rerun with: -v 
==32338== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 18

==32339== Memcheck, a memory error detector 
==32339== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32339== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32339== Command: s 003018 
==32339==  
==32339== Invalid write of size 4 
==32339==    at 0x404960: dynamic_buffer_underrun_018 (in ) 
==32339==    by 0x4055BA: dynamic_buffer_underrun_main (in ) 
==32339==    by 0x4017F7: main (in ) 
==32339==  Address 0x572002c is 20 bytes before a block of size 20 alloc'd 
==32339==    at 0x4C2CC70: calloc (in ) 
==32339==    by 0x404915: dynamic_buffer_underrun_018 (in ) 
==32339==    by 0x4055BA: dynamic_buffer_underrun_main (in ) 
==32339==    by 0x4017F7: main (in ) 
==32339==  
==32339==  
==32339== HEAP SUMMARY: 
==32339==     in use at exit: 0 bytes in 0 blocks 
==32339==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32339==  
==32339== All heap blocks were freed -- no leaks are possible 
==32339==  
==32339== For counts of detected and suppressed errors, rerun with: -v 
==32339== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 19

==32340== Memcheck, a memory error detector 
==32340== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32340== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32340== Command: s 003019 
==32340==  
==32340== Invalid write of size 4 
==32340==    at 0x4049B7: dynamic_buffer_underrun_019 (in ) 
==32340==    by 0x4055DC: dynamic_buffer_underrun_main (in ) 
==32340==    by 0x4017F7: main (in ) 
==32340==  Address 0x572002c is 20 bytes before a block of size 20 alloc'd 
==32340==    at 0x4C2CC70: calloc (in ) 
==32340==    by 0x40498A: dynamic_buffer_underrun_019 (in ) 
==32340==    by 0x4055DC: dynamic_buffer_underrun_main (in ) 
==32340==    by 0x4017F7: main (in ) 
==32340==  
==32340==  
==32340== HEAP SUMMARY: 
==32340==     in use at exit: 0 bytes in 0 blocks 
==32340==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32340==  
==32340== All heap blocks were freed -- no leaks are possible 
==32340==  
==32340== For counts of detected and suppressed errors, rerun with: -v 
==32340== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 20

==32341== Memcheck, a memory error detector 
==32341== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32341== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32341== Command: s 003020 
==32341==  
==32341== Invalid write of size 4 
==32341==    at 0x404A14: dynamic_buffer_underrun_020 (in ) 
==32341==    by 0x4055FE: dynamic_buffer_underrun_main (in ) 
==32341==    by 0x4017F7: main (in ) 
==32341==  Address 0x572002c is 20 bytes before a block of size 20 alloc'd 
==32341==    at 0x4C2CC70: calloc (in ) 
==32341==    by 0x4049E1: dynamic_buffer_underrun_020 (in ) 
==32341==    by 0x4055FE: dynamic_buffer_underrun_main (in ) 
==32341==    by 0x4017F7: main (in ) 
==32341==  
==32341==  
==32341== HEAP SUMMARY: 
==32341==     in use at exit: 0 bytes in 0 blocks 
==32341==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32341==  
==32341== All heap blocks were freed -- no leaks are possible 
==32341==  
==32341== For counts of detected and suppressed errors, rerun with: -v 
==32341== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 21

==32342== Memcheck, a memory error detector 
==32342== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32342== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32342== Command: s 003021 
==32342==  
==32342== Invalid write of size 4 
==32342==    at 0x404A62: dynamic_buffer_underrun_021 (in ) 
==32342==    by 0x405620: dynamic_buffer_underrun_main (in ) 
==32342==    by 0x4017F7: main (in ) 
==32342==  Address 0x572002c is 20 bytes before a block of size 20 alloc'd 
==32342==    at 0x4C2CC70: calloc (in ) 
==32342==    by 0x404A3E: dynamic_buffer_underrun_021 (in ) 
==32342==    by 0x405620: dynamic_buffer_underrun_main (in ) 
==32342==    by 0x4017F7: main (in ) 
==32342==  
==32342==  
==32342== HEAP SUMMARY: 
==32342==     in use at exit: 0 bytes in 0 blocks 
==32342==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32342==  
==32342== All heap blocks were freed -- no leaks are possible 
==32342==  
==32342== For counts of detected and suppressed errors, rerun with: -v 
==32342== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 22

==32343== Memcheck, a memory error detector 
==32343== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32343== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32343== Command: s 003022 
==32343==  
==32343== Invalid write of size 4 
==32343==    at 0x404AA8: dynamic_buffer_underrun_022 (in ) 
==32343==    by 0x405642: dynamic_buffer_underrun_main (in ) 
==32343==    by 0x4017F7: main (in ) 
==32343==  Address 0x572002c is 20 bytes before a block of size 20 alloc'd 
==32343==    at 0x4C2CC70: calloc (in ) 
==32343==    by 0x404A8C: dynamic_buffer_underrun_022 (in ) 
==32343==    by 0x405642: dynamic_buffer_underrun_main (in ) 
==32343==    by 0x4017F7: main (in ) 
==32343==  
==32343==  
==32343== HEAP SUMMARY: 
==32343==     in use at exit: 0 bytes in 0 blocks 
==32343==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32343==  
==32343== All heap blocks were freed -- no leaks are possible 
==32343==  
==32343== For counts of detected and suppressed errors, rerun with: -v 
==32343== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 23

==32344== Memcheck, a memory error detector 
==32344== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32344== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32344== Command: s 003023 
==32344==  
==32344== Invalid write of size 4 
==32344==    at 0x404B03: dynamic_buffer_underrun_023 (in ) 
==32344==    by 0x405664: dynamic_buffer_underrun_main (in ) 
==32344==    by 0x4017F7: main (in ) 
==32344==  Address 0x572003c is 4 bytes before a block of size 20 alloc'd 
==32344==    at 0x4C2CC70: calloc (in ) 
==32344==    by 0x404AD2: dynamic_buffer_underrun_023 (in ) 
==32344==    by 0x405664: dynamic_buffer_underrun_main (in ) 
==32344==    by 0x4017F7: main (in ) 
==32344==  
==32344==  
==32344== HEAP SUMMARY: 
==32344==     in use at exit: 0 bytes in 0 blocks 
==32344==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32344==  
==32344== All heap blocks were freed -- no leaks are possible 
==32344==  
==32344== For counts of detected and suppressed errors, rerun with: -v 
==32344== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 24

==32345== Memcheck, a memory error detector 
==32345== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32345== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32345== Command: s 003024 
==32345==  
==32345== Invalid write of size 4 
==32345==    at 0x404B31: dynamic_buffer_underrun_024_func_001 (in ) 
==32345==    by 0x404B66: dynamic_buffer_underrun_024 (in ) 
==32345==    by 0x405686: dynamic_buffer_underrun_main (in ) 
==32345==    by 0x4017F7: main (in ) 
==32345==  Address 0x572002c is 20 bytes before a block of size 20 alloc'd 
==32345==    at 0x4C2CC70: calloc (in ) 
==32345==    by 0x404B4F: dynamic_buffer_underrun_024 (in ) 
==32345==    by 0x405686: dynamic_buffer_underrun_main (in ) 
==32345==    by 0x4017F7: main (in ) 
==32345==  
==32345==  
==32345== HEAP SUMMARY: 
==32345==     in use at exit: 0 bytes in 0 blocks 
==32345==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32345==  
==32345== All heap blocks were freed -- no leaks are possible 
==32345==  
==32345== For counts of detected and suppressed errors, rerun with: -v 
==32345== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 25

==32346== Memcheck, a memory error detector 
==32346== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32346== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32346== Command: s 003025 
==32346==  
==32346== Invalid write of size 1 
==32346==    at 0x404BAD: dynamic_buffer_underrun_025 (in ) 
==32346==    by 0x4056A8: dynamic_buffer_underrun_main (in ) 
==32346==    by 0x4017F7: main (in ) 
==32346==  Address 0x572003f is 1 bytes before a block of size 5 alloc'd 
==32346==    at 0x4C2CC70: calloc (in ) 
==32346==    by 0x404B8B: dynamic_buffer_underrun_025 (in ) 
==32346==    by 0x4056A8: dynamic_buffer_underrun_main (in ) 
==32346==    by 0x4017F7: main (in ) 
==32346==  
==32346==  
==32346== HEAP SUMMARY: 
==32346==     in use at exit: 0 bytes in 0 blocks 
==32346==   total heap usage: 1 allocs, 1 frees, 5 bytes allocated 
==32346==  
==32346== All heap blocks were freed -- no leaks are possible 
==32346==  
==32346== For counts of detected and suppressed errors, rerun with: -v 
==32346== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 26

==32347== Memcheck, a memory error detector 
==32347== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32347== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32347== Command: s 003026 
==32347==  
==32347== Invalid write of size 4 
==32347==    at 0x404BFA: dynamic_buffer_underrun_026 (in ) 
==32347==    by 0x4056CA: dynamic_buffer_underrun_main (in ) 
==32347==    by 0x4017F7: main (in ) 
==32347==  Address 0x5720018 is not stack'd, malloc'd or (recently) free'd 
==32347==  
==32347==  
==32347== HEAP SUMMARY: 
==32347==     in use at exit: 0 bytes in 0 blocks 
==32347==   total heap usage: 1 allocs, 1 frees, 5 bytes allocated 
==32347==  
==32347== All heap blocks were freed -- no leaks are possible 
==32347==  
==32347== For counts of detected and suppressed errors, rerun with: -v 
==32347== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 27

==32348== Memcheck, a memory error detector 
==32348== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32348== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32348== Command: s 003027 
==32348==  
==32348== Invalid write of size 1 
==32348==    at 0x404C40: dynamic_buffer_underrun_027 (in ) 
==32348==    by 0x4056EC: dynamic_buffer_underrun_main (in ) 
==32348==    by 0x4017F7: main (in ) 
==32348==  Address 0x5720036 is 10 bytes before a block of size 20 alloc'd 
==32348==    at 0x4C2CC70: calloc (in ) 
==32348==    by 0x404C24: dynamic_buffer_underrun_027 (in ) 
==32348==    by 0x4056EC: dynamic_buffer_underrun_main (in ) 
==32348==    by 0x4017F7: main (in ) 
==32348==  
==32348==  
==32348== HEAP SUMMARY: 
==32348==     in use at exit: 0 bytes in 0 blocks 
==32348==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32348==  
==32348== All heap blocks were freed -- no leaks are possible 
==32348==  
==32348== For counts of detected and suppressed errors, rerun with: -v 
==32348== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 28

==32349== Memcheck, a memory error detector 
==32349== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32349== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32349== Command: s 003028 
==32349==  
==32349== Invalid write of size 4 
==32349==    at 0x404CC8: dynamic_buffer_underrun_028 (in ) 
==32349==    by 0x40570E: dynamic_buffer_underrun_main (in ) 
==32349==    by 0x4017F7: main (in ) 
==32349==  Address 0x5720090 is 16 bytes before a block of size 12 alloc'd 
==32349==    at 0x4C2CC70: calloc (in ) 
==32349==    by 0x404C7A: dynamic_buffer_underrun_028 (in ) 
==32349==    by 0x40570E: dynamic_buffer_underrun_main (in ) 
==32349==    by 0x4017F7: main (in ) 
==32349==  
==32349==  
==32349== HEAP SUMMARY: 
==32349==     in use at exit: 0 bytes in 0 blocks 
==32349==   total heap usage: 2 allocs, 2 frees, 32 bytes allocated 
==32349==  
==32349== All heap blocks were freed -- no leaks are possible 
==32349==  
==32349== For counts of detected and suppressed errors, rerun with: -v 
==32349== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 29

==32350== Memcheck, a memory error detector 
==32350== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32350== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32350== Command: s 003029 
==32350==  
==32350== Invalid write of size 1 
==32350==    at 0x404D0D: dynamic_buffer_underrun_029 (in ) 
==32350==    by 0x405730: dynamic_buffer_underrun_main (in ) 
==32350==    by 0x4017F7: main (in ) 
==32350==  Address 0x572003f is 1 bytes before a block of size 1 alloc'd 
==32350==    at 0x4C2AB80: malloc (in ) 
==32350==    by 0x404CF9: dynamic_buffer_underrun_029 (in ) 
==32350==    by 0x405730: dynamic_buffer_underrun_main (in ) 
==32350==    by 0x4017F7: main (in ) 
==32350==  
==32350==  
==32350== HEAP SUMMARY: 
==32350==     in use at exit: 0 bytes in 0 blocks 
==32350==   total heap usage: 1 allocs, 1 frees, 1 bytes allocated 
==32350==  
==32350== All heap blocks were freed -- no leaks are possible 
==32350==  
==32350== For counts of detected and suppressed errors, rerun with: -v 
==32350== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 30

==32351== Memcheck, a memory error detector 
==32351== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32351== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32351== Command: s 003030 
==32351==  
==32351== Invalid write of size 1 
==32351==    at 0x404DA1: dynamic_buffer_underrun_030 (in ) 
==32351==    by 0x405752: dynamic_buffer_underrun_main (in ) 
==32351==    by 0x4017F7: main (in ) 
==32351==  Address 0x57200cf is 1 bytes before a block of size 10 alloc'd 
==32351==    at 0x4C2CC70: calloc (in ) 
==32351==    by 0x404D62: dynamic_buffer_underrun_030 (in ) 
==32351==    by 0x405752: dynamic_buffer_underrun_main (in ) 
==32351==    by 0x4017F7: main (in ) 
==32351==  
==32351==  
==32351== HEAP SUMMARY: 
==32351==     in use at exit: 0 bytes in 0 blocks 
==32351==   total heap usage: 11 allocs, 11 frees, 180 bytes allocated 
==32351==  
==32351== All heap blocks were freed -- no leaks are possible 
==32351==  
==32351== For counts of detected and suppressed errors, rerun with: -v 
==32351== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 31

==32352== Memcheck, a memory error detector 
==32352== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32352== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32352== Command: s 003031 
==32352==  
==32352== Invalid write of size 1 
==32352==    at 0x404E44: dynamic_buffer_underrun_031 (in ) 
==32352==    by 0x405774: dynamic_buffer_underrun_main (in ) 
==32352==    by 0x4017F7: main (in ) 
==32352==  Address 0x572003f is 1 bytes before a block of size 12 alloc'd 
==32352==    at 0x4C2CC70: calloc (in ) 
==32352==    by 0x404E0F: dynamic_buffer_underrun_031 (in ) 
==32352==    by 0x405774: dynamic_buffer_underrun_main (in ) 
==32352==    by 0x4017F7: main (in ) 
==32352==  
==32352==  
==32352== HEAP SUMMARY: 
==32352==     in use at exit: 0 bytes in 0 blocks 
==32352==   total heap usage: 1 allocs, 1 frees, 12 bytes allocated 
==32352==  
==32352== All heap blocks were freed -- no leaks are possible 
==32352==  
==32352== For counts of detected and suppressed errors, rerun with: -v 
==32352== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 32

==32353== Memcheck, a memory error detector 
==32353== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32353== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32353== Command: s 003032 
==32353==  
==32353== Invalid write of size 1 
==32353==    at 0x404EDF: dynamic_buffer_underrun_032 (in ) 
==32353==    by 0x405796: dynamic_buffer_underrun_main (in ) 
==32353==    by 0x4017F7: main (in ) 
==32353==  Address 0x572000b is not stack'd, malloc'd or (recently) free'd 
==32353==  
==32353==  
==32353== HEAP SUMMARY: 
==32353==     in use at exit: 0 bytes in 0 blocks 
==32353==   total heap usage: 1 allocs, 1 frees, 520 bytes allocated 
==32353==  
==32353== All heap blocks were freed -- no leaks are possible 
==32353==  
==32353== For counts of detected and suppressed errors, rerun with: -v 
==32353== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 33

==32354== Memcheck, a memory error detector 
==32354== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32354== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32354== Command: s 003033 
==32354==  
==32354== Invalid read of size 1 
==32354==    at 0x404F3C: dynamic_buffer_underrun_033 (in ) 
==32354==    by 0x4057B8: dynamic_buffer_underrun_main (in ) 
==32354==    by 0x4017F7: main (in ) 
==32354==  Address 0x572003f is 1 bytes before a block of size 12 alloc'd 
==32354==    at 0x4C2CC70: calloc (in ) 
==32354==    by 0x404F11: dynamic_buffer_underrun_033 (in ) 
==32354==    by 0x4057B8: dynamic_buffer_underrun_main (in ) 
==32354==    by 0x4017F7: main (in ) 
==32354==  
==32354==  
==32354== HEAP SUMMARY: 
==32354==     in use at exit: 0 bytes in 0 blocks 
==32354==   total heap usage: 1 allocs, 1 frees, 12 bytes allocated 
==32354==  
==32354== All heap blocks were freed -- no leaks are possible 
==32354==  
==32354== For counts of detected and suppressed errors, rerun with: -v 
==32354== ERROR SUMMARY: 2 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 34

vflag_file = 3 vflag_func = 34 vflag_copy =3034  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 3 35

==32356== Memcheck, a memory error detector 
==32356== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32356== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32356== Command: s 003035 
==32356==  
==32356== Invalid read of size 8 
==32356==    at 0x40509F: dynamic_buffer_underrun_035 (in ) 
==32356==    by 0x4057FC: dynamic_buffer_underrun_main (in ) 
==32356==    by 0x4017F7: main (in ) 
==32356==  Address 0x5720038 is 8 bytes before a block of size 80 alloc'd 
==32356==    at 0x4C2AB80: malloc (in ) 
==32356==    by 0x405047: dynamic_buffer_underrun_035 (in ) 
==32356==    by 0x4057FC: dynamic_buffer_underrun_main (in ) 
==32356==    by 0x4017F7: main (in ) 
==32356==  
==32356== Invalid write of size 1 
==32356==    at 0x4050AA: dynamic_buffer_underrun_035 (in ) 
==32356==    by 0x4057FC: dynamic_buffer_underrun_main (in ) 
==32356==    by 0x4017F7: main (in ) 
==32356==  Address 0x0 is not stack'd, malloc'd or (recently) free'd 
==32356==  
==32356==  
==32356== Process terminating with default action of signal 11 (SIGSEGV) 
==32356==  Access not within mapped region at address 0x0 
==32356==    at 0x4050AA: dynamic_buffer_underrun_035 (in ) 
==32356==    by 0x4057FC: dynamic_buffer_underrun_main (in ) 
==32356==    by 0x4017F7: main (in ) 
==32356==  If you believe this happened as a result of a stack 
==32356==  overflow in your program's main thread (unlikely but 
==32356==  possible), you can try to increase the size of the 
==32356==  main thread stack using the --main-stacksize= flag. 
==32356==  The main thread stack size used in this run was 8388608. 
==32356==  
==32356== HEAP SUMMARY: 
==32356==     in use at exit: 180 bytes in 11 blocks 
==32356==   total heap usage: 11 allocs, 0 frees, 180 bytes allocated 
==32356==  
==32356== LEAK SUMMARY: 
==32356==    definitely lost: 0 bytes in 0 blocks 
==32356==    indirectly lost: 0 bytes in 0 blocks 
==32356==      possibly lost: 0 bytes in 0 blocks 
==32356==    still reachable: 180 bytes in 11 blocks 
==32356==         suppressed: 0 bytes in 0 blocks 
==32356== Rerun with --leak-check=full to see details of leaked memory 
==32356==  
==32356== For counts of detected and suppressed errors, rerun with: -v 
==32356== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 36

==32360== Memcheck, a memory error detector 
==32360== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32360== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32360== Command: s 003036 
==32360==  
==32360== Invalid read of size 1 
==32360==    at 0x405179: dynamic_buffer_underrun_036 (in ) 
==32360==    by 0x40581E: dynamic_buffer_underrun_main (in ) 
==32360==    by 0x4017F7: main (in ) 
==32360==  Address 0x5720036 is 10 bytes before a block of size 10 alloc'd 
==32360==    at 0x4C2AB80: malloc (in ) 
==32360==    by 0x405151: dynamic_buffer_underrun_036 (in ) 
==32360==    by 0x40581E: dynamic_buffer_underrun_main (in ) 
==32360==    by 0x4017F7: main (in ) 
==32360==  
==32360==  
==32360== HEAP SUMMARY: 
==32360==     in use at exit: 0 bytes in 0 blocks 
==32360==   total heap usage: 1 allocs, 1 frees, 10 bytes allocated 
==32360==  
==32360== All heap blocks were freed -- no leaks are possible 
==32360==  
==32360== For counts of detected and suppressed errors, rerun with: -v 
==32360== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 37

==32361== Memcheck, a memory error detector 
==32361== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32361== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32361== Command: s 003037 
==32361==  
==32361== Conditional jump or move depends on uninitialised value(s) 
==32361==    at 0x405209: dynamic_buffer_underrun_037 (in ) 
==32361==    by 0x405840: dynamic_buffer_underrun_main (in ) 
==32361==    by 0x4017F7: main (in ) 
==32361==  
==32361== Invalid write of size 8 
==32361==    at 0x4051EC: dynamic_buffer_underrun_037 (in ) 
==32361==    by 0x405840: dynamic_buffer_underrun_main (in ) 
==32361==    by 0x4017F7: main (in ) 
==32361==  Address 0x5720000 is not stack'd, malloc'd or (recently) free'd 
==32361==  
==32361==  
==32361== HEAP SUMMARY: 
==32361==     in use at exit: 100 bytes in 10 blocks 
==32361==   total heap usage: 11 allocs, 1 frees, 180 bytes allocated 
==32361==  
==32361== LEAK SUMMARY: 
==32361==    definitely lost: 80 bytes in 8 blocks 
==32361==    indirectly lost: 0 bytes in 0 blocks 
==32361==      possibly lost: 0 bytes in 0 blocks 
==32361==    still reachable: 20 bytes in 2 blocks 
==32361==         suppressed: 0 bytes in 0 blocks 
==32361== Rerun with --leak-check=full to see details of leaked memory 
==32361==  
==32361== For counts of detected and suppressed errors, rerun with: -v 
==32361== Use --track-origins=yes to see where uninitialised values come from 
==32361== ERROR SUMMARY: 18 errors from 2 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 3 38

==32362== Memcheck, a memory error detector 
==32362== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32362== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32362== Command: s 003038 
==32362==  
==32362== Invalid write of size 1 
==32362==    at 0x4052A5: dynamic_buffer_underrun_038 (in ) 
==32362==    by 0x405862: dynamic_buffer_underrun_main (in ) 
==32362==    by 0x4017F7: main (in ) 
==32362==  Address 0x572000c is not stack'd, malloc'd or (recently) free'd 
==32362==  
==32362==  
==32362== HEAP SUMMARY: 
==32362==     in use at exit: 0 bytes in 0 blocks 
==32362==   total heap usage: 1 allocs, 1 frees, 520 bytes allocated 
==32362==  
==32362== All heap blocks were freed -- no leaks are possible 
==32362==  
==32362== For counts of detected and suppressed errors, rerun with: -v 
==32362== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 4 1

vflag_file = 4 vflag_func = 1 vflag_copy =4001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 4 2

vflag_file = 4 vflag_func = 2 vflag_copy =4002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 5 1

vflag_file = 5 vflag_func = 1 vflag_copy =5001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 5 2

vflag_file = 5 vflag_func = 2 vflag_copy =5002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 5 3

vflag_file = 5 vflag_func = 3 vflag_copy =5003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 5 4

vflag_file = 5 vflag_func = 4 vflag_copy =5004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 5 5

vflag_file = 5 vflag_func = 5 vflag_copy =5005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 5 6

vflag_file = 5 vflag_func = 6 vflag_copy =5006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 5 7

vflag_file = 5 vflag_func = 7 vflag_copy =5007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 5 8

vflag_file = 5 vflag_func = 8 vflag_copy =5008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 5 9

vflag_file = 5 vflag_func = 9 vflag_copy =5009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 5 10

vflag_file = 5 vflag_func = 10 vflag_copy =5010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 6 1

vflag_file = 6 vflag_func = 1 vflag_copy =6001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 6 2

vflag_file = 6 vflag_func = 2 vflag_copy =6002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 6 3

vflag_file = 6 vflag_func = 3 vflag_copy =6003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 6 4

vflag_file = 6 vflag_func = 4 vflag_copy =6004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 6 5

vflag_file = 6 vflag_func = 5 vflag_copy =6005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 6 6

vflag_file = 6 vflag_func = 6 vflag_copy =6006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 6 7

vflag_file = 6 vflag_func = 7 vflag_copy =6007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 6 8

vflag_file = 6 vflag_func = 8 vflag_copy =6008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 6 9

vflag_file = 6 vflag_func = 9 vflag_copy =6009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 6 10

vflag_file = 6 vflag_func = 10 vflag_copy =6010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 6 11

vflag_file = 6 vflag_func = 11 vflag_copy =6011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 6 12

vflag_file = 6 vflag_func = 12 vflag_copy =6012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 6 13

vflag_file = 6 vflag_func = 13 vflag_copy =6013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 6 14

vflag_file = 6 vflag_func = 14 vflag_copy =6014  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 6 15

vflag_file = 6 vflag_func = 15 vflag_copy =6015  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 6 16

vflag_file = 6 vflag_func = 16 vflag_copy =6016  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 6 17

vflag_file = 6 vflag_func = 17 vflag_copy =6017  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 6 18

vflag_file = 6 vflag_func = 18 vflag_copy =6018  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 6 19

vflag_file = 6 vflag_func = 19 vflag_copy =6019  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 7 1

vflag_file = 7 vflag_func = 1 vflag_copy =7001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 7 2

vflag_file = 7 vflag_func = 2 vflag_copy =7002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 7 3

vflag_file = 7 vflag_func = 3 vflag_copy =7003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 7 4

vflag_file = 7 vflag_func = 4 vflag_copy =7004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 7 5

vflag_file = 7 vflag_func = 5 vflag_copy =7005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 7 6

vflag_file = 7 vflag_func = 6 vflag_copy =7006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 7 7

vflag_file = 7 vflag_func = 7 vflag_copy =7007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 7 8

vflag_file = 7 vflag_func = 8 vflag_copy =7008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 7 9

vflag_file = 7 vflag_func = 9 vflag_copy =7009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 7 10

vflag_file = 7 vflag_func = 10 vflag_copy =7010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 7 11

vflag_file = 7 vflag_func = 11 vflag_copy =7011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 7 12

vflag_file = 7 vflag_func = 12 vflag_copy =7012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 7 13

vflag_file = 7 vflag_func = 13 vflag_copy =7013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 7 14

vflag_file = 7 vflag_func = 14 vflag_copy =7014  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 7 15

vflag_file = 7 vflag_func = 15 vflag_copy =7015  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 7 16

vflag_file = 7 vflag_func = 16 vflag_copy =7016  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 7 17

vflag_file = 7 vflag_func = 17 vflag_copy =7017  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 7 18

vflag_file = 7 vflag_func = 18 vflag_copy =7018  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 7 19

vflag_file = 7 vflag_func = 19 vflag_copy =7019  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 7 20

vflag_file = 7 vflag_func = 20 vflag_copy =7020  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 7 21

vflag_file = 7 vflag_func = 21 vflag_copy =7021  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 7 22

vflag_file = 7 vflag_func = 22 vflag_copy =7022  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 7 23

vflag_file = 7 vflag_func = 23 vflag_copy =7023  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 7 24

vflag_file = 7 vflag_func = 24 vflag_copy =7024  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 7 25

vflag_file = 7 vflag_func = 25 vflag_copy =7025  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 8 1

vflag_file = 8 vflag_func = 1 vflag_copy =8001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 8 2

vflag_file = 8 vflag_func = 2 vflag_copy =8002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 8 3

vflag_file = 8 vflag_func = 3 vflag_copy =8003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 8 4

vflag_file = 8 vflag_func = 4 vflag_copy =8004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 8 5

vflag_file = 8 vflag_func = 5 vflag_copy =8005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 8 6

vflag_file = 8 vflag_func = 6 vflag_copy =8006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 8 7

vflag_file = 8 vflag_func = 7 vflag_copy =8007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 8 8

vflag_file = 8 vflag_func = 8 vflag_copy =8008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 8 9

vflag_file = 8 vflag_func = 9 vflag_copy =8009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 8 10

vflag_file = 8 vflag_func = 10 vflag_copy =8010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 8 11

vflag_file = 8 vflag_func = 11 vflag_copy =8011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 8 12

vflag_file = 8 vflag_func = 12 vflag_copy =8012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 9 1

vflag_file = 9 vflag_func = 1 vflag_copy =9001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 9 2

vflag_file = 9 vflag_func = 2 vflag_copy =9002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 9 3

vflag_file = 9 vflag_func = 3 vflag_copy =9003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 9 4

vflag_file = 9 vflag_func = 4 vflag_copy =9004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 9 5

vflag_file = 9 vflag_func = 5 vflag_copy =9005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 9 6

vflag_file = 9 vflag_func = 6 vflag_copy =9006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 9 7

vflag_file = 9 vflag_func = 7 vflag_copy =9007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 9 8

vflag_file = 9 vflag_func = 8 vflag_copy =9008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 9 9

vflag_file = 9 vflag_func = 9 vflag_copy =9009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 9 10

vflag_file = 9 vflag_func = 10 vflag_copy =9010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 9 11

vflag_file = 9 vflag_func = 11 vflag_copy =9011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 9 12

vflag_file = 9 vflag_func = 12 vflag_copy =9012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 9 13

vflag_file = 9 vflag_func = 13 vflag_copy =9013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 10 1

vflag_file = 10 vflag_func = 1 vflag_copy =10001  
Task1! dead_lock= 21  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 10 2

vflag_file = 10 vflag_func = 2 vflag_copy =10002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 10 3

vflag_file = 10 vflag_func = 3 vflag_copy =10003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 10 4

vflag_file = 10 vflag_func = 4 vflag_copy =10004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 10 5

vflag_file = 10 vflag_func = 5 vflag_copy =10005  
dead lockPrinted from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 11 1

vflag_file = 11 vflag_func = 1 vflag_copy =11001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 11 2

vflag_file = 11 vflag_func = 2 vflag_copy =11002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 11 3

vflag_file = 11 vflag_func = 3 vflag_copy =11003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 12 1

==32463== Memcheck, a memory error detector 
==32463== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32463== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32463== Command: s 012001 
==32463==  
==32463== Invalid free() / delete / delete[] / realloc() 
==32463==    at 0x4C2BDEC: free (in ) 
==32463==    by 0x40C805: double_free_001 (in ) 
==32463==    by 0x40CB5D: double_free_main (in ) 
==32463==    by 0x4018FC: main (in ) 
==32463==  Address 0x5720040 is 0 bytes inside a block of size 1 free'd 
==32463==    at 0x4C2BDEC: free (in ) 
==32463==    by 0x40C7F9: double_free_001 (in ) 
==32463==    by 0x40CB5D: double_free_main (in ) 
==32463==    by 0x4018FC: main (in ) 
==32463==  
==32463==  
==32463== HEAP SUMMARY: 
==32463==     in use at exit: 0 bytes in 0 blocks 
==32463==   total heap usage: 1 allocs, 2 frees, 1 bytes allocated 
==32463==  
==32463== All heap blocks were freed -- no leaks are possible 
==32463==  
==32463== For counts of detected and suppressed errors, rerun with: -v 
==32463== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 12 2

==32464== Memcheck, a memory error detector 
==32464== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32464== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32464== Command: s 012002 
==32464==  
==32464== Invalid free() / delete / delete[] / realloc() 
==32464==    at 0x4C2BDEC: free (in ) 
==32464==    by 0x40C85E: double_free_002 (in ) 
==32464==    by 0x40CB7F: double_free_main (in ) 
==32464==    by 0x4018FC: main (in ) 
==32464==  Address 0x5720040 is 0 bytes inside a block of size 10 free'd 
==32464==    at 0x4C2BDEC: free (in ) 
==32464==    by 0x40C848: double_free_002 (in ) 
==32464==    by 0x40CB7F: double_free_main (in ) 
==32464==    by 0x4018FC: main (in ) 
==32464==  
==32464==  
==32464== HEAP SUMMARY: 
==32464==     in use at exit: 0 bytes in 0 blocks 
==32464==   total heap usage: 1 allocs, 2 frees, 10 bytes allocated 
==32464==  
==32464== All heap blocks were freed -- no leaks are possible 
==32464==  
==32464== For counts of detected and suppressed errors, rerun with: -v 
==32464== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 12 3

==32465== Memcheck, a memory error detector 
==32465== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32465== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32465== Command: s 012003 
==32465==  
==32465== Invalid free() / delete / delete[] / realloc() 
==32465==    at 0x4C2BDEC: free (in ) 
==32465==    by 0x40C8B7: double_free_003 (in ) 
==32465==    by 0x40CBA1: double_free_main (in ) 
==32465==    by 0x4018FC: main (in ) 
==32465==  Address 0x5720040 is 0 bytes inside a block of size 10 free'd 
==32465==    at 0x4C2BDEC: free (in ) 
==32465==    by 0x40C8A1: double_free_003 (in ) 
==32465==    by 0x40CBA1: double_free_main (in ) 
==32465==    by 0x4018FC: main (in ) 
==32465==  
==32465==  
==32465== HEAP SUMMARY: 
==32465==     in use at exit: 0 bytes in 0 blocks 
==32465==   total heap usage: 1 allocs, 2 frees, 10 bytes allocated 
==32465==  
==32465== All heap blocks were freed -- no leaks are possible 
==32465==  
==32465== For counts of detected and suppressed errors, rerun with: -v 
==32465== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 12 4

vflag_file = 12 vflag_func = 4 vflag_copy =12004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 12 5

==32467== Memcheck, a memory error detector 
==32467== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32467== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32467== Command: s 012005 
==32467==  
==32467== Invalid free() / delete / delete[] / realloc() 
==32467==    at 0x4C2BDEC: free (in ) 
==32467==    by 0x40C972: double_free_005 (in ) 
==32467==    by 0x40CBE5: double_free_main (in ) 
==32467==    by 0x4018FC: main (in ) 
==32467==  Address 0x5720040 is 0 bytes inside a block of size 1 free'd 
==32467==    at 0x4C2BDEC: free (in ) 
==32467==    by 0x40C95F: double_free_005 (in ) 
==32467==    by 0x40CBE5: double_free_main (in ) 
==32467==    by 0x4018FC: main (in ) 
==32467==  
==32467==  
==32467== HEAP SUMMARY: 
==32467==     in use at exit: 0 bytes in 0 blocks 
==32467==   total heap usage: 1 allocs, 2 frees, 1 bytes allocated 
==32467==  
==32467== All heap blocks were freed -- no leaks are possible 
==32467==  
==32467== For counts of detected and suppressed errors, rerun with: -v 
==32467== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 12 6

==32468== Memcheck, a memory error detector 
==32468== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32468== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32468== Command: s 012006 
==32468==  
==32468== Invalid free() / delete / delete[] / realloc() 
==32468==    at 0x4C2BDEC: free (in ) 
==32468==    by 0x40C9A2: double_free_006 (in ) 
==32468==    by 0x40CC07: double_free_main (in ) 
==32468==    by 0x4018FC: main (in ) 
==32468==  Address 0x5720040 is 0 bytes inside a block of size 1 free'd 
==32468==    at 0x4C2BDEC: free (in ) 
==32468==    by 0x40C996: double_free_006 (in ) 
==32468==    by 0x40CC07: double_free_main (in ) 
==32468==    by 0x4018FC: main (in ) 
==32468==  
==32468==  
==32468== HEAP SUMMARY: 
==32468==     in use at exit: 0 bytes in 0 blocks 
==32468==   total heap usage: 1 allocs, 2 frees, 1 bytes allocated 
==32468==  
==32468== All heap blocks were freed -- no leaks are possible 
==32468==  
==32468== For counts of detected and suppressed errors, rerun with: -v 
==32468== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 12 7

==32469== Memcheck, a memory error detector 
==32469== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32469== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32469== Command: s 012007 
==32469==  
==32469== Invalid free() / delete / delete[] / realloc() 
==32469==    at 0x4C2BDEC: free (in ) 
==32469==    by 0x40C9DF: double_free_007 (in ) 
==32469==    by 0x40CC29: double_free_main (in ) 
==32469==    by 0x4018FC: main (in ) 
==32469==  Address 0x5720040 is 0 bytes inside a block of size 1 free'd 
==32469==    at 0x4C2BDEC: free (in ) 
==32469==    by 0x40C9D3: double_free_007 (in ) 
==32469==    by 0x40CC29: double_free_main (in ) 
==32469==    by 0x4018FC: main (in ) 
==32469==  
==32469==  
==32469== HEAP SUMMARY: 
==32469==     in use at exit: 0 bytes in 0 blocks 
==32469==   total heap usage: 1 allocs, 2 frees, 1 bytes allocated 
==32469==  
==32469== All heap blocks were freed -- no leaks are possible 
==32469==  
==32469== For counts of detected and suppressed errors, rerun with: -v 
==32469== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 12 8

==32470== Memcheck, a memory error detector 
==32470== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32470== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32470== Command: s 012008 
==32470==  
==32470== Invalid free() / delete / delete[] / realloc() 
==32470==    at 0x4C2BDEC: free (in ) 
==32470==    by 0x40CA24: double_free_008 (in ) 
==32470==    by 0x40CC4B: double_free_main (in ) 
==32470==    by 0x4018FC: main (in ) 
==32470==  Address 0x5720040 is 0 bytes inside a block of size 1 free'd 
==32470==    at 0x4C2BDEC: free (in ) 
==32470==    by 0x40C9F4: double_free_function_008 (in ) 
==32470==    by 0x40CA15: double_free_008 (in ) 
==32470==    by 0x40CC4B: double_free_main (in ) 
==32470==    by 0x4018FC: main (in ) 
==32470==  
==32470==  
==32470== HEAP SUMMARY: 
==32470==     in use at exit: 0 bytes in 0 blocks 
==32470==   total heap usage: 1 allocs, 2 frees, 1 bytes allocated 
==32470==  
==32470== All heap blocks were freed -- no leaks are possible 
==32470==  
==32470== For counts of detected and suppressed errors, rerun with: -v 
==32470== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 12 9

==32471== Memcheck, a memory error detector 
==32471== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32471== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32471== Command: s 012009 
==32471==  
==32471== Invalid free() / delete / delete[] / realloc() 
==32471==    at 0x4C2BDEC: free (in ) 
==32471==    by 0x40CA67: double_free_009 (in ) 
==32471==    by 0x40CC6D: double_free_main (in ) 
==32471==    by 0x4018FC: main (in ) 
==32471==  Address 0x5720040 is 0 bytes inside a block of size 1 free'd 
==32471==    at 0x4C2BDEC: free (in ) 
==32471==    by 0x40CA51: double_free_009 (in ) 
==32471==    by 0x40CC6D: double_free_main (in ) 
==32471==    by 0x4018FC: main (in ) 
==32471==  
==32471==  
==32471== HEAP SUMMARY: 
==32471==     in use at exit: 0 bytes in 0 blocks 
==32471==   total heap usage: 1 allocs, 2 frees, 1 bytes allocated 
==32471==  
==32471== All heap blocks were freed -- no leaks are possible 
==32471==  
==32471== For counts of detected and suppressed errors, rerun with: -v 
==32471== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 12 10

==32472== Memcheck, a memory error detector 
==32472== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32472== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32472== Command: s 012010 
==32472==  
==32472== Invalid free() / delete / delete[] / realloc() 
==32472==    at 0x4C2BDEC: free (in ) 
==32472==    by 0x40CAAA: double_free_010 (in ) 
==32472==    by 0x40CC8F: double_free_main (in ) 
==32472==    by 0x4018FC: main (in ) 
==32472==  Address 0x5720040 is 0 bytes inside a block of size 1 free'd 
==32472==    at 0x4C2BDEC: free (in ) 
==32472==    by 0x40CA94: double_free_010 (in ) 
==32472==    by 0x40CC8F: double_free_main (in ) 
==32472==    by 0x4018FC: main (in ) 
==32472==  
==32472==  
==32472== HEAP SUMMARY: 
==32472==     in use at exit: 0 bytes in 0 blocks 
==32472==   total heap usage: 1 allocs, 2 frees, 1 bytes allocated 
==32472==  
==32472== All heap blocks were freed -- no leaks are possible 
==32472==  
==32472== For counts of detected and suppressed errors, rerun with: -v 
==32472== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 12 11

==32473== Memcheck, a memory error detector 
==32473== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32473== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32473== Command: s 012011 
==32473==  
==32473== Invalid free() / delete / delete[] / realloc() 
==32473==    at 0x4C2BDEC: free (in ) 
==32473==    by 0x40CAEB: double_free_011 (in ) 
==32473==    by 0x40CCB1: double_free_main (in ) 
==32473==    by 0x4018FC: main (in ) 
==32473==  Address 0x5720040 is 0 bytes inside a block of size 1 free'd 
==32473==    at 0x4C2BDEC: free (in ) 
==32473==    by 0x40CAEB: double_free_011 (in ) 
==32473==    by 0x40CCB1: double_free_main (in ) 
==32473==    by 0x4018FC: main (in ) 
==32473==  
==32473==  
==32473== HEAP SUMMARY: 
==32473==     in use at exit: 0 bytes in 0 blocks 
==32473==   total heap usage: 1 allocs, 2 frees, 1 bytes allocated 
==32473==  
==32473== All heap blocks were freed -- no leaks are possible 
==32473==  
==32473== For counts of detected and suppressed errors, rerun with: -v 
==32473== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 12 12

==32474== Memcheck, a memory error detector 
==32474== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32474== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32474== Command: s 012012 
==32474==  
==32474== Invalid free() / delete / delete[] / realloc() 
==32474==    at 0x4C2BDEC: free (in ) 
==32474==    by 0x40CB2B: double_free_012 (in ) 
==32474==    by 0x40CCD3: double_free_main (in ) 
==32474==    by 0x4018FC: main (in ) 
==32474==  Address 0x5720040 is 0 bytes inside a block of size 1 free'd 
==32474==    at 0x4C2BDEC: free (in ) 
==32474==    by 0x40CB2B: double_free_012 (in ) 
==32474==    by 0x40CCD3: double_free_main (in ) 
==32474==    by 0x4018FC: main (in ) 
==32474==  
==32474==  
==32474== HEAP SUMMARY: 
==32474==     in use at exit: 0 bytes in 0 blocks 
==32474==   total heap usage: 1 allocs, 2 frees, 1 bytes allocated 
==32474==  
==32474== All heap blocks were freed -- no leaks are possible 
==32474==  
==32474== For counts of detected and suppressed errors, rerun with: -v 
==32474== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 13 1

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 13 2

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 13 3

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 13 4

vflag_file = 13 vflag_func = 4 vflag_copy =13004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 14 1

vflag_file = 14 vflag_func = 1 vflag_copy =14001  
Double releasePrinted from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 14 2

vflag_file = 14 vflag_func = 2 vflag_copy =14002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 14 3

vflag_file = 14 vflag_func = 3 vflag_copy =14003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 14 4

vflag_file = 14 vflag_func = 4 vflag_copy =14004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 14 5

vflag_file = 14 vflag_func = 5 vflag_copy =14005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 14 6

vflag_file = 14 vflag_func = 6 vflag_copy =14006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 15 1

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 15 2

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 15 3

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 15 4

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 15 5

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 15 6

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 15 7

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 15 8

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 15 9

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 16 1

==32506== Memcheck, a memory error detector 
==32506== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32506== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32506== Command: s 016001 
==32506==  
==32506== Invalid free() / delete / delete[] / realloc() 
==32506==    at 0x4C2BDEC: free (in ) 
==32506==    by 0x40F01A: free_nondynamic_allocated_memory_001 (in ) 
==32506==    by 0x40F3BF: free_nondynamic_allocated_memory_main (in ) 
==32506==    by 0x401970: main (in ) 
==32506==  Address 0x4194b8 is not stack'd, malloc'd or (recently) free'd 
==32506==  
==32506==  
==32506== HEAP SUMMARY: 
==32506==     in use at exit: 0 bytes in 0 blocks 
==32506==   total heap usage: 0 allocs, 1 frees, 0 bytes allocated 
==32506==  
==32506== All heap blocks were freed -- no leaks are possible 
==32506==  
==32506== For counts of detected and suppressed errors, rerun with: -v 
==32506== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 16 2

==32507== Memcheck, a memory error detector 
==32507== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32507== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32507== Command: s 016002 
==32507==  
==32507== Invalid free() / delete / delete[] / realloc() 
==32507==    at 0x4C2BDEC: free (in ) 
==32507==    by 0x40F045: free_nondynamic_allocated_memory_002 (in ) 
==32507==    by 0x40F3E1: free_nondynamic_allocated_memory_main (in ) 
==32507==    by 0x401970: main (in ) 
==32507==  Address 0x4194b8 is not stack'd, malloc'd or (recently) free'd 
==32507==  
==32507==  
==32507== HEAP SUMMARY: 
==32507==     in use at exit: 0 bytes in 0 blocks 
==32507==   total heap usage: 0 allocs, 1 frees, 0 bytes allocated 
==32507==  
==32507== All heap blocks were freed -- no leaks are possible 
==32507==  
==32507== For counts of detected and suppressed errors, rerun with: -v 
==32507== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 16 3

==32508== Memcheck, a memory error detector 
==32508== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32508== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32508== Command: s 016003 
==32508==  
==32508== Invalid free() / delete / delete[] / realloc() 
==32508==    at 0x4C2BDEC: free (in ) 
==32508==    by 0x40F065: free_nondynamic_allocated_memory_003 (in ) 
==32508==    by 0x40F403: free_nondynamic_allocated_memory_main (in ) 
==32508==    by 0x401970: main (in ) 
==32508==  Address 0x4194ba is not stack'd, malloc'd or (recently) free'd 
==32508==  
==32508==  
==32508== HEAP SUMMARY: 
==32508==     in use at exit: 0 bytes in 0 blocks 
==32508==   total heap usage: 0 allocs, 1 frees, 0 bytes allocated 
==32508==  
==32508== All heap blocks were freed -- no leaks are possible 
==32508==  
==32508== For counts of detected and suppressed errors, rerun with: -v 
==32508== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 16 4

==32509== Memcheck, a memory error detector 
==32509== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32509== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32509== Command: s 016004 
==32509==  
==32509== Invalid free() / delete / delete[] / realloc() 
==32509==    at 0x4C2BDEC: free (in ) 
==32509==    by 0x40F08B: free_nondynamic_allocated_memory_004 (in ) 
==32509==    by 0x40F425: free_nondynamic_allocated_memory_main (in ) 
==32509==    by 0x401970: main (in ) 
==32509==  Address 0xffefffc10 is on thread 1's stack 
==32509==  in frame #1, created by free_nondynamic_allocated_memory_004 (???) 
==32509==  
==32509==  
==32509== HEAP SUMMARY: 
==32509==     in use at exit: 0 bytes in 0 blocks 
==32509==   total heap usage: 0 allocs, 1 frees, 0 bytes allocated 
==32509==  
==32509== All heap blocks were freed -- no leaks are possible 
==32509==  
==32509== For counts of detected and suppressed errors, rerun with: -v 
==32509== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 16 5

==32510== Memcheck, a memory error detector 
==32510== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32510== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32510== Command: s 016005 
==32510==  
==32510== Invalid free() / delete / delete[] / realloc() 
==32510==    at 0x4C2BDEC: free (in ) 
==32510==    by 0x40F131: free_nondynamic_allocated_memory_005 (in ) 
==32510==    by 0x40F447: free_nondynamic_allocated_memory_main (in ) 
==32510==    by 0x401970: main (in ) 
==32510==  Address 0xffefffc10 is on thread 1's stack 
==32510==  in frame #1, created by free_nondynamic_allocated_memory_005 (???) 
==32510==  
==32510==  
==32510== HEAP SUMMARY: 
==32510==     in use at exit: 0 bytes in 0 blocks 
==32510==   total heap usage: 2 allocs, 3 frees, 10 bytes allocated 
==32510==  
==32510== All heap blocks were freed -- no leaks are possible 
==32510==  
==32510== For counts of detected and suppressed errors, rerun with: -v 
==32510== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 16 6

==32511== Memcheck, a memory error detector 
==32511== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32511== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32511== Command: s 016006 
==32511==  
==32511== Invalid free() / delete / delete[] / realloc() 
==32511==    at 0x4C2BDEC: free (in ) 
==32511==    by 0x40F185: free_nondynamic_allocated_memory_006 (in ) 
==32511==    by 0x40F469: free_nondynamic_allocated_memory_main (in ) 
==32511==    by 0x401970: main (in ) 
==32511==  Address 0xffefffbf8 is on thread 1's stack 
==32511==  in frame #1, created by free_nondynamic_allocated_memory_006 (???) 
==32511==  
==32511==  
==32511== HEAP SUMMARY: 
==32511==     in use at exit: 0 bytes in 0 blocks 
==32511==   total heap usage: 0 allocs, 1 frees, 0 bytes allocated 
==32511==  
==32511== All heap blocks were freed -- no leaks are possible 
==32511==  
==32511== For counts of detected and suppressed errors, rerun with: -v 
==32511== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 16 7

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 16 8

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 16 9

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 16 10

==32515== Memcheck, a memory error detector 
==32515== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32515== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32515== Command: s 016010 
==32515==  
==32515== Invalid free() / delete / delete[] / realloc() 
==32515==    at 0x4C2BDEC: free (in ) 
==32515==    by 0x40F236: free_nondynamic_allocated_memory_010 (in ) 
==32515==    by 0x40F4F1: free_nondynamic_allocated_memory_main (in ) 
==32515==    by 0x401970: main (in ) 
==32515==  Address 0x4194c3 is not stack'd, malloc'd or (recently) free'd 
==32515==  
==32515==  
==32515== HEAP SUMMARY: 
==32515==     in use at exit: 0 bytes in 0 blocks 
==32515==   total heap usage: 0 allocs, 5 frees, 0 bytes allocated 
==32515==  
==32515== All heap blocks were freed -- no leaks are possible 
==32515==  
==32515== For counts of detected and suppressed errors, rerun with: -v 
==32515== ERROR SUMMARY: 5 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 16 11

==32516== Memcheck, a memory error detector 
==32516== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32516== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32516== Command: s 016011 
==32516==  
==32516== Invalid free() / delete / delete[] / realloc() 
==32516==    at 0x4C2BDEC: free (in ) 
==32516==    by 0x40F267: free_nondynamic_allocated_memory_011 (in ) 
==32516==    by 0x40F513: free_nondynamic_allocated_memory_main (in ) 
==32516==    by 0x401970: main (in ) 
==32516==  Address 0x4194c5 is not stack'd, malloc'd or (recently) free'd 
==32516==  
==32516==  
==32516== HEAP SUMMARY: 
==32516==     in use at exit: 0 bytes in 0 blocks 
==32516==   total heap usage: 0 allocs, 5 frees, 0 bytes allocated 
==32516==  
==32516== All heap blocks were freed -- no leaks are possible 
==32516==  
==32516== For counts of detected and suppressed errors, rerun with: -v 
==32516== ERROR SUMMARY: 5 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 16 12

==32517== Memcheck, a memory error detector 
==32517== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32517== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32517== Command: s 016012 
==32517==  
==32517== Invalid free() / delete / delete[] / realloc() 
==32517==    at 0x4C2BDEC: free (in ) 
==32517==    by 0x40F2A9: free_nondynamic_allocated_memory_012 (in ) 
==32517==    by 0x40F535: free_nondynamic_allocated_memory_main (in ) 
==32517==    by 0x401970: main (in ) 
==32517==  Address 0x4194b8 is not stack'd, malloc'd or (recently) free'd 
==32517==  
==32517==  
==32517== HEAP SUMMARY: 
==32517==     in use at exit: 0 bytes in 0 blocks 
==32517==   total heap usage: 0 allocs, 1 frees, 0 bytes allocated 
==32517==  
==32517== All heap blocks were freed -- no leaks are possible 
==32517==  
==32517== For counts of detected and suppressed errors, rerun with: -v 
==32517== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 16 13

==32518== Memcheck, a memory error detector 
==32518== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32518== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32518== Command: s 016013 
==32518==  
==32518== Invalid free() / delete / delete[] / realloc() 
==32518==    at 0x4C2BDEC: free (in ) 
==32518==    by 0x40F2E5: free_nondynamic_allocated_memory_013 (in ) 
==32518==    by 0x40F557: free_nondynamic_allocated_memory_main (in ) 
==32518==    by 0x401970: main (in ) 
==32518==  Address 0xffefffc10 is on thread 1's stack 
==32518==  in frame #1, created by free_nondynamic_allocated_memory_013 (???) 
==32518==  
==32518==  
==32518== HEAP SUMMARY: 
==32518==     in use at exit: 0 bytes in 0 blocks 
==32518==   total heap usage: 1 allocs, 2 frees, 16 bytes allocated 
==32518==  
==32518== All heap blocks were freed -- no leaks are possible 
==32518==  
==32518== For counts of detected and suppressed errors, rerun with: -v 
==32518== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 16 14

==32519== Memcheck, a memory error detector 
==32519== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32519== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32519== Command: s 016014 
==32519==  
==32519== Invalid free() / delete / delete[] / realloc() 
==32519==    at 0x4C2BDEC: free (in ) 
==32519==    by 0x40F315: free_nondynamic_allocated_memory_014 (in ) 
==32519==    by 0x40F579: free_nondynamic_allocated_memory_main (in ) 
==32519==    by 0x401970: main (in ) 
==32519==  Address 0xffefffc10 is on thread 1's stack 
==32519==  in frame #1, created by free_nondynamic_allocated_memory_014 (???) 
==32519==  
==32519==  
==32519== HEAP SUMMARY: 
==32519==     in use at exit: 0 bytes in 0 blocks 
==32519==   total heap usage: 0 allocs, 1 frees, 0 bytes allocated 
==32519==  
==32519== All heap blocks were freed -- no leaks are possible 
==32519==  
==32519== For counts of detected and suppressed errors, rerun with: -v 
==32519== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 16 15

==32520== Memcheck, a memory error detector 
==32520== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32520== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32520== Command: s 016015 
==32520==  
==32520== Invalid free() / delete / delete[] / realloc() 
==32520==    at 0x4C2BDEC: free (in ) 
==32520==    by 0x40F32A: free_nondynamic_allocated_memory_015_func_001 (in ) 
==32520==    by 0x40F345: free_nondynamic_allocated_memory_015 (in ) 
==32520==    by 0x40F59B: free_nondynamic_allocated_memory_main (in ) 
==32520==    by 0x401970: main (in ) 
==32520==  Address 0x4194ba is not stack'd, malloc'd or (recently) free'd 
==32520==  
==32520==  
==32520== HEAP SUMMARY: 
==32520==     in use at exit: 0 bytes in 0 blocks 
==32520==   total heap usage: 0 allocs, 1 frees, 0 bytes allocated 
==32520==  
==32520== All heap blocks were freed -- no leaks are possible 
==32520==  
==32520== For counts of detected and suppressed errors, rerun with: -v 
==32520== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 16 16

==32521== Memcheck, a memory error detector 
==32521== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32521== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32521== Command: s 016016 
==32521==  
==32521== Invalid free() / delete / delete[] / realloc() 
==32521==    at 0x4C2BDEC: free (in ) 
==32521==    by 0x40F376: free_nondynamic_allocated_memory_016_func_002 (in ) 
==32521==    by 0x40F397: free_nondynamic_allocated_memory_016 (in ) 
==32521==    by 0x40F5BD: free_nondynamic_allocated_memory_main (in ) 
==32521==    by 0x401970: main (in ) 
==32521==  Address 0x4194ba is not stack'd, malloc'd or (recently) free'd 
==32521==  
==32521==  
==32521== HEAP SUMMARY: 
==32521==     in use at exit: 0 bytes in 0 blocks 
==32521==   total heap usage: 0 allocs, 1 frees, 0 bytes allocated 
==32521==  
==32521== All heap blocks were freed -- no leaks are possible 
==32521==  
==32521== For counts of detected and suppressed errors, rerun with: -v 
==32521== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 17 1

vflag_file = 17 vflag_func = 1 vflag_copy =17001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 17 2

vflag_file = 17 vflag_func = 2 vflag_copy =17002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 17 3

vflag_file = 17 vflag_func = 3 vflag_copy =17003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 17 4

vflag_file = 17 vflag_func = 4 vflag_copy =17004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 17 5

==32526== Memcheck, a memory error detector 
==32526== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32526== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32526== Command: s 017005 
==32526==  
==32526== Invalid write of size 1 
==32526==    at 0x4C2E1E0: strcpy (in ) 
==32526==    by 0x40FD72: free_null_pointer_005 (in ) 
==32526==    by 0x410738: free_null_pointer_main (in ) 
==32526==    by 0x40198D: main (in ) 
==32526==  Address 0x0 is not stack'd, malloc'd or (recently) free'd 
==32526==  
==32526==  
==32526== Process terminating with default action of signal 11 (SIGSEGV) 
==32526==  Access not within mapped region at address 0x0 
==32526==    at 0x4C2E1E0: strcpy (in ) 
==32526==    by 0x40FD72: free_null_pointer_005 (in ) 
==32526==    by 0x410738: free_null_pointer_main (in ) 
==32526==    by 0x40198D: main (in ) 
==32526==  If you believe this happened as a result of a stack 
==32526==  overflow in your program's main thread (unlikely but 
==32526==  possible), you can try to increase the size of the 
==32526==  main thread stack using the --main-stacksize= flag. 
==32526==  The main thread stack size used in this run was 8388608. 
==32526==  
==32526== HEAP SUMMARY: 
==32526==     in use at exit: 0 bytes in 0 blocks 
==32526==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==32526==  
==32526== All heap blocks were freed -- no leaks are possible 
==32526==  
==32526== For counts of detected and suppressed errors, rerun with: -v 
==32526== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 17 6

==32530== Memcheck, a memory error detector 
==32530== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32530== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32530== Command: s 017006 
==32530==  
==32530== Invalid write of size 1 
==32530==    at 0x4C2E1E0: strcpy (in ) 
==32530==    by 0x40FE31: free_null_pointer_006 (in ) 
==32530==    by 0x41075A: free_null_pointer_main (in ) 
==32530==    by 0x40198D: main (in ) 
==32530==  Address 0x0 is not stack'd, malloc'd or (recently) free'd 
==32530==  
==32530==  
==32530== Process terminating with default action of signal 11 (SIGSEGV) 
==32530==  Access not within mapped region at address 0x0 
==32530==    at 0x4C2E1E0: strcpy (in ) 
==32530==    by 0x40FE31: free_null_pointer_006 (in ) 
==32530==    by 0x41075A: free_null_pointer_main (in ) 
==32530==    by 0x40198D: main (in ) 
==32530==  If you believe this happened as a result of a stack 
==32530==  overflow in your program's main thread (unlikely but 
==32530==  possible), you can try to increase the size of the 
==32530==  main thread stack using the --main-stacksize= flag. 
==32530==  The main thread stack size used in this run was 8388608. 
==32530==  
==32530== HEAP SUMMARY: 
==32530==     in use at exit: 80 bytes in 1 blocks 
==32530==   total heap usage: 1 allocs, 0 frees, 80 bytes allocated 
==32530==  
==32530== LEAK SUMMARY: 
==32530==    definitely lost: 0 bytes in 0 blocks 
==32530==    indirectly lost: 0 bytes in 0 blocks 
==32530==      possibly lost: 0 bytes in 0 blocks 
==32530==    still reachable: 80 bytes in 1 blocks 
==32530==         suppressed: 0 bytes in 0 blocks 
==32530== Rerun with --leak-check=full to see details of leaked memory 
==32530==  
==32530== For counts of detected and suppressed errors, rerun with: -v 
==32530== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 17 8

==32534== Memcheck, a memory error detector 
==32534== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32534== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32534== Command: s 017008 
==32534==  
==32534== Invalid write of size 1 
==32534==    at 0x4C2E1E0: strcpy (in ) 
==32534==    by 0x410010: free_null_pointer_008 (in ) 
==32534==    by 0x41079E: free_null_pointer_main (in ) 
==32534==    by 0x40198D: main (in ) 
==32534==  Address 0x0 is not stack'd, malloc'd or (recently) free'd 
==32534==  
==32534==  
==32534== Process terminating with default action of signal 11 (SIGSEGV) 
==32534==  Access not within mapped region at address 0x0 
==32534==    at 0x4C2E1E0: strcpy (in ) 
==32534==    by 0x410010: free_null_pointer_008 (in ) 
==32534==    by 0x41079E: free_null_pointer_main (in ) 
==32534==    by 0x40198D: main (in ) 
==32534==  If you believe this happened as a result of a stack 
==32534==  overflow in your program's main thread (unlikely but 
==32534==  possible), you can try to increase the size of the 
==32534==  main thread stack using the --main-stacksize= flag. 
==32534==  The main thread stack size used in this run was 8388608. 
==32534==  
==32534== HEAP SUMMARY: 
==32534==     in use at exit: 0 bytes in 0 blocks 
==32534==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==32534==  
==32534== All heap blocks were freed -- no leaks are possible 
==32534==  
==32534== For counts of detected and suppressed errors, rerun with: -v 
==32534== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 17 11

==32538== Memcheck, a memory error detector 
==32538== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32538== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32538== Command: s 017011 
==32538==  
==32538== Invalid read of size 4 
==32538==    at 0x41036F: free_null_pointer_011 (in ) 
==32538==    by 0x410804: free_null_pointer_main (in ) 
==32538==    by 0x40198D: main (in ) 
==32538==  Address 0xffffffffffffffff is not stack'd, malloc'd or (recently) free'd 
==32538==  
==32538==  
==32538== Process terminating with default action of signal 11 (SIGSEGV) 
==32538==  Access not within mapped region at address 0xFFFFFFFFFFFFFFFF 
==32538==    at 0x41036F: free_null_pointer_011 (in ) 
==32538==    by 0x410804: free_null_pointer_main (in ) 
==32538==    by 0x40198D: main (in ) 
==32538==  If you believe this happened as a result of a stack 
==32538==  overflow in your program's main thread (unlikely but 
==32538==  possible), you can try to increase the size of the 
==32538==  main thread stack using the --main-stacksize= flag. 
==32538==  The main thread stack size used in this run was 8388608. 
==32538==  
==32538== HEAP SUMMARY: 
==32538==     in use at exit: 0 bytes in 0 blocks 
==32538==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==32538==  
==32538== All heap blocks were freed -- no leaks are possible 
==32538==  
==32538== For counts of detected and suppressed errors, rerun with: -v 
==32538== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 18 1

vflag_file = 18 vflag_func = 1 vflag_copy =18001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 18 2

vflag_file = 18 vflag_func = 2 vflag_copy =18002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 18 3

vflag_file = 18 vflag_func = 3 vflag_copy =18003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 18 4

vflag_file = 18 vflag_func = 4 vflag_copy =18004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 18 5

==32546== Memcheck, a memory error detector 
==32546== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32546== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32546== Command: s 018005 
==32546==  
==32546== Invalid read of size 8 
==32546==    at 0x410BC8: func_pointer_005 (in ) 
==32546==    by 0x411679: func_pointer_main (in ) 
==32546==    by 0x4019AA: main (in ) 
==32546==  Address 0x0 is not stack'd, malloc'd or (recently) free'd 
==32546==  
==32546==  
==32546== Process terminating with default action of signal 11 (SIGSEGV) 
==32546==  Access not within mapped region at address 0x0 
==32546==    at 0x410BC8: func_pointer_005 (in ) 
==32546==    by 0x411679: func_pointer_main (in ) 
==32546==    by 0x4019AA: main (in ) 
==32546==  If you believe this happened as a result of a stack 
==32546==  overflow in your program's main thread (unlikely but 
==32546==  possible), you can try to increase the size of the 
==32546==  main thread stack using the --main-stacksize= flag. 
==32546==  The main thread stack size used in this run was 8388608. 
==32546==  
==32546== HEAP SUMMARY: 
==32546==     in use at exit: 880 bytes in 11 blocks 
==32546==   total heap usage: 11 allocs, 0 frees, 880 bytes allocated 
==32546==  
==32546== LEAK SUMMARY: 
==32546==    definitely lost: 80 bytes in 1 blocks 
==32546==    indirectly lost: 800 bytes in 10 blocks 
==32546==      possibly lost: 0 bytes in 0 blocks 
==32546==    still reachable: 0 bytes in 0 blocks 
==32546==         suppressed: 0 bytes in 0 blocks 
==32546== Rerun with --leak-check=full to see details of leaked memory 
==32546==  
==32546== For counts of detected and suppressed errors, rerun with: -v 
==32546== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 18 6

vflag_file = 18 vflag_func = 6 vflag_copy =18006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 18 7

vflag_file = 18 vflag_func = 7 vflag_copy =18007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 18 8

==32552== Memcheck, a memory error detector 
==32552== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32552== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32552== Command: s 018008 
==32552==  
==32552== Invalid read of size 8 
==32552==    at 0x410FC4: func_pointer_008 (in ) 
==32552==    by 0x4116DF: func_pointer_main (in ) 
==32552==    by 0x4019AA: main (in ) 
==32552==  Address 0x424a6666 is not stack'd, malloc'd or (recently) free'd 
==32552==  
==32552==  
==32552== Process terminating with default action of signal 11 (SIGSEGV) 
==32552==  Access not within mapped region at address 0x424A6666 
==32552==    at 0x410FC4: func_pointer_008 (in ) 
==32552==    by 0x4116DF: func_pointer_main (in ) 
==32552==    by 0x4019AA: main (in ) 
==32552==  If you believe this happened as a result of a stack 
==32552==  overflow in your program's main thread (unlikely but 
==32552==  possible), you can try to increase the size of the 
==32552==  main thread stack using the --main-stacksize= flag. 
==32552==  The main thread stack size used in this run was 8388608. 
==32552==  
==32552== HEAP SUMMARY: 
==32552==     in use at exit: 0 bytes in 0 blocks 
==32552==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==32552==  
==32552== All heap blocks were freed -- no leaks are possible 
==32552==  
==32552== For counts of detected and suppressed errors, rerun with: -v 
==32552== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 18 9

==32556== Memcheck, a memory error detector 
==32556== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32556== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32556== Command: s 018009 
==32556==  
==32556== Invalid write of size 4 
==32556==    at 0x411057: func_pointer_009 (in ) 
==32556==    by 0x411701: func_pointer_main (in ) 
==32556==    by 0x4019AA: main (in ) 
==32556==  Address 0x0 is not stack'd, malloc'd or (recently) free'd 
==32556==  
==32556==  
==32556== Process terminating with default action of signal 11 (SIGSEGV) 
==32556==  Access not within mapped region at address 0x0 
==32556==    at 0x411057: func_pointer_009 (in ) 
==32556==    by 0x411701: func_pointer_main (in ) 
==32556==    by 0x4019AA: main (in ) 
==32556==  If you believe this happened as a result of a stack 
==32556==  overflow in your program's main thread (unlikely but 
==32556==  possible), you can try to increase the size of the 
==32556==  main thread stack using the --main-stacksize= flag. 
==32556==  The main thread stack size used in this run was 8388608. 
==32556==  
==32556== HEAP SUMMARY: 
==32556==     in use at exit: 4 bytes in 1 blocks 
==32556==   total heap usage: 1 allocs, 0 frees, 4 bytes allocated 
==32556==  
==32556== LEAK SUMMARY: 
==32556==    definitely lost: 4 bytes in 1 blocks 
==32556==    indirectly lost: 0 bytes in 0 blocks 
==32556==      possibly lost: 0 bytes in 0 blocks 
==32556==    still reachable: 0 bytes in 0 blocks 
==32556==         suppressed: 0 bytes in 0 blocks 
==32556== Rerun with --leak-check=full to see details of leaked memory 
==32556==  
==32556== For counts of detected and suppressed errors, rerun with: -v 
==32556== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 18 10

==32560== Memcheck, a memory error detector 
==32560== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32560== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32560== Command: s 018010 
==32560==  
==32560== Invalid read of size 1 
==32560==    at 0x4C2E0E2: strlen (in ) 
==32560==    by 0x41097F: func_pointer_004_func_001 (in ) 
==32560==    by 0x4110A7: func_pointer_010 (in ) 
==32560==    by 0x411723: func_pointer_main (in ) 
==32560==    by 0x4019AA: main (in ) 
==32560==  Address 0xffefff710 is on thread 1's stack 
==32560==  1208 bytes below stack pointer 
==32560==  
==32560== Invalid read of size 1 
==32560==    at 0x4C2E0F4: strlen (in ) 
==32560==    by 0x41097F: func_pointer_004_func_001 (in ) 
==32560==    by 0x4110A7: func_pointer_010 (in ) 
==32560==    by 0x411723: func_pointer_main (in ) 
==32560==    by 0x4019AA: main (in ) 
==32560==  Address 0xffefff711 is on thread 1's stack 
==32560==  1199 bytes below stack pointer 
==32560==  
==32560== Invalid read of size 1 
==32560==    at 0x4109C4: func_pointer_004_func_001 (in ) 
==32560==    by 0x4110A7: func_pointer_010 (in ) 
==32560==    by 0x411723: func_pointer_main (in ) 
==32560==    by 0x4019AA: main (in ) 
==32560==  Address 0xffefff713 is on thread 1's stack 
==32560==  1213 bytes below stack pointer 
==32560==  
==32560==  
==32560== HEAP SUMMARY: 
==32560==     in use at exit: 5 bytes in 1 blocks 
==32560==   total heap usage: 1 allocs, 0 frees, 5 bytes allocated 
==32560==  
==32560== LEAK SUMMARY: 
==32560==    definitely lost: 5 bytes in 1 blocks 
==32560==    indirectly lost: 0 bytes in 0 blocks 
==32560==      possibly lost: 0 bytes in 0 blocks 
==32560==    still reachable: 0 bytes in 0 blocks 
==32560==         suppressed: 0 bytes in 0 blocks 
==32560== Rerun with --leak-check=full to see details of leaked memory 
==32560==  
==32560== For counts of detected and suppressed errors, rerun with: -v 
==32560== ERROR SUMMARY: 9 errors from 3 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 18 11

vflag_file = 18 vflag_func = 11 vflag_copy =18011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 18 12

vflag_file = 18 vflag_func = 12 vflag_copy =18012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 18 13

vflag_file = 18 vflag_func = 13 vflag_copy =18013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 18 14

vflag_file = 18 vflag_func = 14 vflag_copy =18014  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 18 15

vflag_file = 18 vflag_func = 15 vflag_copy =18015  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 19 1

vflag_file = 19 vflag_func = 1 vflag_copy =19001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 19 2

vflag_file = 19 vflag_func = 2 vflag_copy =19002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 19 3

vflag_file = 19 vflag_func = 3 vflag_copy =19003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 19 4

vflag_file = 19 vflag_func = 4 vflag_copy =19004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 19 5

vflag_file = 19 vflag_func = 5 vflag_copy =19005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 19 6

vflag_file = 19 vflag_func = 6 vflag_copy =19006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 19 7

vflag_file = 19 vflag_func = 7 vflag_copy =19007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 19 8

vflag_file = 19 vflag_func = 8 vflag_copy =19008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 19 9

vflag_file = 19 vflag_func = 9 vflag_copy =19009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 19 10

vflag_file = 19 vflag_func = 10 vflag_copy =19010  
TEST STRING 
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 19 11

vflag_file = 19 vflag_func = 11 vflag_copy =19011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 19 12

vflag_file = 19 vflag_func = 12 vflag_copy =19012  
APrinted from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 19 13

vflag_file = 19 vflag_func = 13 vflag_copy =19013  
STRING#Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 19 14

vflag_file = 19 vflag_func = 14 vflag_copy =19014  
APrinted from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 19 15

vflag_file = 19 vflag_func = 15 vflag_copy =19015  
TEST 
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 19 16

vflag_file = 19 vflag_func = 16 vflag_copy =19016  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 21 1

vflag_file = 21 vflag_func = 1 vflag_copy =21001  
00Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 21 2

vflag_file = 21 vflag_func = 2 vflag_copy =21002  
00Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 21 3

vflag_file = 21 vflag_func = 3 vflag_copy =21003  
100Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 21 4

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 22 1

vflag_file = 22 vflag_func = 1 vflag_copy =22001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 23 1

==32587== Memcheck, a memory error detector 
==32587== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32587== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32587== Command: s 023001 
==32587==  
==32587== Invalid write of size 4 
==32587==    at 0x414D0F: invalid_extern_001 (in ) 
==32587==    by 0x414D96: invalid_extern_main (in ) 
==32587==    by 0x401A2F: main (in ) 
==32587==  Address 0x20000000d is not stack'd, malloc'd or (recently) free'd 
==32587==  
==32587==  
==32587== Process terminating with default action of signal 11 (SIGSEGV) 
==32587==  Access not within mapped region at address 0x20000000D 
==32587==    at 0x414D0F: invalid_extern_001 (in ) 
==32587==    by 0x414D96: invalid_extern_main (in ) 
==32587==    by 0x401A2F: main (in ) 
==32587==  If you believe this happened as a result of a stack 
==32587==  overflow in your program's main thread (unlikely but 
==32587==  possible), you can try to increase the size of the 
==32587==  main thread stack using the --main-stacksize= flag. 
==32587==  The main thread stack size used in this run was 8388608. 
==32587==  
==32587== HEAP SUMMARY: 
==32587==     in use at exit: 0 bytes in 0 blocks 
==32587==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==32587==  
==32587== All heap blocks were freed -- no leaks are possible 
==32587==  
==32587== For counts of detected and suppressed errors, rerun with: -v 
==32587== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 23 2

==32591== Memcheck, a memory error detector 
==32591== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32591== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32591== Command: s 023002 
==32591==  
==32591== Invalid write of size 4 
==32591==    at 0x414D26: invalid_extern_002 (in ) 
==32591==    by 0x414DB8: invalid_extern_main (in ) 
==32591==    by 0x401A2F: main (in ) 
==32591==  Address 0x400000003f80000c is not stack'd, malloc'd or (recently) free'd 
==32591==  
==32591==  
==32591== Process terminating with default action of signal 11 (SIGSEGV) 
==32591==  General Protection Fault 
==32591==    at 0x414D26: invalid_extern_002 (in ) 
==32591==    by 0x414DB8: invalid_extern_main (in ) 
==32591==    by 0x401A2F: main (in ) 
==32591==  
==32591== HEAP SUMMARY: 
==32591==     in use at exit: 0 bytes in 0 blocks 
==32591==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==32591==  
==32591== All heap blocks were freed -- no leaks are possible 
==32591==  
==32591== For counts of detected and suppressed errors, rerun with: -v 
==32591== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 23 3

vflag_file = 23 vflag_func = 3 vflag_copy =23003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 23 4

vflag_file = 23 vflag_func = 4 vflag_copy =23004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 23 5

vflag_file = 23 vflag_func = 5 vflag_copy =23005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 23 6

==32598== Memcheck, a memory error detector 
==32598== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32598== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32598== Command: s 023006 
==32598==  
==32598== Invalid write of size 1 
==32598==    at 0x414D6C: invalid_extern_006 (in ) 
==32598==    by 0x414E40: invalid_extern_main (in ) 
==32598==    by 0x401A2F: main (in ) 
==32598==  Address 0x1 is not stack'd, malloc'd or (recently) free'd 
==32598==  
==32598==  
==32598== Process terminating with default action of signal 11 (SIGSEGV) 
==32598==  Access not within mapped region at address 0x1 
==32598==    at 0x414D6C: invalid_extern_006 (in ) 
==32598==    by 0x414E40: invalid_extern_main (in ) 
==32598==    by 0x401A2F: main (in ) 
==32598==  If you believe this happened as a result of a stack 
==32598==  overflow in your program's main thread (unlikely but 
==32598==  possible), you can try to increase the size of the 
==32598==  main thread stack using the --main-stacksize= flag. 
==32598==  The main thread stack size used in this run was 8388608. 
==32598==  
==32598== HEAP SUMMARY: 
==32598==     in use at exit: 0 bytes in 0 blocks 
==32598==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==32598==  
==32598== All heap blocks were freed -- no leaks are possible 
==32598==  
==32598== For counts of detected and suppressed errors, rerun with: -v 
==32598== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 24 1

==32602== Memcheck, a memory error detector 
==32602== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32602== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32602== Command: s 024001 
==32602==  
==32602== Invalid read of size 4 
==32602==    at 0x4159CA: invalid_memory_access_001 (in ) 
==32602==    by 0x4167EC: invalid_memory_access_main (in ) 
==32602==    by 0x401A4C: main (in ) 
==32602==  Address 0x5720044 is 4 bytes inside a block of size 40 free'd 
==32602==    at 0x4C2BDEC: free (in ) 
==32602==    by 0x4159BF: invalid_memory_access_001 (in ) 
==32602==    by 0x4167EC: invalid_memory_access_main (in ) 
==32602==    by 0x401A4C: main (in ) 
==32602==  
==32602==  
==32602== HEAP SUMMARY: 
==32602==     in use at exit: 0 bytes in 0 blocks 
==32602==   total heap usage: 1 allocs, 1 frees, 40 bytes allocated 
==32602==  
==32602== All heap blocks were freed -- no leaks are possible 
==32602==  
==32602== For counts of detected and suppressed errors, rerun with: -v 
==32602== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 24 2

==32603== Memcheck, a memory error detector 
==32603== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32603== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32603== Command: s 024002 
==32603==  
==32603== Invalid read of size 8 
==32603==    at 0x415A84: invalid_memory_access_002 (in ) 
==32603==    by 0x41680E: invalid_memory_access_main (in ) 
==32603==    by 0x401A4C: main (in ) 
==32603==  Address 0x5720048 is 8 bytes inside a block of size 40 free'd 
==32603==    at 0x4C2BDEC: free (in ) 
==32603==    by 0x415A74: invalid_memory_access_002 (in ) 
==32603==    by 0x41680E: invalid_memory_access_main (in ) 
==32603==    by 0x401A4C: main (in ) 
==32603==  
==32603==  
==32603== HEAP SUMMARY: 
==32603==     in use at exit: 0 bytes in 0 blocks 
==32603==   total heap usage: 1 allocs, 1 frees, 40 bytes allocated 
==32603==  
==32603== All heap blocks were freed -- no leaks are possible 
==32603==  
==32603== For counts of detected and suppressed errors, rerun with: -v 
==32603== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 24 3

vflag_file = 24 vflag_func = 3 vflag_copy =24003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 24 4

==32605== Memcheck, a memory error detector 
==32605== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32605== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32605== Command: s 024004 
==32605==  
==32605== Invalid read of size 1 
==32605==    at 0x53A6A03: vfprintf (vfprintf.c:1661) 
==32605==    by 0x53AF498: printf (printf.c:33) 
==32605==    by 0x415BA0: invalid_memory_access_004 (in ) 
==32605==    by 0x416852: invalid_memory_access_main (in ) 
==32605==    by 0x401A4C: main (in ) 
==32605==  Address 0x5720040 is 0 bytes inside a block of size 100 free'd 
==32605==    at 0x4C2BDEC: free (in ) 
==32605==    by 0x415B80: invalid_memory_access_004 (in ) 
==32605==    by 0x416852: invalid_memory_access_main (in ) 
==32605==    by 0x401A4C: main (in ) 
==32605==  
==32605== Invalid read of size 8 
==32605==    at 0x53E77D2: __GI_mempcpy (memcpy.S:196) 
==32605==    by 0x53D464C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1320) 
==32605==    by 0x53A69C4: vfprintf (vfprintf.c:1661) 
==32605==    by 0x53AF498: printf (printf.c:33) 
==32605==    by 0x415BA0: invalid_memory_access_004 (in ) 
==32605==    by 0x416852: invalid_memory_access_main (in ) 
==32605==    by 0x401A4C: main (in ) 
==32605==  Address 0x5720040 is 0 bytes inside a block of size 100 free'd 
==32605==    at 0x4C2BDEC: free (in ) 
==32605==    by 0x415B80: invalid_memory_access_004 (in ) 
==32605==    by 0x416852: invalid_memory_access_main (in ) 
==32605==    by 0x401A4C: main (in ) 
==32605==  
==32605== Invalid read of size 8 
==32605==    at 0x53E77D5: __GI_mempcpy (memcpy.S:197) 
==32605==    by 0x53D464C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1320) 
==32605==    by 0x53A69C4: vfprintf (vfprintf.c:1661) 
==32605==    by 0x53AF498: printf (printf.c:33) 
==32605==    by 0x415BA0: invalid_memory_access_004 (in ) 
==32605==    by 0x416852: invalid_memory_access_main (in ) 
==32605==    by 0x401A4C: main (in ) 
==32605==  Address 0x5720048 is 8 bytes inside a block of size 100 free'd 
==32605==    at 0x4C2BDEC: free (in ) 
==32605==    by 0x415B80: invalid_memory_access_004 (in ) 
==32605==    by 0x416852: invalid_memory_access_main (in ) 
==32605==    by 0x401A4C: main (in ) 
==32605==  
==32605== Invalid read of size 8 
==32605==    at 0x53E77D9: __GI_mempcpy (memcpy.S:198) 
==32605==    by 0x53D464C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1320) 
==32605==    by 0x53A69C4: vfprintf (vfprintf.c:1661) 
==32605==    by 0x53AF498: printf (printf.c:33) 
==32605==    by 0x415BA0: invalid_memory_access_004 (in ) 
==32605==    by 0x416852: invalid_memory_access_main (in ) 
==32605==    by 0x401A4C: main (in ) 
==32605==  Address 0x5720050 is 16 bytes inside a block of size 100 free'd 
==32605==    at 0x4C2BDEC: free (in ) 
==32605==    by 0x415B80: invalid_memory_access_004 (in ) 
==32605==    by 0x416852: invalid_memory_access_main (in ) 
==32605==    by 0x401A4C: main (in ) 
==32605==  
==32605== Invalid read of size 8 
==32605==    at 0x53E77DD: __GI_mempcpy (memcpy.S:199) 
==32605==    by 0x53D464C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1320) 
==32605==    by 0x53A69C4: vfprintf (vfprintf.c:1661) 
==32605==    by 0x53AF498: printf (printf.c:33) 
==32605==    by 0x415BA0: invalid_memory_access_004 (in ) 
==32605==    by 0x416852: invalid_memory_access_main (in ) 
==32605==    by 0x401A4C: main (in ) 
==32605==  Address 0x5720058 is 24 bytes inside a block of size 100 free'd 
==32605==    at 0x4C2BDEC: free (in ) 
==32605==    by 0x415B80: invalid_memory_access_004 (in ) 
==32605==    by 0x416852: invalid_memory_access_main (in ) 
==32605==    by 0x401A4C: main (in ) 
==32605==  
==32605== Invalid read of size 8 
==32605==    at 0x53E77FC: __GI_mempcpy (memcpy.S:213) 
==32605==    by 0x53D464C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1320) 
==32605==    by 0x53A69C4: vfprintf (vfprintf.c:1661) 
==32605==    by 0x53AF498: printf (printf.c:33) 
==32605==    by 0x415BA0: invalid_memory_access_004 (in ) 
==32605==    by 0x416852: invalid_memory_access_main (in ) 
==32605==    by 0x401A4C: main (in ) 
==32605==  Address 0x5720060 is 32 bytes inside a block of size 100 free'd 
==32605==    at 0x4C2BDEC: free (in ) 
==32605==    by 0x415B80: invalid_memory_access_004 (in ) 
==32605==    by 0x416852: invalid_memory_access_main (in ) 
==32605==    by 0x401A4C: main (in ) 
==32605==  
==32605== Invalid read of size 8 
==32605==    at 0x53E77FF: __GI_mempcpy (memcpy.S:214) 
==32605==    by 0x53D464C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1320) 
==32605==    by 0x53A69C4: vfprintf (vfprintf.c:1661) 
==32605==    by 0x53AF498: printf (printf.c:33) 
==32605==    by 0x415BA0: invalid_memory_access_004 (in ) 
==32605==    by 0x416852: invalid_memory_access_main (in ) 
==32605==    by 0x401A4C: main (in ) 
==32605==  Address 0x5720068 is 40 bytes inside a block of size 100 free'd 
==32605==    at 0x4C2BDEC: free (in ) 
==32605==    by 0x415B80: invalid_memory_access_004 (in ) 
==32605==    by 0x416852: invalid_memory_access_main (in ) 
==32605==    by 0x401A4C: main (in ) 
==32605==  
==32605== Invalid read of size 8 
==32605==    at 0x53E7803: __GI_mempcpy (memcpy.S:215) 
==32605==    by 0x53D464C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1320) 
==32605==    by 0x53A69C4: vfprintf (vfprintf.c:1661) 
==32605==    by 0x53AF498: printf (printf.c:33) 
==32605==    by 0x415BA0: invalid_memory_access_004 (in ) 
==32605==    by 0x416852: invalid_memory_access_main (in ) 
==32605==    by 0x401A4C: main (in ) 
==32605==  Address 0x5720070 is 48 bytes inside a block of size 100 free'd 
==32605==    at 0x4C2BDEC: free (in ) 
==32605==    by 0x415B80: invalid_memory_access_004 (in ) 
==32605==    by 0x416852: invalid_memory_access_main (in ) 
==32605==    by 0x401A4C: main (in ) 
==32605==  
==32605== Invalid read of size 8 
==32605==    at 0x53E7807: __GI_mempcpy (memcpy.S:216) 
==32605==    by 0x53D464C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1320) 
==32605==    by 0x53A69C4: vfprintf (vfprintf.c:1661) 
==32605==    by 0x53AF498: printf (printf.c:33) 
==32605==    by 0x415BA0: invalid_memory_access_004 (in ) 
==32605==    by 0x416852: invalid_memory_access_main (in ) 
==32605==    by 0x401A4C: main (in ) 
==32605==  Address 0x5720078 is 56 bytes inside a block of size 100 free'd 
==32605==    at 0x4C2BDEC: free (in ) 
==32605==    by 0x415B80: invalid_memory_access_004 (in ) 
==32605==    by 0x416852: invalid_memory_access_main (in ) 
==32605==    by 0x401A4C: main (in ) 
==32605==  
==32605== Invalid read of size 1 
==32605==    at 0x53E771B: __GI_mempcpy (memcpy.S:71) 
==32605==    by 0x53D464C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1320) 
==32605==    by 0x53A69C4: vfprintf (vfprintf.c:1661) 
==32605==    by 0x53AF498: printf (printf.c:33) 
==32605==    by 0x415BA0: invalid_memory_access_004 (in ) 
==32605==    by 0x416852: invalid_memory_access_main (in ) 
==32605==    by 0x401A4C: main (in ) 
==32605==  Address 0x57200a0 is 96 bytes inside a block of size 100 free'd 
==32605==    at 0x4C2BDEC: free (in ) 
==32605==    by 0x415B80: invalid_memory_access_004 (in ) 
==32605==    by 0x416852: invalid_memory_access_main (in ) 
==32605==    by 0x401A4C: main (in ) 
==32605==  
==32605== Invalid read of size 2 
==32605==    at 0x53E772B: __GI_mempcpy (memcpy.S:83) 
==32605==    by 0x53D464C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1320) 
==32605==    by 0x53A69C4: vfprintf (vfprintf.c:1661) 
==32605==    by 0x53AF498: printf (printf.c:33) 
==32605==    by 0x415BA0: invalid_memory_access_004 (in ) 
==32605==    by 0x416852: invalid_memory_access_main (in ) 
==32605==    by 0x401A4C: main (in ) 
==32605==  Address 0x57200a1 is 97 bytes inside a block of size 100 free'd 
==32605==    at 0x4C2BDEC: free (in ) 
==32605==    by 0x415B80: invalid_memory_access_004 (in ) 
==32605==    by 0x416852: invalid_memory_access_main (in ) 
==32605==    by 0x401A4C: main (in ) 
==32605==  
==32605==  
==32605== HEAP SUMMARY: 
==32605==     in use at exit: 0 bytes in 0 blocks 
==32605==   total heap usage: 1 allocs, 1 frees, 100 bytes allocated 
==32605==  
==32605== All heap blocks were freed -- no leaks are possible 
==32605==  
==32605== For counts of detected and suppressed errors, rerun with: -v 
==32605== ERROR SUMMARY: 114 errors from 11 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 24 5

==32606== Memcheck, a memory error detector 
==32606== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32606== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32606== Command: s 024005 
==32606==  
==32606== Use of uninitialised value of size 8 
==32606==    at 0x415BB8: invalid_memory_access_005 (in ) 
==32606==    by 0x415C1A: invalid_memory_access_005 (in ) 
==32606==    by 0x415C1A: invalid_memory_access_005 (in ) 
==32606==    by 0x415C1A: invalid_memory_access_005 (in ) 
==32606==    by 0x415C1A: invalid_memory_access_005 (in ) 
==32606==    by 0x415C1A: invalid_memory_access_005 (in ) 
==32606==    by 0x416874: invalid_memory_access_main (in ) 
==32606==    by 0x401A4C: main (in ) 
==32606==  
==32606== Invalid read of size 4 
==32606==    at 0x415BB8: invalid_memory_access_005 (in ) 
==32606==    by 0x415C1A: invalid_memory_access_005 (in ) 
==32606==    by 0x415C1A: invalid_memory_access_005 (in ) 
==32606==    by 0x415C1A: invalid_memory_access_005 (in ) 
==32606==    by 0x415C1A: invalid_memory_access_005 (in ) 
==32606==    by 0x415C1A: invalid_memory_access_005 (in ) 
==32606==    by 0x416874: invalid_memory_access_main (in ) 
==32606==    by 0x401A4C: main (in ) 
==32606==  Address 0x0 is not stack'd, malloc'd or (recently) free'd 
==32606==  
==32606==  
==32606== Process terminating with default action of signal 11 (SIGSEGV) 
==32606==  Access not within mapped region at address 0x0 
==32606==    at 0x415BB8: invalid_memory_access_005 (in ) 
==32606==    by 0x415C1A: invalid_memory_access_005 (in ) 
==32606==    by 0x415C1A: invalid_memory_access_005 (in ) 
==32606==    by 0x415C1A: invalid_memory_access_005 (in ) 
==32606==    by 0x415C1A: invalid_memory_access_005 (in ) 
==32606==    by 0x415C1A: invalid_memory_access_005 (in ) 
==32606==    by 0x416874: invalid_memory_access_main (in ) 
==32606==    by 0x401A4C: main (in ) 
==32606==  If you believe this happened as a result of a stack 
==32606==  overflow in your program's main thread (unlikely but 
==32606==  possible), you can try to increase the size of the 
==32606==  main thread stack using the --main-stacksize= flag. 
==32606==  The main thread stack size used in this run was 8388608. 
==32606==  
==32606== HEAP SUMMARY: 
==32606==     in use at exit: 0 bytes in 0 blocks 
==32606==   total heap usage: 5 allocs, 5 frees, 60 bytes allocated 
==32606==  
==32606== All heap blocks were freed -- no leaks are possible 
==32606==  
==32606== For counts of detected and suppressed errors, rerun with: -v 
==32606== Use --track-origins=yes to see where uninitialised values come from 
==32606== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 24 6

==32610== Memcheck, a memory error detector 
==32610== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32610== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32610== Command: s 024006 
==32610==  
==32610== Invalid read of size 4 
==32610==    at 0x415D4C: invalid_memory_access_006 (in ) 
==32610==    by 0x416896: invalid_memory_access_main (in ) 
==32610==    by 0x401A4C: main (in ) 
==32610==  Address 0x57200a0 is 0 bytes inside a block of size 20 free'd 
==32610==    at 0x4C2BDEC: free (in ) 
==32610==    by 0x415D18: invalid_memory_access_006 (in ) 
==32610==    by 0x416896: invalid_memory_access_main (in ) 
==32610==    by 0x401A4C: main (in ) 
==32610==  
==32610== Invalid write of size 4 
==32610==    at 0x415D4E: invalid_memory_access_006 (in ) 
==32610==    by 0x416896: invalid_memory_access_main (in ) 
==32610==    by 0x401A4C: main (in ) 
==32610==  Address 0x57200a4 is 4 bytes inside a block of size 20 free'd 
==32610==    at 0x4C2BDEC: free (in ) 
==32610==    by 0x415D18: invalid_memory_access_006 (in ) 
==32610==    by 0x416896: invalid_memory_access_main (in ) 
==32610==    by 0x401A4C: main (in ) 
==32610==  
==32610==  
==32610== HEAP SUMMARY: 
==32610==     in use at exit: 0 bytes in 0 blocks 
==32610==   total heap usage: 5 allocs, 5 frees, 100 bytes allocated 
==32610==  
==32610== All heap blocks were freed -- no leaks are possible 
==32610==  
==32610== For counts of detected and suppressed errors, rerun with: -v 
==32610== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 24 7

==32611== Memcheck, a memory error detector 
==32611== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32611== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32611== Command: s 024007 
==32611==  
==32611== Invalid read of size 8 
==32611==    at 0x415E26: invalid_memory_access_007 (in ) 
==32611==    by 0x4168B8: invalid_memory_access_main (in ) 
==32611==    by 0x401A4C: main (in ) 
==32611==  Address 0x5720050 is 16 bytes inside a block of size 40 free'd 
==32611==    at 0x4C2BDEC: free (in ) 
==32611==    by 0x415E1D: invalid_memory_access_007 (in ) 
==32611==    by 0x4168B8: invalid_memory_access_main (in ) 
==32611==    by 0x401A4C: main (in ) 
==32611==  
==32611== Invalid write of size 4 
==32611==    at 0x415E29: invalid_memory_access_007 (in ) 
==32611==    by 0x4168B8: invalid_memory_access_main (in ) 
==32611==    by 0x401A4C: main (in ) 
==32611==  Address 0x0 is not stack'd, malloc'd or (recently) free'd 
==32611==  
==32611==  
==32611== Process terminating with default action of signal 11 (SIGSEGV) 
==32611==  Access not within mapped region at address 0x0 
==32611==    at 0x415E29: invalid_memory_access_007 (in ) 
==32611==    by 0x4168B8: invalid_memory_access_main (in ) 
==32611==    by 0x401A4C: main (in ) 
==32611==  If you believe this happened as a result of a stack 
==32611==  overflow in your program's main thread (unlikely but 
==32611==  possible), you can try to increase the size of the 
==32611==  main thread stack using the --main-stacksize= flag. 
==32611==  The main thread stack size used in this run was 8388608. 
==32611==  
==32611== HEAP SUMMARY: 
==32611==     in use at exit: 0 bytes in 0 blocks 
==32611==   total heap usage: 6 allocs, 6 frees, 115 bytes allocated 
==32611==  
==32611== All heap blocks were freed -- no leaks are possible 
==32611==  
==32611== For counts of detected and suppressed errors, rerun with: -v 
==32611== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 24 8

==32615== Memcheck, a memory error detector 
==32615== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32615== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32615== Command: s 024008 
==32615==  
==32615== Invalid write of size 1 
==32615==    at 0x4C2F953: memcpy@@GLIBC_2.14 (in ) 
==32615==    by 0x415E8D: invalid_memory_access_008 (in ) 
==32615==    by 0x4168DA: invalid_memory_access_main (in ) 
==32615==    by 0x401A4C: main (in ) 
==32615==  Address 0x5720040 is 0 bytes inside a block of size 25 free'd 
==32615==    at 0x4C2BDEC: free (in ) 
==32615==    by 0x415E75: invalid_memory_access_008 (in ) 
==32615==    by 0x4168DA: invalid_memory_access_main (in ) 
==32615==    by 0x401A4C: main (in ) 
==32615==  
==32615==  
==32615== HEAP SUMMARY: 
==32615==     in use at exit: 0 bytes in 0 blocks 
==32615==   total heap usage: 1 allocs, 1 frees, 25 bytes allocated 
==32615==  
==32615== All heap blocks were freed -- no leaks are possible 
==32615==  
==32615== For counts of detected and suppressed errors, rerun with: -v 
==32615== ERROR SUMMARY: 11 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 24 9

==32616== Memcheck, a memory error detector 
==32616== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32616== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32616== Command: s 024009 
==32616==  
==32616== Invalid read of size 8 
==32616==    at 0x415F37: invalid_memory_access_009 (in ) 
==32616==    by 0x4168FC: invalid_memory_access_main (in ) 
==32616==    by 0x401A4C: main (in ) 
==32616==  Address 0x5720040 is 0 bytes inside a block of size 80 free'd 
==32616==    at 0x4C2BDEC: free (in ) 
==32616==    by 0x415F32: invalid_memory_access_009 (in ) 
==32616==    by 0x4168FC: invalid_memory_access_main (in ) 
==32616==    by 0x401A4C: main (in ) 
==32616==  
==32616== Invalid read of size 8 
==32616==    at 0x415F3A: invalid_memory_access_009 (in ) 
==32616==    by 0x4168FC: invalid_memory_access_main (in ) 
==32616==    by 0x401A4C: main (in ) 
==32616==  Address 0x57200d0 is 0 bytes inside a block of size 8 free'd 
==32616==    at 0x4C2BDEC: free (in ) 
==32616==    by 0x415F26: invalid_memory_access_009 (in ) 
==32616==    by 0x4168FC: invalid_memory_access_main (in ) 
==32616==    by 0x401A4C: main (in ) 
==32616==  
==32616== Invalid write of size 4 
==32616==    at 0x415F3D: invalid_memory_access_009 (in ) 
==32616==    by 0x4168FC: invalid_memory_access_main (in ) 
==32616==    by 0x401A4C: main (in ) 
==32616==  Address 0x5720120 is 0 bytes inside a block of size 20 free'd 
==32616==    at 0x4C2BDEC: free (in ) 
==32616==    by 0x415F17: invalid_memory_access_009 (in ) 
==32616==    by 0x4168FC: invalid_memory_access_main (in ) 
==32616==    by 0x401A4C: main (in ) 
==32616==  
==32616==  
==32616== HEAP SUMMARY: 
==32616==     in use at exit: 0 bytes in 0 blocks 
==32616==   total heap usage: 3 allocs, 3 frees, 108 bytes allocated 
==32616==  
==32616== All heap blocks were freed -- no leaks are possible 
==32616==  
==32616== For counts of detected and suppressed errors, rerun with: -v 
==32616== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 24 10

==32617== Memcheck, a memory error detector 
==32617== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32617== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32617== Command: s 024010 
==32617==  
==32617== Invalid write of size 4 
==32617==    at 0x415FFD: invalid_memory_access_010 (in ) 
==32617==    by 0x41691E: invalid_memory_access_main (in ) 
==32617==    by 0x401A4C: main (in ) 
==32617==  Address 0x5720044 is 4 bytes inside a block of size 20 free'd 
==32617==    at 0x4C2BDEC: free (in ) 
==32617==    by 0x415FF1: invalid_memory_access_010 (in ) 
==32617==    by 0x41691E: invalid_memory_access_main (in ) 
==32617==    by 0x401A4C: main (in ) 
==32617==  
==32617==  
==32617== HEAP SUMMARY: 
==32617==     in use at exit: 0 bytes in 0 blocks 
==32617==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32617==  
==32617== All heap blocks were freed -- no leaks are possible 
==32617==  
==32617== For counts of detected and suppressed errors, rerun with: -v 
==32617== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 24 11

==32618== Memcheck, a memory error detector 
==32618== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32618== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32618== Command: s 024011 
==32618==  
==32618== Invalid write of size 4 
==32618==    at 0x4160A4: invalid_memory_access_011 (in ) 
==32618==    by 0x416940: invalid_memory_access_main (in ) 
==32618==    by 0x401A4C: main (in ) 
==32618==  Address 0x57203c0 is 0 bytes after a block of size 16 free'd 
==32618==    at 0x4C2BDEC: free (in ) 
==32618==    by 0x41607E: invalid_memory_access_011 (in ) 
==32618==    by 0x416940: invalid_memory_access_main (in ) 
==32618==    by 0x401A4C: main (in ) 
==32618==  
==32618==  
==32618== HEAP SUMMARY: 
==32618==     in use at exit: 0 bytes in 0 blocks 
==32618==   total heap usage: 12 allocs, 12 frees, 192 bytes allocated 
==32618==  
==32618== All heap blocks were freed -- no leaks are possible 
==32618==  
==32618== For counts of detected and suppressed errors, rerun with: -v 
==32618== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 24 12

==32619== Memcheck, a memory error detector 
==32619== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32619== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32619== Command: s 024012 
==32619==  
==32619== Invalid read of size 4 
==32619==    at 0x416170: invalid_memory_access_012_func_001 (in ) 
==32619==    by 0x41618A: invalid_memory_access_012 (in ) 
==32619==    by 0x416962: invalid_memory_access_main (in ) 
==32619==    by 0x401A4C: main (in ) 
==32619==  Address 0x5720040 is 0 bytes inside a block of size 12 free'd 
==32619==    at 0x4C2BDEC: free (in ) 
==32619==    by 0x41611A: invalid_memory_access_012_func_001 (in ) 
==32619==    by 0x41618A: invalid_memory_access_012 (in ) 
==32619==    by 0x416962: invalid_memory_access_main (in ) 
==32619==    by 0x401A4C: main (in ) 
==32619==  
==32619==  
==32619== HEAP SUMMARY: 
==32619==     in use at exit: 0 bytes in 0 blocks 
==32619==   total heap usage: 1 allocs, 1 frees, 12 bytes allocated 
==32619==  
==32619== All heap blocks were freed -- no leaks are possible 
==32619==  
==32619== For counts of detected and suppressed errors, rerun with: -v 
==32619== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 24 13

==32620== Memcheck, a memory error detector 
==32620== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32620== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32620== Command: s 024013 
==32620==  
==32620== Invalid read of size 4 
==32620==    at 0x41629F: invalid_memory_access_013_func_002 (in ) 
==32620==    by 0x4162FF: invalid_memory_access_013 (in ) 
==32620==    by 0x416984: invalid_memory_access_main (in ) 
==32620==    by 0x401A4C: main (in ) 
==32620==  Address 0x5720040 is 0 bytes inside a block of size 12 free'd 
==32620==    at 0x4C2BDEC: free (in ) 
==32620==    by 0x416240: invalid_memory_access_013_func_002 (in ) 
==32620==    by 0x4162FF: invalid_memory_access_013 (in ) 
==32620==    by 0x416984: invalid_memory_access_main (in ) 
==32620==    by 0x401A4C: main (in ) 
==32620==  
==32620==  
==32620== HEAP SUMMARY: 
==32620==     in use at exit: 0 bytes in 0 blocks 
==32620==   total heap usage: 1 allocs, 1 frees, 12 bytes allocated 
==32620==  
==32620== All heap blocks were freed -- no leaks are possible 
==32620==  
==32620== For counts of detected and suppressed errors, rerun with: -v 
==32620== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 24 14

==32621== Memcheck, a memory error detector 
==32621== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32621== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32621== Command: s 024014 
==32621==  
==32621== Invalid read of size 4 
==32621==    at 0x4163C1: invalid_memory_access_014 (in ) 
==32621==    by 0x4169A6: invalid_memory_access_main (in ) 
==32621==    by 0x401A4C: main (in ) 
==32621==  Address 0x5720048 is 8 bytes inside a block of size 20 free'd 
==32621==    at 0x4C2BDEC: free (in ) 
==32621==    by 0x4163BB: invalid_memory_access_014 (in ) 
==32621==    by 0x4169A6: invalid_memory_access_main (in ) 
==32621==    by 0x401A4C: main (in ) 
==32621==  
==32621==  
==32621== HEAP SUMMARY: 
==32621==     in use at exit: 0 bytes in 0 blocks 
==32621==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==32621==  
==32621== All heap blocks were freed -- no leaks are possible 
==32621==  
==32621== For counts of detected and suppressed errors, rerun with: -v 
==32621== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 24 15

vflag_file = 24 vflag_func = 15 vflag_copy =24015  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 24 16

==32623== Memcheck, a memory error detector 
==32623== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32623== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32623== Command: s 024016 
==32623==  
==32623== Invalid read of size 8 
==32623==    at 0x4165EA: invalid_memory_access_016_func_003 (in ) 
==32623==    by 0x4166B9: invalid_memory_access_016 (in ) 
==32623==    by 0x4169F6: invalid_memory_access_main (in ) 
==32623==    by 0x401A4C: main (in ) 
==32623==  Address 0x5720040 is 0 bytes inside a block of size 80 free'd 
==32623==    at 0x4C2BDEC: free (in ) 
==32623==    by 0x4166A1: invalid_memory_access_016 (in ) 
==32623==    by 0x4169F6: invalid_memory_access_main (in ) 
==32623==    by 0x401A4C: main (in ) 
==32623==  
==32623== Invalid read of size 1 
==32623==    at 0x4C2E1C7: strcpy (in ) 
==32623==    by 0x4165FB: invalid_memory_access_016_func_003 (in ) 
==32623==    by 0x4166B9: invalid_memory_access_016 (in ) 
==32623==    by 0x4169F6: invalid_memory_access_main (in ) 
==32623==    by 0x401A4C: main (in ) 
==32623==  Address 0x57200d0 is 0 bytes inside a block of size 10 free'd 
==32623==    at 0x4C2BDEC: free (in ) 
==32623==    by 0x416688: invalid_memory_access_016 (in ) 
==32623==    by 0x4169F6: invalid_memory_access_main (in ) 
==32623==    by 0x401A4C: main (in ) 
==32623==  
==32623== Invalid read of size 1 
==32623==    at 0x4C2E1E4: strcpy (in ) 
==32623==    by 0x4165FB: invalid_memory_access_016_func_003 (in ) 
==32623==    by 0x4166B9: invalid_memory_access_016 (in ) 
==32623==    by 0x4169F6: invalid_memory_access_main (in ) 
==32623==    by 0x401A4C: main (in ) 
==32623==  Address 0x57200d1 is 1 bytes inside a block of size 10 free'd 
==32623==    at 0x4C2BDEC: free (in ) 
==32623==    by 0x416688: invalid_memory_access_016 (in ) 
==32623==    by 0x4169F6: invalid_memory_access_main (in ) 
==32623==    by 0x401A4C: main (in ) 
==32623==  
==32623==  
==32623== HEAP SUMMARY: 
==32623==     in use at exit: 0 bytes in 0 blocks 
==32623==   total heap usage: 11 allocs, 11 frees, 180 bytes allocated 
==32623==  
==32623== All heap blocks were freed -- no leaks are possible 
==32623==  
==32623== For counts of detected and suppressed errors, rerun with: -v 
==32623== ERROR SUMMARY: 10 errors from 3 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 24 17

==32624== Memcheck, a memory error detector 
==32624== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32624== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32624== Command: s 024017 
==32624==  
==32624== Invalid read of size 1 
==32624==    at 0x4C2E1C7: strcpy (in ) 
==32624==    by 0x416753: invalid_memory_access_017_func_004 (in ) 
==32624==    by 0x4167C0: invalid_memory_access_017 (in ) 
==32624==    by 0x416A18: invalid_memory_access_main (in ) 
==32624==    by 0x401A4C: main (in ) 
==32624==  Address 0x5720040 is 0 bytes inside a block of size 10 free'd 
==32624==    at 0x4C2BDEC: free (in ) 
==32624==    by 0x416724: invalid_memory_access_017_func_003 (in ) 
==32624==    by 0x4167A8: invalid_memory_access_017 (in ) 
==32624==    by 0x416A18: invalid_memory_access_main (in ) 
==32624==    by 0x401A4C: main (in ) 
==32624==  
==32624== Invalid read of size 1 
==32624==    at 0x4C2E1E4: strcpy (in ) 
==32624==    by 0x416753: invalid_memory_access_017_func_004 (in ) 
==32624==    by 0x4167C0: invalid_memory_access_017 (in ) 
==32624==    by 0x416A18: invalid_memory_access_main (in ) 
==32624==    by 0x401A4C: main (in ) 
==32624==  Address 0x5720041 is 1 bytes inside a block of size 10 free'd 
==32624==    at 0x4C2BDEC: free (in ) 
==32624==    by 0x416724: invalid_memory_access_017_func_003 (in ) 
==32624==    by 0x4167A8: invalid_memory_access_017 (in ) 
==32624==    by 0x416A18: invalid_memory_access_main (in ) 
==32624==    by 0x401A4C: main (in ) 
==32624==  
==32624==  
==32624== HEAP SUMMARY: 
==32624==     in use at exit: 0 bytes in 0 blocks 
==32624==   total heap usage: 1 allocs, 1 frees, 10 bytes allocated 
==32624==  
==32624== All heap blocks were freed -- no leaks are possible 
==32624==  
==32624== For counts of detected and suppressed errors, rerun with: -v 
==32624== ERROR SUMMARY: 5 errors from 2 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 25 1

==32625== Memcheck, a memory error detector 
==32625== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32625== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32625== Command: s 025001 
==32625==  
==32625== Conditional jump or move depends on uninitialised value(s) 
==32625==    at 0x53A558E: vfprintf (vfprintf.c:1660) 
==32625==    by 0x53AF498: printf (printf.c:33) 
==32625==    by 0x416C56: littlemem_st_001 (in ) 
==32625==    by 0x416F5B: littlemem_st_main (in ) 
==32625==    by 0x401A69: main (in ) 
==32625==  
==32625== Use of uninitialised value of size 8 
==32625==    at 0x53A4A4B: _itoa_word (_itoa.c:179) 
==32625==    by 0x53A86F6: vfprintf (vfprintf.c:1660) 
==32625==    by 0x53AF498: printf (printf.c:33) 
==32625==    by 0x416C56: littlemem_st_001 (in ) 
==32625==    by 0x416F5B: littlemem_st_main (in ) 
==32625==    by 0x401A69: main (in ) 
==32625==  
==32625== Conditional jump or move depends on uninitialised value(s) 
==32625==    at 0x53A4A55: _itoa_word (_itoa.c:179) 
==32625==    by 0x53A86F6: vfprintf (vfprintf.c:1660) 
==32625==    by 0x53AF498: printf (printf.c:33) 
==32625==    by 0x416C56: littlemem_st_001 (in ) 
==32625==    by 0x416F5B: littlemem_st_main (in ) 
==32625==    by 0x401A69: main (in ) 
==32625==  
==32625== Conditional jump or move depends on uninitialised value(s) 
==32625==    at 0x53A8742: vfprintf (vfprintf.c:1660) 
==32625==    by 0x53AF498: printf (printf.c:33) 
==32625==    by 0x416C56: littlemem_st_001 (in ) 
==32625==    by 0x416F5B: littlemem_st_main (in ) 
==32625==    by 0x401A69: main (in ) 
==32625==  
==32625== Conditional jump or move depends on uninitialised value(s) 
==32625==    at 0x53A5659: vfprintf (vfprintf.c:1660) 
==32625==    by 0x53AF498: printf (printf.c:33) 
==32625==    by 0x416C56: littlemem_st_001 (in ) 
==32625==    by 0x416F5B: littlemem_st_main (in ) 
==32625==    by 0x401A69: main (in ) 
==32625==  
==32625== Conditional jump or move depends on uninitialised value(s) 
==32625==    at 0x53A56DC: vfprintf (vfprintf.c:1660) 
==32625==    by 0x53AF498: printf (printf.c:33) 
==32625==    by 0x416C56: littlemem_st_001 (in ) 
==32625==    by 0x416F5B: littlemem_st_main (in ) 
==32625==    by 0x401A69: main (in ) 
==32625==  
==32625==  
==32625== HEAP SUMMARY: 
==32625==     in use at exit: 0 bytes in 0 blocks 
==32625==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==32625==  
==32625== All heap blocks were freed -- no leaks are possible 
==32625==  
==32625== For counts of detected and suppressed errors, rerun with: -v 
==32625== Use --track-origins=yes to see where uninitialised values come from 
==32625== ERROR SUMMARY: 10 errors from 6 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 25 2

vflag_file = 25 vflag_func = 2 vflag_copy =25002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 25 3

vflag_file = 25 vflag_func = 3 vflag_copy =25003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 25 4

vflag_file = 25 vflag_func = 4 vflag_copy =25004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 25 5

vflag_file = 25 vflag_func = 5 vflag_copy =25005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 25 6

vflag_file = 25 vflag_func = 6 vflag_copy =25006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 25 7

vflag_file = 25 vflag_func = 7 vflag_copy =25007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 25 8

vflag_file = 25 vflag_func = 8 vflag_copy =25008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 25 9

vflag_file = 25 vflag_func = 9 vflag_copy =25009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 25 10

vflag_file = 25 vflag_func = 10 vflag_copy =25010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 25 11

vflag_file = 25 vflag_func = 11 vflag_copy =25011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 27 1

vflag_file = 27 vflag_func = 1 vflag_copy =27001  
Task1! Lock Never Unlock, threadID# 99747584! gbl1 = 1  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 27 2

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 27 3

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 27 4

vflag_file = 27 vflag_func = 4 vflag_copy =27004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 27 5

vflag_file = 27 vflag_func = 5 vflag_copy =27005  
Task5! Lock Never Unlock, threadID# 99747584! gbl5 = 5  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 27 6

vflag_file = 27 vflag_func = 6 vflag_copy =27006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 27 7

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 27 8

vflag_file = 27 vflag_func = 8 vflag_copy =27008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 27 9

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 28 1

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 28 2

vflag_file = 28 vflag_func = 2 vflag_copy =28002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 28 3

==32663== Memcheck, a memory error detector 
==32663== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32663== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32663== Command: s 028003 
==32663==  
==32663== Invalid write of size 4 
==32663==    at 0x402FC5: memory_allocation_failure_003 (in ) 
==32663==    by 0x404039: memory_allocation_failure_main (in ) 
==32663==    by 0x401AC0: main (in ) 
==32663==  Address 0x0 is not stack'd, malloc'd or (recently) free'd 
==32663==  
==32663==  
==32663== Process terminating with default action of signal 11 (SIGSEGV) 
==32663==  Access not within mapped region at address 0x0 
==32663==    at 0x402FC5: memory_allocation_failure_003 (in ) 
==32663==    by 0x404039: memory_allocation_failure_main (in ) 
==32663==    by 0x401AC0: main (in ) 
==32663==  If you believe this happened as a result of a stack 
==32663==  overflow in your program's main thread (unlikely but 
==32663==  possible), you can try to increase the size of the 
==32663==  main thread stack using the --main-stacksize= flag. 
==32663==  The main thread stack size used in this run was 8388608. 
==32663==  
==32663== HEAP SUMMARY: 
==32663==     in use at exit: 80 bytes in 1 blocks 
==32663==   total heap usage: 1 allocs, 0 frees, 80 bytes allocated 
==32663==  
==32663== LEAK SUMMARY: 
==32663==    definitely lost: 0 bytes in 0 blocks 
==32663==    indirectly lost: 0 bytes in 0 blocks 
==32663==      possibly lost: 0 bytes in 0 blocks 
==32663==    still reachable: 80 bytes in 1 blocks 
==32663==         suppressed: 0 bytes in 0 blocks 
==32663== Rerun with --leak-check=full to see details of leaked memory 
==32663==  
==32663== For counts of detected and suppressed errors, rerun with: -v 
==32663== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 28 4

==32667== Memcheck, a memory error detector 
==32667== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32667== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32667== Command: s 028004 
==32667==  
==32667== Argument 'size' of function malloc has a fishy (possibly negative) value: -4 
==32667==    at 0x4C2AB80: malloc (in ) 
==32667==    by 0x403053: memory_allocation_failure_004 (in ) 
==32667==    by 0x40405B: memory_allocation_failure_main (in ) 
==32667==    by 0x401AC0: main (in ) 
==32667==  
==32667==  
==32667== HEAP SUMMARY: 
==32667==     in use at exit: 0 bytes in 0 blocks 
==32667==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==32667==  
==32667== All heap blocks were freed -- no leaks are possible 
==32667==  
==32667== For counts of detected and suppressed errors, rerun with: -v 
==32667== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 28 5

vflag_file = 28 vflag_func = 5 vflag_copy =28005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 28 6

vflag_file = 28 vflag_func = 6 vflag_copy =28006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 28 7

==32670== Memcheck, a memory error detector 
==32670== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32670== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32670== Command: s 028007 
==32670==  
==32670== Warning: set address range perms: large range [0x3a048040, 0x13a04803f) (undefined) 
==32670== Invalid read of size 1 
==32670==    at 0x40336C: memory_allocation_failure_007_func_001 (in ) 
==32670==    by 0x403431: memory_allocation_failure_007 (in ) 
==32670==    by 0x4040C1: memory_allocation_failure_main (in ) 
==32670==    by 0x401AC0: main (in ) 
==32670==  Address 0x10fefffbdd is not stack'd, malloc'd or (recently) free'd 
==32670==  
==32670==  
==32670== Process terminating with default action of signal 11 (SIGSEGV) 
==32670==  Access not within mapped region at address 0x10FEFFFBDD 
==32670==    at 0x40336C: memory_allocation_failure_007_func_001 (in ) 
==32670==    by 0x403431: memory_allocation_failure_007 (in ) 
==32670==    by 0x4040C1: memory_allocation_failure_main (in ) 
==32670==    by 0x401AC0: main (in ) 
==32670==  If you believe this happened as a result of a stack 
==32670==  overflow in your program's main thread (unlikely but 
==32670==  possible), you can try to increase the size of the 
==32670==  main thread stack using the --main-stacksize= flag. 
==32670==  The main thread stack size used in this run was 8388608. 
==32670==  
==32670== HEAP SUMMARY: 
==32670==     in use at exit: 4,294,967,295 bytes in 1 blocks 
==32670==   total heap usage: 1 allocs, 0 frees, 4,294,967,295 bytes allocated 
==32670==  
==32670== LEAK SUMMARY: 
==32670==    definitely lost: 0 bytes in 0 blocks 
==32670==    indirectly lost: 0 bytes in 0 blocks 
==32670==      possibly lost: 0 bytes in 0 blocks 
==32670==    still reachable: 4,294,967,295 bytes in 1 blocks 
==32670==         suppressed: 0 bytes in 0 blocks 
==32670== Rerun with --leak-check=full to see details of leaked memory 
==32670==  
==32670== For counts of detected and suppressed errors, rerun with: -v 
==32670== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 28 8

vflag_file = 28 vflag_func = 8 vflag_copy =28008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 28 9

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 28 10

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 28 11

==32677== Memcheck, a memory error detector 
==32677== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32677== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32677== Command: s 028011 
==32677==  
==32677== Argument 'size' of function malloc has a fishy (possibly negative) value: -8 
==32677==    at 0x4C2AB80: malloc (in ) 
==32677==    by 0x40365C: memory_allocation_failure_011_func_002 (in ) 
==32677==    by 0x4036AF: memory_allocation_failure_011 (in ) 
==32677==    by 0x404149: memory_allocation_failure_main (in ) 
==32677==    by 0x401AC0: main (in ) 
==32677==  
==32677== Invalid write of size 8 
==32677==    at 0x403675: memory_allocation_failure_011_func_002 (in ) 
==32677==    by 0x4036AF: memory_allocation_failure_011 (in ) 
==32677==    by 0x404149: memory_allocation_failure_main (in ) 
==32677==    by 0x401AC0: main (in ) 
==32677==  Address 0x0 is not stack'd, malloc'd or (recently) free'd 
==32677==  
==32677==  
==32677== Process terminating with default action of signal 11 (SIGSEGV) 
==32677==  Access not within mapped region at address 0x0 
==32677==    at 0x403675: memory_allocation_failure_011_func_002 (in ) 
==32677==    by 0x4036AF: memory_allocation_failure_011 (in ) 
==32677==    by 0x404149: memory_allocation_failure_main (in ) 
==32677==    by 0x401AC0: main (in ) 
==32677==  If you believe this happened as a result of a stack 
==32677==  overflow in your program's main thread (unlikely but 
==32677==  possible), you can try to increase the size of the 
==32677==  main thread stack using the --main-stacksize= flag. 
==32677==  The main thread stack size used in this run was 8388608. 
==32677==  
==32677== HEAP SUMMARY: 
==32677==     in use at exit: 16 bytes in 1 blocks 
==32677==   total heap usage: 1 allocs, 0 frees, 16 bytes allocated 
==32677==  
==32677== LEAK SUMMARY: 
==32677==    definitely lost: 16 bytes in 1 blocks 
==32677==    indirectly lost: 0 bytes in 0 blocks 
==32677==      possibly lost: 0 bytes in 0 blocks 
==32677==    still reachable: 0 bytes in 0 blocks 
==32677==         suppressed: 0 bytes in 0 blocks 
==32677== Rerun with --leak-check=full to see details of leaked memory 
==32677==  
==32677== For counts of detected and suppressed errors, rerun with: -v 
==32677== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 28 12

==32681== Memcheck, a memory error detector 
==32681== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32681== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32681== Command: s 028012 
==32681==  
==32681== Invalid read of size 4 
==32681==    at 0x403861: memory_allocation_failure_012_func_002 (in ) 
==32681==    by 0x4038A3: memory_allocation_failure_012 (in ) 
==32681==    by 0x40416B: memory_allocation_failure_main (in ) 
==32681==    by 0x401AC0: main (in ) 
==32681==  Address 0x4 is not stack'd, malloc'd or (recently) free'd 
==32681==  
==32681==  
==32681== Process terminating with default action of signal 11 (SIGSEGV) 
==32681==  Access not within mapped region at address 0x4 
==32681==    at 0x403861: memory_allocation_failure_012_func_002 (in ) 
==32681==    by 0x4038A3: memory_allocation_failure_012 (in ) 
==32681==    by 0x40416B: memory_allocation_failure_main (in ) 
==32681==    by 0x401AC0: main (in ) 
==32681==  If you believe this happened as a result of a stack 
==32681==  overflow in your program's main thread (unlikely but 
==32681==  possible), you can try to increase the size of the 
==32681==  main thread stack using the --main-stacksize= flag. 
==32681==  The main thread stack size used in this run was 8388608. 
==32681==  
==32681== HEAP SUMMARY: 
==32681==     in use at exit: 0 bytes in 0 blocks 
==32681==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==32681==  
==32681== All heap blocks were freed -- no leaks are possible 
==32681==  
==32681== For counts of detected and suppressed errors, rerun with: -v 
==32681== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 28 13

==32685== Memcheck, a memory error detector 
==32685== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32685== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32685== Command: s 028013 
==32685==  
==32685== Argument 'size' of function malloc has a fishy (possibly negative) value: -1 
==32685==    at 0x4C2AB80: malloc (in ) 
==32685==    by 0x40398C: memory_allocation_failure_013 (in ) 
==32685==    by 0x40418D: memory_allocation_failure_main (in ) 
==32685==    by 0x401AC0: main (in ) 
==32685==  
==32685== Invalid write of size 8 
==32685==    at 0x4039D1: memory_allocation_failure_013 (in ) 
==32685==    by 0x40418D: memory_allocation_failure_main (in ) 
==32685==    by 0x401AC0: main (in ) 
==32685==  Address 0x0 is not stack'd, malloc'd or (recently) free'd 
==32685==  
==32685==  
==32685== Process terminating with default action of signal 11 (SIGSEGV) 
==32685==  Access not within mapped region at address 0x0 
==32685==    at 0x4039D1: memory_allocation_failure_013 (in ) 
==32685==    by 0x40418D: memory_allocation_failure_main (in ) 
==32685==    by 0x401AC0: main (in ) 
==32685==  If you believe this happened as a result of a stack 
==32685==  overflow in your program's main thread (unlikely but 
==32685==  possible), you can try to increase the size of the 
==32685==  main thread stack using the --main-stacksize= flag. 
==32685==  The main thread stack size used in this run was 8388608. 
==32685==  
==32685== HEAP SUMMARY: 
==32685==     in use at exit: 80 bytes in 1 blocks 
==32685==   total heap usage: 1 allocs, 0 frees, 80 bytes allocated 
==32685==  
==32685== LEAK SUMMARY: 
==32685==    definitely lost: 0 bytes in 0 blocks 
==32685==    indirectly lost: 0 bytes in 0 blocks 
==32685==      possibly lost: 0 bytes in 0 blocks 
==32685==    still reachable: 80 bytes in 1 blocks 
==32685==         suppressed: 0 bytes in 0 blocks 
==32685== Rerun with --leak-check=full to see details of leaked memory 
==32685==  
==32685== For counts of detected and suppressed errors, rerun with: -v 
==32685== ERROR SUMMARY: 11 errors from 2 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 28 14

vflag_file = 28 vflag_func = 14 vflag_copy =28014  
0 10.500000Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 28 15

==32690== Memcheck, a memory error detector 
==32690== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32690== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32690== Command: s 028015 
==32690==  
==32690== Argument 'size' of function malloc has a fishy (possibly negative) value: -4 
==32690==    at 0x4C2AB80: malloc (in ) 
==32690==    by 0x403E47: memory_allocation_failure_015_func_002 (in ) 
==32690==    by 0x403E80: memory_allocation_failure_015_func_003 (in ) 
==32690==    by 0x403EAC: memory_allocation_failure_015 (in ) 
==32690==    by 0x4041D1: memory_allocation_failure_main (in ) 
==32690==    by 0x401AC0: main (in ) 
==32690==  
==32690== Invalid write of size 4 
==32690==    at 0x403E8C: memory_allocation_failure_015_func_003 (in ) 
==32690==    by 0x403EAC: memory_allocation_failure_015 (in ) 
==32690==    by 0x4041D1: memory_allocation_failure_main (in ) 
==32690==    by 0x401AC0: main (in ) 
==32690==  Address 0x4 is not stack'd, malloc'd or (recently) free'd 
==32690==  
==32690==  
==32690== Process terminating with default action of signal 11 (SIGSEGV) 
==32690==  Access not within mapped region at address 0x4 
==32690==    at 0x403E8C: memory_allocation_failure_015_func_003 (in ) 
==32690==    by 0x403EAC: memory_allocation_failure_015 (in ) 
==32690==    by 0x4041D1: memory_allocation_failure_main (in ) 
==32690==    by 0x401AC0: main (in ) 
==32690==  If you believe this happened as a result of a stack 
==32690==  overflow in your program's main thread (unlikely but 
==32690==  possible), you can try to increase the size of the 
==32690==  main thread stack using the --main-stacksize= flag. 
==32690==  The main thread stack size used in this run was 8388608. 
==32690==  
==32690== HEAP SUMMARY: 
==32690==     in use at exit: 0 bytes in 0 blocks 
==32690==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==32690==  
==32690== All heap blocks were freed -- no leaks are possible 
==32690==  
==32690== For counts of detected and suppressed errors, rerun with: -v 
==32690== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 28 16

vflag_file = 28 vflag_func = 16 vflag_copy =28016  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 29 1

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 29 2

vflag_file = 29 vflag_func = 2 vflag_copy =29002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 29 3

vflag_file = 29 vflag_func = 3 vflag_copy =29003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 29 4

vflag_file = 29 vflag_func = 4 vflag_copy =29004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 29 5

vflag_file = 29 vflag_func = 5 vflag_copy =29005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 29 6

vflag_file = 29 vflag_func = 6 vflag_copy =29006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 29 7

vflag_file = 29 vflag_func = 7 vflag_copy =29007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 29 8

vflag_file = 29 vflag_func = 8 vflag_copy =29008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 29 9

vflag_file = 29 vflag_func = 9 vflag_copy =29009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 29 10

vflag_file = 29 vflag_func = 10 vflag_copy =29010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 29 11

vflag_file = 29 vflag_func = 11 vflag_copy =29011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 29 12

vflag_file = 29 vflag_func = 12 vflag_copy =29012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 29 13

vflag_file = 29 vflag_func = 13 vflag_copy =29013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 29 14

vflag_file = 29 vflag_func = 14 vflag_copy =29014  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 29 15

vflag_file = 29 vflag_func = 15 vflag_copy =29015  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 29 16

vflag_file = 29 vflag_func = 16 vflag_copy =29016  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 29 17

vflag_file = 29 vflag_func = 17 vflag_copy =29017  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 29 18

vflag_file = 29 vflag_func = 18 vflag_copy =29018  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 30 1

vflag_file = 30 vflag_func = 1 vflag_copy =30001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 30 2

vflag_file = 30 vflag_func = 2 vflag_copy =30002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 30 3

vflag_file = 30 vflag_func = 3 vflag_copy =30003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 30 4

vflag_file = 30 vflag_func = 4 vflag_copy =30004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 31 1

==32717== Memcheck, a memory error detector 
==32717== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32717== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32717== Command: s 031001 
==32717==  
==32717== Invalid write of size 4 
==32717==    at 0x406A31: null_pointer_001 (in ) 
==32717==    by 0x406EEB: null_pointer_main (in ) 
==32717==    by 0x401B17: main (in ) 
==32717==  Address 0x0 is not stack'd, malloc'd or (recently) free'd 
==32717==  
==32717==  
==32717== Process terminating with default action of signal 11 (SIGSEGV) 
==32717==  Access not within mapped region at address 0x0 
==32717==    at 0x406A31: null_pointer_001 (in ) 
==32717==    by 0x406EEB: null_pointer_main (in ) 
==32717==    by 0x401B17: main (in ) 
==32717==  If you believe this happened as a result of a stack 
==32717==  overflow in your program's main thread (unlikely but 
==32717==  possible), you can try to increase the size of the 
==32717==  main thread stack using the --main-stacksize= flag. 
==32717==  The main thread stack size used in this run was 8388608. 
==32717==  
==32717== HEAP SUMMARY: 
==32717==     in use at exit: 0 bytes in 0 blocks 
==32717==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==32717==  
==32717== All heap blocks were freed -- no leaks are possible 
==32717==  
==32717== For counts of detected and suppressed errors, rerun with: -v 
==32717== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 31 2

==32721== Memcheck, a memory error detector 
==32721== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32721== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32721== Command: s 031002 
==32721==  
==32721== Invalid read of size 4 
==32721==    at 0x406A49: null_pointer_002 (in ) 
==32721==    by 0x406F0D: null_pointer_main (in ) 
==32721==    by 0x401B17: main (in ) 
==32721==  Address 0x0 is not stack'd, malloc'd or (recently) free'd 
==32721==  
==32721==  
==32721== Process terminating with default action of signal 11 (SIGSEGV) 
==32721==  Access not within mapped region at address 0x0 
==32721==    at 0x406A49: null_pointer_002 (in ) 
==32721==    by 0x406F0D: null_pointer_main (in ) 
==32721==    by 0x401B17: main (in ) 
==32721==  If you believe this happened as a result of a stack 
==32721==  overflow in your program's main thread (unlikely but 
==32721==  possible), you can try to increase the size of the 
==32721==  main thread stack using the --main-stacksize= flag. 
==32721==  The main thread stack size used in this run was 8388608. 
==32721==  
==32721== HEAP SUMMARY: 
==32721==     in use at exit: 0 bytes in 0 blocks 
==32721==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==32721==  
==32721== All heap blocks were freed -- no leaks are possible 
==32721==  
==32721== For counts of detected and suppressed errors, rerun with: -v 
==32721== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 31 3

==32725== Memcheck, a memory error detector 
==32725== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32725== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32725== Command: s 031003 
==32725==  
==32725== Invalid write of size 4 
==32725==    at 0x406A74: null_pointer_003 (in ) 
==32725==    by 0x406F2F: null_pointer_main (in ) 
==32725==    by 0x401B17: main (in ) 
==32725==  Address 0x0 is not stack'd, malloc'd or (recently) free'd 
==32725==  
==32725==  
==32725== Process terminating with default action of signal 11 (SIGSEGV) 
==32725==  Access not within mapped region at address 0x0 
==32725==    at 0x406A74: null_pointer_003 (in ) 
==32725==    by 0x406F2F: null_pointer_main (in ) 
==32725==    by 0x401B17: main (in ) 
==32725==  If you believe this happened as a result of a stack 
==32725==  overflow in your program's main thread (unlikely but 
==32725==  possible), you can try to increase the size of the 
==32725==  main thread stack using the --main-stacksize= flag. 
==32725==  The main thread stack size used in this run was 8388608. 
==32725==  
==32725== HEAP SUMMARY: 
==32725==     in use at exit: 0 bytes in 0 blocks 
==32725==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==32725==  
==32725== All heap blocks were freed -- no leaks are possible 
==32725==  
==32725== For counts of detected and suppressed errors, rerun with: -v 
==32725== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 31 4

==32729== Memcheck, a memory error detector 
==32729== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32729== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32729== Command: s 031004 
==32729==  
==32729== Invalid write of size 4 
==32729==    at 0x406A8C: null_pointer_004 (in ) 
==32729==    by 0x406F51: null_pointer_main (in ) 
==32729==    by 0x401B17: main (in ) 
==32729==  Address 0x0 is not stack'd, malloc'd or (recently) free'd 
==32729==  
==32729==  
==32729== Process terminating with default action of signal 11 (SIGSEGV) 
==32729==  Access not within mapped region at address 0x0 
==32729==    at 0x406A8C: null_pointer_004 (in ) 
==32729==    by 0x406F51: null_pointer_main (in ) 
==32729==    by 0x401B17: main (in ) 
==32729==  If you believe this happened as a result of a stack 
==32729==  overflow in your program's main thread (unlikely but 
==32729==  possible), you can try to increase the size of the 
==32729==  main thread stack using the --main-stacksize= flag. 
==32729==  The main thread stack size used in this run was 8388608. 
==32729==  
==32729== HEAP SUMMARY: 
==32729==     in use at exit: 0 bytes in 0 blocks 
==32729==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==32729==  
==32729== All heap blocks were freed -- no leaks are possible 
==32729==  
==32729== For counts of detected and suppressed errors, rerun with: -v 
==32729== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 31 5

==32733== Memcheck, a memory error detector 
==32733== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32733== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32733== Command: s 031005 
==32733==  
==32733== Invalid write of size 4 
==32733==    at 0x406AA4: null_pointer_005 (in ) 
==32733==    by 0x406F73: null_pointer_main (in ) 
==32733==    by 0x401B17: main (in ) 
==32733==  Address 0x0 is not stack'd, malloc'd or (recently) free'd 
==32733==  
==32733==  
==32733== Process terminating with default action of signal 11 (SIGSEGV) 
==32733==  Access not within mapped region at address 0x0 
==32733==    at 0x406AA4: null_pointer_005 (in ) 
==32733==    by 0x406F73: null_pointer_main (in ) 
==32733==    by 0x401B17: main (in ) 
==32733==  If you believe this happened as a result of a stack 
==32733==  overflow in your program's main thread (unlikely but 
==32733==  possible), you can try to increase the size of the 
==32733==  main thread stack using the --main-stacksize= flag. 
==32733==  The main thread stack size used in this run was 8388608. 
==32733==  
==32733== HEAP SUMMARY: 
==32733==     in use at exit: 0 bytes in 0 blocks 
==32733==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==32733==  
==32733== All heap blocks were freed -- no leaks are possible 
==32733==  
==32733== For counts of detected and suppressed errors, rerun with: -v 
==32733== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 31 6

==32737== Memcheck, a memory error detector 
==32737== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32737== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32737== Command: s 031006 
==32737==  
==32737== Invalid write of size 4 
==32737==    at 0x406AC3: null_pointer_006 (in ) 
==32737==    by 0x406F95: null_pointer_main (in ) 
==32737==    by 0x401B17: main (in ) 
==32737==  Address 0x6b8b4567 is not stack'd, malloc'd or (recently) free'd 
==32737==  
==32737==  
==32737== Process terminating with default action of signal 11 (SIGSEGV) 
==32737==  Access not within mapped region at address 0x6B8B4567 
==32737==    at 0x406AC3: null_pointer_006 (in ) 
==32737==    by 0x406F95: null_pointer_main (in ) 
==32737==    by 0x401B17: main (in ) 
==32737==  If you believe this happened as a result of a stack 
==32737==  overflow in your program's main thread (unlikely but 
==32737==  possible), you can try to increase the size of the 
==32737==  main thread stack using the --main-stacksize= flag. 
==32737==  The main thread stack size used in this run was 8388608. 
==32737==  
==32737== HEAP SUMMARY: 
==32737==     in use at exit: 0 bytes in 0 blocks 
==32737==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==32737==  
==32737== All heap blocks were freed -- no leaks are possible 
==32737==  
==32737== For counts of detected and suppressed errors, rerun with: -v 
==32737== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 31 7

==32741== Memcheck, a memory error detector 
==32741== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32741== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32741== Command: s 031007 
==32741==  
==32741== Invalid write of size 4 
==32741==    at 0x406AE8: null_pointer_007 (in ) 
==32741==    by 0x406FB7: null_pointer_main (in ) 
==32741==    by 0x401B17: main (in ) 
==32741==  Address 0x0 is not stack'd, malloc'd or (recently) free'd 
==32741==  
==32741==  
==32741== Process terminating with default action of signal 11 (SIGSEGV) 
==32741==  Access not within mapped region at address 0x0 
==32741==    at 0x406AE8: null_pointer_007 (in ) 
==32741==    by 0x406FB7: null_pointer_main (in ) 
==32741==    by 0x401B17: main (in ) 
==32741==  If you believe this happened as a result of a stack 
==32741==  overflow in your program's main thread (unlikely but 
==32741==  possible), you can try to increase the size of the 
==32741==  main thread stack using the --main-stacksize= flag. 
==32741==  The main thread stack size used in this run was 8388608. 
==32741==  
==32741== HEAP SUMMARY: 
==32741==     in use at exit: 0 bytes in 0 blocks 
==32741==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==32741==  
==32741== All heap blocks were freed -- no leaks are possible 
==32741==  
==32741== For counts of detected and suppressed errors, rerun with: -v 
==32741== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 31 8

==32745== Memcheck, a memory error detector 
==32745== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32745== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32745== Command: s 031008 
==32745==  
==32745== Invalid write of size 4 
==32745==    at 0x406B15: null_pointer_008 (in ) 
==32745==    by 0x406FD9: null_pointer_main (in ) 
==32745==    by 0x401B17: main (in ) 
==32745==  Address 0x0 is not stack'd, malloc'd or (recently) free'd 
==32745==  
==32745==  
==32745== Process terminating with default action of signal 11 (SIGSEGV) 
==32745==  Access not within mapped region at address 0x0 
==32745==    at 0x406B15: null_pointer_008 (in ) 
==32745==    by 0x406FD9: null_pointer_main (in ) 
==32745==    by 0x401B17: main (in ) 
==32745==  If you believe this happened as a result of a stack 
==32745==  overflow in your program's main thread (unlikely but 
==32745==  possible), you can try to increase the size of the 
==32745==  main thread stack using the --main-stacksize= flag. 
==32745==  The main thread stack size used in this run was 8388608. 
==32745==  
==32745== HEAP SUMMARY: 
==32745==     in use at exit: 0 bytes in 0 blocks 
==32745==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==32745==  
==32745== All heap blocks were freed -- no leaks are possible 
==32745==  
==32745== For counts of detected and suppressed errors, rerun with: -v 
==32745== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 31 9

==32749== Memcheck, a memory error detector 
==32749== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32749== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32749== Command: s 031009 
==32749==  
==32749== Invalid write of size 4 
==32749==    at 0x406B29: null_pointer_009_func_001 (in ) 
==32749==    by 0x406B3E: null_pointer_009 (in ) 
==32749==    by 0x406FFB: null_pointer_main (in ) 
==32749==    by 0x401B17: main (in ) 
==32749==  Address 0x0 is not stack'd, malloc'd or (recently) free'd 
==32749==  
==32749==  
==32749== Process terminating with default action of signal 11 (SIGSEGV) 
==32749==  Access not within mapped region at address 0x0 
==32749==    at 0x406B29: null_pointer_009_func_001 (in ) 
==32749==    by 0x406B3E: null_pointer_009 (in ) 
==32749==    by 0x406FFB: null_pointer_main (in ) 
==32749==    by 0x401B17: main (in ) 
==32749==  If you believe this happened as a result of a stack 
==32749==  overflow in your program's main thread (unlikely but 
==32749==  possible), you can try to increase the size of the 
==32749==  main thread stack using the --main-stacksize= flag. 
==32749==  The main thread stack size used in this run was 8388608. 
==32749==  
==32749== HEAP SUMMARY: 
==32749==     in use at exit: 0 bytes in 0 blocks 
==32749==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==32749==  
==32749== All heap blocks were freed -- no leaks are possible 
==32749==  
==32749== For counts of detected and suppressed errors, rerun with: -v 
==32749== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 31 10

==32753== Memcheck, a memory error detector 
==32753== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32753== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32753== Command: s 031010 
==32753==  
==32753== Invalid write of size 4 
==32753==    at 0x406B59: null_pointer_010 (in ) 
==32753==    by 0x40701D: null_pointer_main (in ) 
==32753==    by 0x401B17: main (in ) 
==32753==  Address 0x0 is not stack'd, malloc'd or (recently) free'd 
==32753==  
==32753==  
==32753== Process terminating with default action of signal 11 (SIGSEGV) 
==32753==  Access not within mapped region at address 0x0 
==32753==    at 0x406B59: null_pointer_010 (in ) 
==32753==    by 0x40701D: null_pointer_main (in ) 
==32753==    by 0x401B17: main (in ) 
==32753==  If you believe this happened as a result of a stack 
==32753==  overflow in your program's main thread (unlikely but 
==32753==  possible), you can try to increase the size of the 
==32753==  main thread stack using the --main-stacksize= flag. 
==32753==  The main thread stack size used in this run was 8388608. 
==32753==  
==32753== HEAP SUMMARY: 
==32753==     in use at exit: 0 bytes in 0 blocks 
==32753==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==32753==  
==32753== All heap blocks were freed -- no leaks are possible 
==32753==  
==32753== For counts of detected and suppressed errors, rerun with: -v 
==32753== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 31 11

==32757== Memcheck, a memory error detector 
==32757== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32757== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32757== Command: s 031011 
==32757==  
==32757== Invalid write of size 4 
==32757==    at 0x406B81: null_pointer_011 (in ) 
==32757==    by 0x40703F: null_pointer_main (in ) 
==32757==    by 0x401B17: main (in ) 
==32757==  Address 0x0 is not stack'd, malloc'd or (recently) free'd 
==32757==  
==32757==  
==32757== Process terminating with default action of signal 11 (SIGSEGV) 
==32757==  Access not within mapped region at address 0x0 
==32757==    at 0x406B81: null_pointer_011 (in ) 
==32757==    by 0x40703F: null_pointer_main (in ) 
==32757==    by 0x401B17: main (in ) 
==32757==  If you believe this happened as a result of a stack 
==32757==  overflow in your program's main thread (unlikely but 
==32757==  possible), you can try to increase the size of the 
==32757==  main thread stack using the --main-stacksize= flag. 
==32757==  The main thread stack size used in this run was 8388608. 
==32757==  
==32757== HEAP SUMMARY: 
==32757==     in use at exit: 0 bytes in 0 blocks 
==32757==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==32757==  
==32757== All heap blocks were freed -- no leaks are possible 
==32757==  
==32757== For counts of detected and suppressed errors, rerun with: -v 
==32757== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 31 12

==32761== Memcheck, a memory error detector 
==32761== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32761== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32761== Command: s 031012 
==32761==  
==32761== Invalid write of size 4 
==32761==    at 0x406B9D: null_pointer_012 (in ) 
==32761==    by 0x407061: null_pointer_main (in ) 
==32761==    by 0x401B17: main (in ) 
==32761==  Address 0xc is not stack'd, malloc'd or (recently) free'd 
==32761==  
==32761==  
==32761== Process terminating with default action of signal 11 (SIGSEGV) 
==32761==  Access not within mapped region at address 0xC 
==32761==    at 0x406B9D: null_pointer_012 (in ) 
==32761==    by 0x407061: null_pointer_main (in ) 
==32761==    by 0x401B17: main (in ) 
==32761==  If you believe this happened as a result of a stack 
==32761==  overflow in your program's main thread (unlikely but 
==32761==  possible), you can try to increase the size of the 
==32761==  main thread stack using the --main-stacksize= flag. 
==32761==  The main thread stack size used in this run was 8388608. 
==32761==  
==32761== HEAP SUMMARY: 
==32761==     in use at exit: 0 bytes in 0 blocks 
==32761==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==32761==  
==32761== All heap blocks were freed -- no leaks are possible 
==32761==  
==32761== For counts of detected and suppressed errors, rerun with: -v 
==32761== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 31 13

==32765== Memcheck, a memory error detector 
==32765== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==32765== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==32765== Command: s 031013 
==32765==  
==32765== Invalid write of size 4 
==32765==    at 0x406BD6: null_pointer_013 (in ) 
==32765==    by 0x407083: null_pointer_main (in ) 
==32765==    by 0x401B17: main (in ) 
==32765==  Address 0x0 is not stack'd, malloc'd or (recently) free'd 
==32765==  
==32765==  
==32765== Process terminating with default action of signal 11 (SIGSEGV) 
==32765==  Access not within mapped region at address 0x0 
==32765==    at 0x406BD6: null_pointer_013 (in ) 
==32765==    by 0x407083: null_pointer_main (in ) 
==32765==    by 0x401B17: main (in ) 
==32765==  If you believe this happened as a result of a stack 
==32765==  overflow in your program's main thread (unlikely but 
==32765==  possible), you can try to increase the size of the 
==32765==  main thread stack using the --main-stacksize= flag. 
==32765==  The main thread stack size used in this run was 8388608. 
==32765==  
==32765== HEAP SUMMARY: 
==32765==     in use at exit: 0 bytes in 0 blocks 
==32765==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==32765==  
==32765== All heap blocks were freed -- no leaks are possible 
==32765==  
==32765== For counts of detected and suppressed errors, rerun with: -v 
==32765== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 31 14

==301== Memcheck, a memory error detector 
==301== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==301== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==301== Command: s 031014 
==301==  
==301== Invalid write of size 4 
==301==    at 0x406BFE: null_pointer_014 (in ) 
==301==    by 0x4070A5: null_pointer_main (in ) 
==301==    by 0x401B17: main (in ) 
==301==  Address 0x0 is not stack'd, malloc'd or (recently) free'd 
==301==  
==301==  
==301== Process terminating with default action of signal 11 (SIGSEGV) 
==301==  Access not within mapped region at address 0x0 
==301==    at 0x406BFE: null_pointer_014 (in ) 
==301==    by 0x4070A5: null_pointer_main (in ) 
==301==    by 0x401B17: main (in ) 
==301==  If you believe this happened as a result of a stack 
==301==  overflow in your program's main thread (unlikely but 
==301==  possible), you can try to increase the size of the 
==301==  main thread stack using the --main-stacksize= flag. 
==301==  The main thread stack size used in this run was 8388608. 
==301==  
==301== HEAP SUMMARY: 
==301==     in use at exit: 0 bytes in 0 blocks 
==301==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==301==  
==301== All heap blocks were freed -- no leaks are possible 
==301==  
==301== For counts of detected and suppressed errors, rerun with: -v 
==301== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 31 15

==305== Memcheck, a memory error detector 
==305== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==305== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==305== Command: s 031015 
==305==  
==305== Invalid write of size 1 
==305==    at 0x4C2E1E0: strcpy (in ) 
==305==    by 0x406C89: null_pointer_015 (in ) 
==305==    by 0x4070C7: null_pointer_main (in ) 
==305==    by 0x401B17: main (in ) 
==305==  Address 0x0 is not stack'd, malloc'd or (recently) free'd 
==305==  
==305==  
==305== Process terminating with default action of signal 11 (SIGSEGV) 
==305==  Access not within mapped region at address 0x0 
==305==    at 0x4C2E1E0: strcpy (in ) 
==305==    by 0x406C89: null_pointer_015 (in ) 
==305==    by 0x4070C7: null_pointer_main (in ) 
==305==    by 0x401B17: main (in ) 
==305==  If you believe this happened as a result of a stack 
==305==  overflow in your program's main thread (unlikely but 
==305==  possible), you can try to increase the size of the 
==305==  main thread stack using the --main-stacksize= flag. 
==305==  The main thread stack size used in this run was 8388608. 
==305==  
==305== HEAP SUMMARY: 
==305==     in use at exit: 0 bytes in 0 blocks 
==305==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==305==  
==305== All heap blocks were freed -- no leaks are possible 
==305==  
==305== For counts of detected and suppressed errors, rerun with: -v 
==305== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 31 17

==309== Memcheck, a memory error detector 
==309== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==309== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==309== Command: s 031017 
==309==  
==309== Invalid read of size 8 
==309==    at 0x406E3F: null_pointer_017 (in ) 
==309==    by 0x40710B: null_pointer_main (in ) 
==309==    by 0x401B17: main (in ) 
==309==  Address 0x0 is not stack'd, malloc'd or (recently) free'd 
==309==  
==309==  
==309== Process terminating with default action of signal 11 (SIGSEGV) 
==309==  Access not within mapped region at address 0x0 
==309==    at 0x406E3F: null_pointer_017 (in ) 
==309==    by 0x40710B: null_pointer_main (in ) 
==309==    by 0x401B17: main (in ) 
==309==  If you believe this happened as a result of a stack 
==309==  overflow in your program's main thread (unlikely but 
==309==  possible), you can try to increase the size of the 
==309==  main thread stack using the --main-stacksize= flag. 
==309==  The main thread stack size used in this run was 8388608. 
==309==  
==309== HEAP SUMMARY: 
==309==     in use at exit: 0 bytes in 0 blocks 
==309==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==309==  
==309== All heap blocks were freed -- no leaks are possible 
==309==  
==309== For counts of detected and suppressed errors, rerun with: -v 
==309== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 32 1

vflag_file = 32 vflag_func = 1 vflag_copy =32001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 2

vflag_file = 32 vflag_func = 2 vflag_copy =32002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 3

vflag_file = 32 vflag_func = 3 vflag_copy =32003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 4

vflag_file = 32 vflag_func = 4 vflag_copy =32004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 5

vflag_file = 32 vflag_func = 5 vflag_copy =32005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 6

vflag_file = 32 vflag_func = 6 vflag_copy =32006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 7

vflag_file = 32 vflag_func = 7 vflag_copy =32007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 8

==320== Memcheck, a memory error detector 
==320== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==320== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==320== Command: s 032008 
==320==  
==320== Jump to the invalid address stated on the next line 
==320==    at 0x100408605: ??? 
==320==    by 0x401B34: main (in ) 
==320==  Address 0x100408605 is not stack'd, malloc'd or (recently) free'd 
==320==  
==320==  
==320== Process terminating with default action of signal 11 (SIGSEGV) 
==320==  Access not within mapped region at address 0x100408605 
==320==    at 0x100408605: ??? 
==320==    by 0x401B34: main (in ) 
==320==  If you believe this happened as a result of a stack 
==320==  overflow in your program's main thread (unlikely but 
==320==  possible), you can try to increase the size of the 
==320==  main thread stack using the --main-stacksize= flag. 
==320==  The main thread stack size used in this run was 8388608. 
==320==  
==320== HEAP SUMMARY: 
==320==     in use at exit: 0 bytes in 0 blocks 
==320==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==320==  
==320== All heap blocks were freed -- no leaks are possible 
==320==  
==320== For counts of detected and suppressed errors, rerun with: -v 
==320== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 32 9

vflag_file = 32 vflag_func = 9 vflag_copy =32009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 10

vflag_file = 32 vflag_func = 10 vflag_copy =32010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 11

vflag_file = 32 vflag_func = 11 vflag_copy =32011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 12

vflag_file = 32 vflag_func = 12 vflag_copy =32012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 13

vflag_file = 32 vflag_func = 13 vflag_copy =32013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 14

==329== Memcheck, a memory error detector 
==329== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==329== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==329== Command: s 032014 
==329==  
==329== Invalid write of size 4 
==329==    at 0x4078F2: overrun_st_014 (in ) 
==329==    by 0x4086D0: overrun_st_main (in ) 
==329==    by 0x401B34: main (in ) 
==329==  Address 0x11ad2d119c is not stack'd, malloc'd or (recently) free'd 
==329==  
==329==  
==329== Process terminating with default action of signal 11 (SIGSEGV) 
==329==  Access not within mapped region at address 0x11AD2D119C 
==329==    at 0x4078F2: overrun_st_014 (in ) 
==329==    by 0x4086D0: overrun_st_main (in ) 
==329==    by 0x401B34: main (in ) 
==329==  If you believe this happened as a result of a stack 
==329==  overflow in your program's main thread (unlikely but 
==329==  possible), you can try to increase the size of the 
==329==  main thread stack using the --main-stacksize= flag. 
==329==  The main thread stack size used in this run was 8388608. 
==329==  
==329== HEAP SUMMARY: 
==329==     in use at exit: 0 bytes in 0 blocks 
==329==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==329==  
==329== All heap blocks were freed -- no leaks are possible 
==329==  
==329== For counts of detected and suppressed errors, rerun with: -v 
==329== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 32 15

vflag_file = 32 vflag_func = 15 vflag_copy =32015  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 16

vflag_file = 32 vflag_func = 16 vflag_copy =32016  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 17

vflag_file = 32 vflag_func = 17 vflag_copy =32017  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 18

vflag_file = 32 vflag_func = 18 vflag_copy =32018  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 19

vflag_file = 32 vflag_func = 19 vflag_copy =32019  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 20

vflag_file = 32 vflag_func = 20 vflag_copy =32020  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 21

vflag_file = 32 vflag_func = 21 vflag_copy =32021  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 22

vflag_file = 32 vflag_func = 22 vflag_copy =32022  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 23

vflag_file = 32 vflag_func = 23 vflag_copy =32023  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 24

vflag_file = 32 vflag_func = 24 vflag_copy =32024  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 25

vflag_file = 32 vflag_func = 25 vflag_copy =32025  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 26

vflag_file = 32 vflag_func = 26 vflag_copy =32026  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 27

vflag_file = 32 vflag_func = 27 vflag_copy =32027  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 28

vflag_file = 32 vflag_func = 28 vflag_copy =32028  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 29

vflag_file = 32 vflag_func = 29 vflag_copy =32029  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 30

vflag_file = 32 vflag_func = 30 vflag_copy =32030  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 31

vflag_file = 32 vflag_func = 31 vflag_copy =32031  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 32

vflag_file = 32 vflag_func = 32 vflag_copy =32032  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 33

==352== Memcheck, a memory error detector 
==352== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==352== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==352== Command: s 032033 
==352==  
==352== Invalid write of size 4 
==352==    at 0x407D27: overrun_st_033 (in ) 
==352==    by 0x408956: overrun_st_main (in ) 
==352==    by 0x401B34: main (in ) 
==352==  Address 0x11ad2d119c is not stack'd, malloc'd or (recently) free'd 
==352==  
==352==  
==352== Process terminating with default action of signal 11 (SIGSEGV) 
==352==  Access not within mapped region at address 0x11AD2D119C 
==352==    at 0x407D27: overrun_st_033 (in ) 
==352==    by 0x408956: overrun_st_main (in ) 
==352==    by 0x401B34: main (in ) 
==352==  If you believe this happened as a result of a stack 
==352==  overflow in your program's main thread (unlikely but 
==352==  possible), you can try to increase the size of the 
==352==  main thread stack using the --main-stacksize= flag. 
==352==  The main thread stack size used in this run was 8388608. 
==352==  
==352== HEAP SUMMARY: 
==352==     in use at exit: 0 bytes in 0 blocks 
==352==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==352==  
==352== All heap blocks were freed -- no leaks are possible 
==352==  
==352== For counts of detected and suppressed errors, rerun with: -v 
==352== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 32 34

vflag_file = 32 vflag_func = 34 vflag_copy =32034  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 35

vflag_file = 32 vflag_func = 35 vflag_copy =32035  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 36

vflag_file = 32 vflag_func = 36 vflag_copy =32036  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 37

vflag_file = 32 vflag_func = 37 vflag_copy =32037  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 38

vflag_file = 32 vflag_func = 38 vflag_copy =32038  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 39

vflag_file = 32 vflag_func = 39 vflag_copy =32039  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 40

vflag_file = 32 vflag_func = 40 vflag_copy =32040  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 41

vflag_file = 32 vflag_func = 41 vflag_copy =32041  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 42

==364== Memcheck, a memory error detector 
==364== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==364== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==364== Command: s 032042 
==364==  
==364== Jump to the invalid address stated on the next line 
==364==    at 0x100000001: ??? 
==364==    by 0xFFEFFFC4F: ??? 
==364==    by 0x401B34: main (in ) 
==364==  Address 0x100000001 is not stack'd, malloc'd or (recently) free'd 
==364==  
==364==  
==364== Process terminating with default action of signal 11 (SIGSEGV) 
==364==  Access not within mapped region at address 0x100000001 
==364==    at 0x100000001: ??? 
==364==    by 0xFFEFFFC4F: ??? 
==364==    by 0x401B34: main (in ) 
==364==  If you believe this happened as a result of a stack 
==364==  overflow in your program's main thread (unlikely but 
==364==  possible), you can try to increase the size of the 
==364==  main thread stack using the --main-stacksize= flag. 
==364==  The main thread stack size used in this run was 8388608. 
==364==  
==364== HEAP SUMMARY: 
==364==     in use at exit: 0 bytes in 0 blocks 
==364==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==364==  
==364== All heap blocks were freed -- no leaks are possible 
==364==  
==364== For counts of detected and suppressed errors, rerun with: -v 
==364== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 32 43

vflag_file = 32 vflag_func = 43 vflag_copy =32043  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 44

vflag_file = 32 vflag_func = 44 vflag_copy =32044  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 45

vflag_file = 32 vflag_func = 45 vflag_copy =32045  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 46

vflag_file = 32 vflag_func = 46 vflag_copy =32046  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 47

vflag_file = 32 vflag_func = 47 vflag_copy =32047  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 48

vflag_file = 32 vflag_func = 48 vflag_copy =32048  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 49

vflag_file = 32 vflag_func = 49 vflag_copy =32049  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 50

==375== Memcheck, a memory error detector 
==375== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==375== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==375== Command: s 032050 
==375==  
==375== Jump to the invalid address stated on the next line 
==375==    at 0x100408B99: ??? 
==375==    by 0x401B34: main (in ) 
==375==  Address 0x100408b99 is not stack'd, malloc'd or (recently) free'd 
==375==  
==375==  
==375== Process terminating with default action of signal 11 (SIGSEGV) 
==375==  Access not within mapped region at address 0x100408B99 
==375==    at 0x100408B99: ??? 
==375==    by 0x401B34: main (in ) 
==375==  If you believe this happened as a result of a stack 
==375==  overflow in your program's main thread (unlikely but 
==375==  possible), you can try to increase the size of the 
==375==  main thread stack using the --main-stacksize= flag. 
==375==  The main thread stack size used in this run was 8388608. 
==375==  
==375== HEAP SUMMARY: 
==375==     in use at exit: 0 bytes in 0 blocks 
==375==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==375==  
==375== All heap blocks were freed -- no leaks are possible 
==375==  
==375== For counts of detected and suppressed errors, rerun with: -v 
==375== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 32 51

vflag_file = 32 vflag_func = 51 vflag_copy =32051  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 52

vflag_file = 32 vflag_func = 52 vflag_copy =32052  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 32 53

==381== Memcheck, a memory error detector 
==381== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==381== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==381== Command: s 032053 
==381==  
==381==  
==381== HEAP SUMMARY: 
==381==     in use at exit: 0 bytes in 0 blocks 
==381==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==381==  
==381== All heap blocks were freed -- no leaks are possible 
==381==  
==381== For counts of detected and suppressed errors, rerun with: -v 
==381== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 32 54

vflag_file = 32 vflag_func = 54 vflag_copy =32054  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 33 1

vflag_file = 33 vflag_func = 1 vflag_copy =33001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 33 2

vflag_file = 33 vflag_func = 2 vflag_copy =33002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 35 1

vflag_file = 35 vflag_func = 1 vflag_copy =35001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 35 2

vflag_file = 35 vflag_func = 2 vflag_copy =35002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 36 1

vflag_file = 36 vflag_func = 1 vflag_copy =36001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 36 2

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 36 3

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 36 4

vflag_file = 36 vflag_func = 4 vflag_copy =36004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 36 5

vflag_file = 36 vflag_func = 5 vflag_copy =36005  
Task5! race condition, threadID# 99747584! gbl1 = 1  
Task5! race condition, threadID# 129120000! gbl1 = 2  
Task5! race condition, threadID# 120727296! gbl1 = 3  
Task5! race condition, threadID# 112334592! gbl1 = 4  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 36 6

vflag_file = 36 vflag_func = 6 vflag_copy =36006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 36 7

vflag_file = 36 vflag_func = 7 vflag_copy =36007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 36 8

vflag_file = 36 vflag_func = 8 vflag_copy =36008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 37 1

vflag_file = 37 vflag_func = 1 vflag_copy =37001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 37 2

vflag_file = 37 vflag_func = 2 vflag_copy =37002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 37 3

vflag_file = 37 vflag_func = 3 vflag_copy =37003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 37 4

vflag_file = 37 vflag_func = 4 vflag_copy =37004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 37 5

vflag_file = 37 vflag_func = 5 vflag_copy =37005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 37 6

vflag_file = 37 vflag_func = 6 vflag_copy =37006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 37 7

vflag_file = 37 vflag_func = 7 vflag_copy =37007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 37 8

vflag_file = 37 vflag_func = 8 vflag_copy =37008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 37 9

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 37 10

vflag_file = 37 vflag_func = 10 vflag_copy =37010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 37 11

vflag_file = 37 vflag_func = 11 vflag_copy =37011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 37 12

vflag_file = 37 vflag_func = 12 vflag_copy =37012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 37 13

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 37 14

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 38 1

vflag_file = 38 vflag_func = 1 vflag_copy =38001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 38 2

vflag_file = 38 vflag_func = 2 vflag_copy =38002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 39 1

vflag_file = 39 vflag_func = 1 vflag_copy =39001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 39 2

vflag_file = 39 vflag_func = 2 vflag_copy =39002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 39 3

vflag_file = 39 vflag_func = 3 vflag_copy =39003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 39 4

vflag_file = 39 vflag_func = 4 vflag_copy =39004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 39 5

vflag_file = 39 vflag_func = 5 vflag_copy =39005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 39 6

vflag_file = 39 vflag_func = 6 vflag_copy =39006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 39 7

vflag_file = 39 vflag_func = 7 vflag_copy =39007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 39 8

vflag_file = 39 vflag_func = 8 vflag_copy =39008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 39 9

vflag_file = 39 vflag_func = 9 vflag_copy =39009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 39 10

vflag_file = 39 vflag_func = 10 vflag_copy =39010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 39 11

vflag_file = 39 vflag_func = 11 vflag_copy =39011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 39 12

vflag_file = 39 vflag_func = 12 vflag_copy =39012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 39 13

vflag_file = 39 vflag_func = 13 vflag_copy =39013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 39 14

vflag_file = 39 vflag_func = 14 vflag_copy =39014  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 39 15

vflag_file = 39 vflag_func = 15 vflag_copy =39015  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 39 16

vflag_file = 39 vflag_func = 16 vflag_copy =39016  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 39 17

vflag_file = 39 vflag_func = 17 vflag_copy =39017  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 39 18

vflag_file = 39 vflag_func = 18 vflag_copy =39018  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 39 19

vflag_file = 39 vflag_func = 19 vflag_copy =39019  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 40 1

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 40 2

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 40 3

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 41 1

==17035== Memcheck, a memory error detector 
==17035== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17035== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17035== Command: s 041001 
==17035==  
==17035== Thread 2: 
==17035== Invalid write of size 4 
==17035==    at 0x40E449: st_cross_thread_access_001_tsk_001 (in ) 
==17035==    by 0x5145181: start_thread (pthread_create.c:312) 
==17035==    by 0x545547C: clone (clone.S:111) 
==17035==  Address 0x0 is not stack'd, malloc'd or (recently) free'd 
==17035==  
==17035==  
==17035== Process terminating with default action of signal 11 (SIGSEGV) 
==17035==  Access not within mapped region at address 0x0 
==17035==    at 0x40E449: st_cross_thread_access_001_tsk_001 (in ) 
==17035==    by 0x5145181: start_thread (pthread_create.c:312) 
==17035==    by 0x545547C: clone (clone.S:111) 
==17035==  If you believe this happened as a result of a stack 
==17035==  overflow in your program's main thread (unlikely but 
==17035==  possible), you can try to increase the size of the 
==17035==  main thread stack using the --main-stacksize= flag. 
==17035==  The main thread stack size used in this run was 8388608. 
==17035==  
==17035== HEAP SUMMARY: 
==17035==     in use at exit: 272 bytes in 1 blocks 
==17035==   total heap usage: 1 allocs, 0 frees, 272 bytes allocated 
==17035==  
==17035== LEAK SUMMARY: 
==17035==    definitely lost: 0 bytes in 0 blocks 
==17035==    indirectly lost: 0 bytes in 0 blocks 
==17035==      possibly lost: 272 bytes in 1 blocks 
==17035==    still reachable: 0 bytes in 0 blocks 
==17035==         suppressed: 0 bytes in 0 blocks 
==17035== Rerun with --leak-check=full to see details of leaked memory 
==17035==  
==17035== For counts of detected and suppressed errors, rerun with: -v 
==17035== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 41 2

vflag_file = 41 vflag_func = 2 vflag_copy =41002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 41 3

vflag_file = 41 vflag_func = 3 vflag_copy =41003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 41 4

==17043== Memcheck, a memory error detector 
==17043== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17043== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17043== Command: s 041004 
==17043==  
==17043==  
==17043== Process terminating with default action of signal 11 (SIGSEGV) 
==17043==  Bad permissions for mapped region at address 0x4193E8 
==17043==    at 0x40EB04: st_cross_thread_access_004_tsk_002 (in ) 
==17043==    by 0x5145181: start_thread (pthread_create.c:312) 
==17043==    by 0x545547C: clone (clone.S:111) 
==17043==  
==17043== HEAP SUMMARY: 
==17043==     in use at exit: 544 bytes in 2 blocks 
==17043==   total heap usage: 2 allocs, 0 frees, 544 bytes allocated 
==17043==  
==17043== LEAK SUMMARY: 
==17043==    definitely lost: 0 bytes in 0 blocks 
==17043==    indirectly lost: 0 bytes in 0 blocks 
==17043==      possibly lost: 544 bytes in 2 blocks 
==17043==    still reachable: 0 bytes in 0 blocks 
==17043==         suppressed: 0 bytes in 0 blocks 
==17043== Rerun with --leak-check=full to see details of leaked memory 
==17043==  
==17043== For counts of detected and suppressed errors, rerun with: -v 
==17043== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 41 5

vflag_file = 41 vflag_func = 5 vflag_copy =41005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 41 6

vflag_file = 41 vflag_func = 6 vflag_copy =41006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 42 1

==17050== Memcheck, a memory error detector 
==17050== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17050== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17050== Command: s 042001 
==17050==  
==17050== Warning: client switching stacks?  SP change: 0xffefffc20 --> 0xffe7ffc98 
==17050==          to suppress, use: --max-stackframe=8388488 or greater 
==17050== Invalid write of size 8 
==17050==    at 0x40F5D5: st_overflow_001 (in ) 
==17050==    by 0x40FADF: st_overflow_main (in ) 
==17050==    by 0x401C56: main (in ) 
==17050==  Address 0xffe7ffc20 is on thread 1's stack 
==17050==  
==17050==  
==17050== Process terminating with default action of signal 11 (SIGSEGV) 
==17050==  Access not within mapped region at address 0xFFE7FFC20 
==17050==    at 0x40F5D5: st_overflow_001 (in ) 
==17050==  If you believe this happened as a result of a stack 
==17050==  overflow in your program's main thread (unlikely but 
==17050==  possible), you can try to increase the size of the 
==17050==  main thread stack using the --main-stacksize= flag. 
==17050==  The main thread stack size used in this run was 8388608. 
==17050==  
==17050== Process terminating with default action of signal 11 (SIGSEGV) 
==17050==  Access not within mapped region at address 0xFFE7FFC91 
==17050==    at 0x4A256B0: _vgnU_freeres (in ) 
==17050==  If you believe this happened as a result of a stack 
==17050==  overflow in your program's main thread (unlikely but 
==17050==  possible), you can try to increase the size of the 
==17050==  main thread stack using the --main-stacksize= flag. 
==17050==  The main thread stack size used in this run was 8388608. 
==17050==  
==17050== HEAP SUMMARY: 
==17050==     in use at exit: 0 bytes in 0 blocks 
==17050==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17050==  
==17050== All heap blocks were freed -- no leaks are possible 
==17050==  
==17050== For counts of detected and suppressed errors, rerun with: -v 
==17050== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 42 2

==17054== Memcheck, a memory error detector 
==17054== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17054== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17054== Command: s 042002 
==17054==  
==17054== Warning: client switching stacks?  SP change: 0xffefffc20 --> 0xffedffc10 
==17054==          to suppress, use: --max-stackframe=2097168 or greater 
==17054== Invalid write of size 8 
==17054==    at 0x40F632: st_overflow_002 (in ) 
==17054==    by 0x40FB01: st_overflow_main (in ) 
==17054==    by 0x401C56: main (in ) 
==17054==  Address 0xffedffc08 is on thread 1's stack 
==17054==  in frame #0, created by st_overflow_002 (???) 
==17054==  
==17054== Invalid read of size 8 
==17054==    at 0x4C2F790: memcpy@@GLIBC_2.14 (in ) 
==17054==    by 0x40F636: st_overflow_002 (in ) 
==17054==    by 0x40FB01: st_overflow_main (in ) 
==17054==    by 0x401C56: main (in ) 
==17054==  Address 0xffeeffc10 is on thread 1's stack 
==17054==  in frame #1, created by st_overflow_002 (???) 
==17054==  
==17054== Invalid write of size 8 
==17054==    at 0x4C2F793: memcpy@@GLIBC_2.14 (in ) 
==17054==    by 0x40F636: st_overflow_002 (in ) 
==17054==    by 0x40FB01: st_overflow_main (in ) 
==17054==    by 0x401C56: main (in ) 
==17054==  Address 0xffedffc10 is on thread 1's stack 
==17054==  in frame #1, created by st_overflow_002 (???) 
==17054==  
==17054== Invalid read of size 8 
==17054==    at 0x4C2F79E: memcpy@@GLIBC_2.14 (in ) 
==17054==    by 0x40F636: st_overflow_002 (in ) 
==17054==    by 0x40FB01: st_overflow_main (in ) 
==17054==    by 0x401C56: main (in ) 
==17054==  Address 0xffeeffc20 is on thread 1's stack 
==17054==  in frame #1, created by st_overflow_002 (???) 
==17054==  
==17054== Invalid read of size 8 
==17054==    at 0x4C2F804: memcpy@@GLIBC_2.14 (in ) 
==17054==    by 0x40FB01: st_overflow_main (in ) 
==17054==    by 0x401C56: main (in ) 
==17054==  Address 0xffedffc08 is on thread 1's stack 
==17054==  in frame #0, created by memcpy@@GLIBC_2.14 (???) 
==17054==  
==17054== Invalid write of size 1 
==17054==    at 0x40F5FD: st_overflow_002_func_001 (in ) 
==17054==    by 0x40F63B: st_overflow_002 (in ) 
==17054==    by 0x40FB01: st_overflow_main (in ) 
==17054==    by 0x401C56: main (in ) 
==17054==  Address 0xffedffc10 is on thread 1's stack 
==17054==  in frame #1, created by st_overflow_002 (???) 
==17054==  
==17054== Warning: client switching stacks?  SP change: 0xffedffc10 --> 0xffefffc20 
==17054==          to suppress, use: --max-stackframe=2097168 or greater 
==17054==  
==17054== HEAP SUMMARY: 
==17054==     in use at exit: 0 bytes in 0 blocks 
==17054==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17054==  
==17054== All heap blocks were freed -- no leaks are possible 
==17054==  
==17054== For counts of detected and suppressed errors, rerun with: -v 
==17054== ERROR SUMMARY: 262133 errors from 6 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 42 3

vflag_file = 42 vflag_func = 3 vflag_copy =42003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 42 4

vflag_file = 42 vflag_func = 4 vflag_copy =42004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 42 5

vflag_file = 42 vflag_func = 5 vflag_copy =42005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 42 6

vflag_file = 42 vflag_func = 6 vflag_copy =42006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 42 7

vflag_file = 42 vflag_func = 7 vflag_copy =42007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 43 1

==17060== Memcheck, a memory error detector 
==17060== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17060== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17060== Command: s 043001 
==17060==  
==17060== Conditional jump or move depends on uninitialised value(s) 
==17060==    at 0x41181F: st_underrun_001 (in ) 
==17060==    by 0x411DE4: st_underrun_main (in ) 
==17060==    by 0x401C73: main (in ) 
==17060==  
==17060== Invalid read of size 1 
==17060==    at 0x411818: st_underrun_001 (in ) 
==17060==    by 0x411DE4: st_underrun_main (in ) 
==17060==    by 0x401C73: main (in ) 
==17060==  Address 0xffefffb6f is on thread 1's stack 
==17060==  129 bytes below stack pointer 
==17060==  
==17060==  
==17060== Process terminating with default action of signal 11 (SIGSEGV) 
==17060==  Access not within mapped region at address 0xFFEFFDFFF 
==17060==    at 0x411818: st_underrun_001 (in ) 
==17060==    by 0x411DE4: st_underrun_main (in ) 
==17060==    by 0x401C73: main (in ) 
==17060==  If you believe this happened as a result of a stack 
==17060==  overflow in your program's main thread (unlikely but 
==17060==  possible), you can try to increase the size of the 
==17060==  main thread stack using the --main-stacksize= flag. 
==17060==  The main thread stack size used in this run was 8388608. 
==17060==  
==17060== HEAP SUMMARY: 
==17060==     in use at exit: 0 bytes in 0 blocks 
==17060==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17060==  
==17060== All heap blocks were freed -- no leaks are possible 
==17060==  
==17060== For counts of detected and suppressed errors, rerun with: -v 
==17060== Use --track-origins=yes to see where uninitialised values come from 
==17060== ERROR SUMMARY: 7165 errors from 2 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 43 2

==17064== Memcheck, a memory error detector 
==17064== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17064== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17064== Command: s 043002 
==17064==  
==17064== Conditional jump or move depends on uninitialised value(s) 
==17064==    at 0x411860: st_underrun_002_func_001 (in ) 
==17064==    by 0x4118ED: st_underrun_002 (in ) 
==17064==    by 0x411E06: st_underrun_main (in ) 
==17064==    by 0x401C73: main (in ) 
==17064==  
==17064== Invalid read of size 1 
==17064==    at 0x411859: st_underrun_002_func_001 (in ) 
==17064==    by 0x4118ED: st_underrun_002 (in ) 
==17064==    by 0x411E06: st_underrun_main (in ) 
==17064==    by 0x401C73: main (in ) 
==17064==  Address 0xffefffadf is on thread 1's stack 
==17064==  129 bytes below stack pointer 
==17064==  
==17064==  
==17064== Process terminating with default action of signal 11 (SIGSEGV) 
==17064==  Access not within mapped region at address 0xFFEFFDFFF 
==17064==    at 0x411859: st_underrun_002_func_001 (in ) 
==17064==    by 0x4118ED: st_underrun_002 (in ) 
==17064==    by 0x411E06: st_underrun_main (in ) 
==17064==    by 0x401C73: main (in ) 
==17064==  If you believe this happened as a result of a stack 
==17064==  overflow in your program's main thread (unlikely but 
==17064==  possible), you can try to increase the size of the 
==17064==  main thread stack using the --main-stacksize= flag. 
==17064==  The main thread stack size used in this run was 8388608. 
==17064==  
==17064== HEAP SUMMARY: 
==17064==     in use at exit: 0 bytes in 0 blocks 
==17064==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17064==  
==17064== All heap blocks were freed -- no leaks are possible 
==17064==  
==17064== For counts of detected and suppressed errors, rerun with: -v 
==17064== Use --track-origins=yes to see where uninitialised values come from 
==17064== ERROR SUMMARY: 7021 errors from 2 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 43 3

==17068== Memcheck, a memory error detector 
==17068== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17068== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17068== Command: s 043003 
==17068==  
==17068== Invalid read of size 1 
==17068==    at 0x411994: st_underrun_003_func_002 (in ) 
==17068==    by 0x4141414141414140: ??? 
==17068==    by 0x414141414140: ??? 
==17068==    by 0x4016514: _dl_runtime_resolve (dl-trampoline.S:45) 
==17068==    by 0x401C73: main (in ) 
==17068==  Address 0x1040fffbce is not stack'd, malloc'd or (recently) free'd 
==17068==  
==17068==  
==17068== Process terminating with default action of signal 11 (SIGSEGV) 
==17068==  Access not within mapped region at address 0x1040FFFBCE 
==17068==    at 0x411994: st_underrun_003_func_002 (in ) 
==17068==    by 0x4141414141414140: ??? 
==17068==    by 0x414141414140: ??? 
==17068==    by 0x4016514: _dl_runtime_resolve (dl-trampoline.S:45) 
==17068==    by 0x401C73: main (in ) 
==17068==  If you believe this happened as a result of a stack 
==17068==  overflow in your program's main thread (unlikely but 
==17068==  possible), you can try to increase the size of the 
==17068==  main thread stack using the --main-stacksize= flag. 
==17068==  The main thread stack size used in this run was 8388608. 
==17068==  
==17068== HEAP SUMMARY: 
==17068==     in use at exit: 0 bytes in 0 blocks 
==17068==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17068==  
==17068== All heap blocks were freed -- no leaks are possible 
==17068==  
==17068== For counts of detected and suppressed errors, rerun with: -v 
==17068== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 43 4

==17072== Memcheck, a memory error detector 
==17072== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17072== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17072== Command: s 043004 
==17072==  
==17072== Invalid read of size 1 
==17072==    at 0x411AA8: st_underrun_004_func_001 (in ) 
==17072==    by 0x4200000000411B1C: ??? 
==17072==    by 0x411E4A: st_underrun_main (in ) 
==17072==    by 0x401C73: main (in ) 
==17072==  Address 0x1041fffbce is not stack'd, malloc'd or (recently) free'd 
==17072==  
==17072==  
==17072== Process terminating with default action of signal 11 (SIGSEGV) 
==17072==  Access not within mapped region at address 0x1041FFFBCE 
==17072==    at 0x411AA8: st_underrun_004_func_001 (in ) 
==17072==    by 0x4200000000411B1C: ??? 
==17072==    by 0x411E4A: st_underrun_main (in ) 
==17072==    by 0x401C73: main (in ) 
==17072==  If you believe this happened as a result of a stack 
==17072==  overflow in your program's main thread (unlikely but 
==17072==  possible), you can try to increase the size of the 
==17072==  main thread stack using the --main-stacksize= flag. 
==17072==  The main thread stack size used in this run was 8388608. 
==17072==  
==17072== HEAP SUMMARY: 
==17072==     in use at exit: 0 bytes in 0 blocks 
==17072==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17072==  
==17072== All heap blocks were freed -- no leaks are possible 
==17072==  
==17072== For counts of detected and suppressed errors, rerun with: -v 
==17072== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 43 5

==17076== Memcheck, a memory error detector 
==17076== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17076== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17076== Command: s 043005 
==17076==  
==17076== Invalid read of size 1 
==17076==    at 0x411B7D: st_underrun_005_func_001 (in ) 
==17076==    by 0x411B6B: st_underrun_005_func_001 (in ) 
==17076==    by 0x411B6B: st_underrun_005_func_001 (in ) 
==17076==    by 0x411B6B: st_underrun_005_func_001 (in ) 
==17076==    by 0x411B6B: st_underrun_005_func_001 (in ) 
==17076==    by 0x411B6B: st_underrun_005_func_001 (in ) 
==17076==    by 0x411B6B: st_underrun_005_func_001 (in ) 
==17076==    by 0x411B6B: st_underrun_005_func_001 (in ) 
==17076==    by 0x411BCB: st_underrun_005 (in ) 
==17076==    by 0x411E6C: st_underrun_main (in ) 
==17076==    by 0x401C73: main (in ) 
==17076==  Address 0x1042fffa6f is not stack'd, malloc'd or (recently) free'd 
==17076==  
==17076==  
==17076== Process terminating with default action of signal 11 (SIGSEGV) 
==17076==  Access not within mapped region at address 0x1042FFFA6F 
==17076==    at 0x411B7D: st_underrun_005_func_001 (in ) 
==17076==    by 0x411B6B: st_underrun_005_func_001 (in ) 
==17076==    by 0x411B6B: st_underrun_005_func_001 (in ) 
==17076==    by 0x411B6B: st_underrun_005_func_001 (in ) 
==17076==    by 0x411B6B: st_underrun_005_func_001 (in ) 
==17076==    by 0x411B6B: st_underrun_005_func_001 (in ) 
==17076==    by 0x411B6B: st_underrun_005_func_001 (in ) 
==17076==    by 0x411B6B: st_underrun_005_func_001 (in ) 
==17076==    by 0x411BCB: st_underrun_005 (in ) 
==17076==    by 0x411E6C: st_underrun_main (in ) 
==17076==    by 0x401C73: main (in ) 
==17076==  If you believe this happened as a result of a stack 
==17076==  overflow in your program's main thread (unlikely but 
==17076==  possible), you can try to increase the size of the 
==17076==  main thread stack using the --main-stacksize= flag. 
==17076==  The main thread stack size used in this run was 8388608. 
==17076==  
==17076== HEAP SUMMARY: 
==17076==     in use at exit: 0 bytes in 0 blocks 
==17076==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17076==  
==17076== All heap blocks were freed -- no leaks are possible 
==17076==  
==17076== For counts of detected and suppressed errors, rerun with: -v 
==17076== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 43 6

==17080== Memcheck, a memory error detector 
==17080== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17080== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17080== Command: s 043006 
==17080==  
==17080== Conditional jump or move depends on uninitialised value(s) 
==17080==    at 0x411C24: st_underrun_006_func_001 (in ) 
==17080==    by 0x411CBE: st_underrun_006 (in ) 
==17080==    by 0x411E8E: st_underrun_main (in ) 
==17080==    by 0x401C73: main (in ) 
==17080==  
==17080== Invalid read of size 1 
==17080==    at 0x411C1D: st_underrun_006_func_001 (in ) 
==17080==    by 0x411CBE: st_underrun_006 (in ) 
==17080==    by 0x411E8E: st_underrun_main (in ) 
==17080==    by 0x401C73: main (in ) 
==17080==  Address 0xffefffacf is on thread 1's stack 
==17080==  129 bytes below stack pointer 
==17080==  
==17080== Invalid read of size 1 
==17080==    at 0x411C0C: st_underrun_006_func_001 (in ) 
==17080==    by 0x411CBE: st_underrun_006 (in ) 
==17080==    by 0x411E8E: st_underrun_main (in ) 
==17080==    by 0x401C73: main (in ) 
==17080==  Address 0xffefffacf is on thread 1's stack 
==17080==  129 bytes below stack pointer 
==17080==  
==17080==  
==17080== Process terminating with default action of signal 11 (SIGSEGV) 
==17080==  Access not within mapped region at address 0xFFEFFDFFF 
==17080==    at 0x411C1D: st_underrun_006_func_001 (in ) 
==17080==    by 0x411CBE: st_underrun_006 (in ) 
==17080==    by 0x411E8E: st_underrun_main (in ) 
==17080==    by 0x401C73: main (in ) 
==17080==  If you believe this happened as a result of a stack 
==17080==  overflow in your program's main thread (unlikely but 
==17080==  possible), you can try to increase the size of the 
==17080==  main thread stack using the --main-stacksize= flag. 
==17080==  The main thread stack size used in this run was 8388608. 
==17080==  
==17080== HEAP SUMMARY: 
==17080==     in use at exit: 0 bytes in 0 blocks 
==17080==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17080==  
==17080== All heap blocks were freed -- no leaks are possible 
==17080==  
==17080== For counts of detected and suppressed errors, rerun with: -v 
==17080== Use --track-origins=yes to see where uninitialised values come from 
==17080== ERROR SUMMARY: 13868 errors from 3 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 43 7

==17084== Memcheck, a memory error detector 
==17084== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17084== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17084== Command: s 043007 
==17084==  
==17084== Conditional jump or move depends on uninitialised value(s) 
==17084==    at 0x4C2E0F8: strlen (in ) 
==17084==    by 0x411CEC: st_underrun_007_func_001 (in ) 
==17084==    by 0x411DA8: st_underrun_007 (in ) 
==17084==    by 0x411EB0: st_underrun_main (in ) 
==17084==    by 0x401C73: main (in ) 
==17084==  
==17084== Conditional jump or move depends on uninitialised value(s) 
==17084==    at 0x411D18: st_underrun_007_func_001 (in ) 
==17084==    by 0x411DA8: st_underrun_007 (in ) 
==17084==    by 0x411EB0: st_underrun_main (in ) 
==17084==    by 0x401C73: main (in ) 
==17084==  
==17084== Invalid read of size 1 
==17084==    at 0x411D12: st_underrun_007_func_001 (in ) 
==17084==    by 0x411DA8: st_underrun_007 (in ) 
==17084==    by 0x411EB0: st_underrun_main (in ) 
==17084==    by 0x401C73: main (in ) 
==17084==  Address 0xffefffacf is on thread 1's stack 
==17084==  129 bytes below stack pointer 
==17084==  
==17084== Invalid read of size 1 
==17084==    at 0x411CFE: st_underrun_007_func_001 (in ) 
==17084==    by 0x411DA8: st_underrun_007 (in ) 
==17084==    by 0x411EB0: st_underrun_main (in ) 
==17084==    by 0x401C73: main (in ) 
==17084==  Address 0xffefffacf is on thread 1's stack 
==17084==  129 bytes below stack pointer 
==17084==  
==17084==  
==17084== Process terminating with default action of signal 11 (SIGSEGV) 
==17084==  Access not within mapped region at address 0xFFEFFDFFF 
==17084==    at 0x411D12: st_underrun_007_func_001 (in ) 
==17084==    by 0x411DA8: st_underrun_007 (in ) 
==17084==    by 0x411EB0: st_underrun_main (in ) 
==17084==    by 0x401C73: main (in ) 
==17084==  If you believe this happened as a result of a stack 
==17084==  overflow in your program's main thread (unlikely but 
==17084==  possible), you can try to increase the size of the 
==17084==  main thread stack using the --main-stacksize= flag. 
==17084==  The main thread stack size used in this run was 8388608. 
==17084==  
==17084== HEAP SUMMARY: 
==17084==     in use at exit: 0 bytes in 0 blocks 
==17084==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17084==  
==17084== All heap blocks were freed -- no leaks are possible 
==17084==  
==17084== For counts of detected and suppressed errors, rerun with: -v 
==17084== Use --track-origins=yes to see where uninitialised values come from 
==17084== ERROR SUMMARY: 13953 errors from 4 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 44 1

vflag_file = 44 vflag_func = 1 vflag_copy =44001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 44 2

vflag_file = 44 vflag_func = 2 vflag_copy =44002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 44 3

vflag_file = 44 vflag_func = 3 vflag_copy =44003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 44 4

vflag_file = 44 vflag_func = 4 vflag_copy =44004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 44 5

vflag_file = 44 vflag_func = 5 vflag_copy =44005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 44 6

vflag_file = 44 vflag_func = 6 vflag_copy =44006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 44 7

 

Confirmed Negative 

Valgrind being tested on 01.w_Defects 44 8

vflag_file = 44 vflag_func = 8 vflag_copy =44008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 44 9

vflag_file = 44 vflag_func = 9 vflag_copy =44009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 44 10

vflag_file = 44 vflag_func = 10 vflag_copy =44010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 44 11

vflag_file = 44 vflag_func = 11 vflag_copy =44011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 44 12

vflag_file = 44 vflag_func = 12 vflag_copy =44012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 44 13

vflag_file = 44 vflag_func = 13 vflag_copy =44013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 45 1

==17101== Memcheck, a memory error detector 
==17101== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17101== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17101== Command: s 045001 
==17101==  
==17101== Conditional jump or move depends on uninitialised value(s) 
==17101==    at 0x53A558E: vfprintf (vfprintf.c:1660) 
==17101==    by 0x53AF498: printf (printf.c:33) 
==17101==    by 0x412F7F: uninit_memory_access_001 (in ) 
==17101==    by 0x4139BE: uninit_memory_access_main (in ) 
==17101==    by 0x401CAD: main (in ) 
==17101==  
==17101== Use of uninitialised value of size 8 
==17101==    at 0x53A4A4B: _itoa_word (_itoa.c:179) 
==17101==    by 0x53A86F6: vfprintf (vfprintf.c:1660) 
==17101==    by 0x53AF498: printf (printf.c:33) 
==17101==    by 0x412F7F: uninit_memory_access_001 (in ) 
==17101==    by 0x4139BE: uninit_memory_access_main (in ) 
==17101==    by 0x401CAD: main (in ) 
==17101==  
==17101== Conditional jump or move depends on uninitialised value(s) 
==17101==    at 0x53A4A55: _itoa_word (_itoa.c:179) 
==17101==    by 0x53A86F6: vfprintf (vfprintf.c:1660) 
==17101==    by 0x53AF498: printf (printf.c:33) 
==17101==    by 0x412F7F: uninit_memory_access_001 (in ) 
==17101==    by 0x4139BE: uninit_memory_access_main (in ) 
==17101==    by 0x401CAD: main (in ) 
==17101==  
==17101== Conditional jump or move depends on uninitialised value(s) 
==17101==    at 0x53A8742: vfprintf (vfprintf.c:1660) 
==17101==    by 0x53AF498: printf (printf.c:33) 
==17101==    by 0x412F7F: uninit_memory_access_001 (in ) 
==17101==    by 0x4139BE: uninit_memory_access_main (in ) 
==17101==    by 0x401CAD: main (in ) 
==17101==  
==17101== Conditional jump or move depends on uninitialised value(s) 
==17101==    at 0x53A5659: vfprintf (vfprintf.c:1660) 
==17101==    by 0x53AF498: printf (printf.c:33) 
==17101==    by 0x412F7F: uninit_memory_access_001 (in ) 
==17101==    by 0x4139BE: uninit_memory_access_main (in ) 
==17101==    by 0x401CAD: main (in ) 
==17101==  
==17101== Conditional jump or move depends on uninitialised value(s) 
==17101==    at 0x53A56DC: vfprintf (vfprintf.c:1660) 
==17101==    by 0x53AF498: printf (printf.c:33) 
==17101==    by 0x412F7F: uninit_memory_access_001 (in ) 
==17101==    by 0x4139BE: uninit_memory_access_main (in ) 
==17101==    by 0x401CAD: main (in ) 
==17101==  
==17101==  
==17101== HEAP SUMMARY: 
==17101==     in use at exit: 0 bytes in 0 blocks 
==17101==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17101==  
==17101== All heap blocks were freed -- no leaks are possible 
==17101==  
==17101== For counts of detected and suppressed errors, rerun with: -v 
==17101== Use --track-origins=yes to see where uninitialised values come from 
==17101== ERROR SUMMARY: 18 errors from 6 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 45 2

==17102== Memcheck, a memory error detector 
==17102== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17102== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17102== Command: s 045002 
==17102==  
==17102== Conditional jump or move depends on uninitialised value(s) 
==17102==    at 0x53AA4E7: __printf_fp (printf_fp.c:400) 
==17102==    by 0x53A9792: vfprintf (vfprintf.c:1660) 
==17102==    by 0x53AF498: printf (printf.c:33) 
==17102==    by 0x412FC1: uninit_memory_access_002 (in ) 
==17102==    by 0x4139E0: uninit_memory_access_main (in ) 
==17102==    by 0x401CAD: main (in ) 
==17102==  
==17102== Conditional jump or move depends on uninitialised value(s) 
==17102==    at 0x53AA60F: __printf_fp (printf_fp.c:415) 
==17102==    by 0x53A9792: vfprintf (vfprintf.c:1660) 
==17102==    by 0x53AF498: printf (printf.c:33) 
==17102==    by 0x412FC1: uninit_memory_access_002 (in ) 
==17102==    by 0x4139E0: uninit_memory_access_main (in ) 
==17102==    by 0x401CAD: main (in ) 
==17102==  
==17102== Conditional jump or move depends on uninitialised value(s) 
==17102==    at 0x5394D72: __mpn_extract_double (dbl2mpn.c:56) 
==17102==    by 0x53AAB91: __printf_fp (printf_fp.c:431) 
==17102==    by 0x53A9792: vfprintf (vfprintf.c:1660) 
==17102==    by 0x53AF498: printf (printf.c:33) 
==17102==    by 0x412FC1: uninit_memory_access_002 (in ) 
==17102==    by 0x4139E0: uninit_memory_access_main (in ) 
==17102==    by 0x401CAD: main (in ) 
==17102==  
==17102== Conditional jump or move depends on uninitialised value(s) 
==17102==    at 0x5394D77: __mpn_extract_double (dbl2mpn.c:60) 
==17102==    by 0x53AAB91: __printf_fp (printf_fp.c:431) 
==17102==    by 0x53A9792: vfprintf (vfprintf.c:1660) 
==17102==    by 0x53AF498: printf (printf.c:33) 
==17102==    by 0x412FC1: uninit_memory_access_002 (in ) 
==17102==    by 0x4139E0: uninit_memory_access_main (in ) 
==17102==    by 0x401CAD: main (in ) 
==17102==  
==17102== Conditional jump or move depends on uninitialised value(s) 
==17102==    at 0x53AB101: __printf_fp (printf_fp.c:964) 
==17102==    by 0x53A9792: vfprintf (vfprintf.c:1660) 
==17102==    by 0x53AF498: printf (printf.c:33) 
==17102==    by 0x412FC1: uninit_memory_access_002 (in ) 
==17102==    by 0x4139E0: uninit_memory_access_main (in ) 
==17102==    by 0x401CAD: main (in ) 
==17102==  
==17102== Conditional jump or move depends on uninitialised value(s) 
==17102==    at 0x53AB158: __printf_fp (printf_fp.c:975) 
==17102==    by 0x53A9792: vfprintf (vfprintf.c:1660) 
==17102==    by 0x53AF498: printf (printf.c:33) 
==17102==    by 0x412FC1: uninit_memory_access_002 (in ) 
==17102==    by 0x4139E0: uninit_memory_access_main (in ) 
==17102==    by 0x401CAD: main (in ) 
==17102==  
==17102== Conditional jump or move depends on uninitialised value(s) 
==17102==    at 0x53AB185: __printf_fp (printf_fp.c:978) 
==17102==    by 0x53A9792: vfprintf (vfprintf.c:1660) 
==17102==    by 0x53AF498: printf (printf.c:33) 
==17102==    by 0x412FC1: uninit_memory_access_002 (in ) 
==17102==    by 0x4139E0: uninit_memory_access_main (in ) 
==17102==    by 0x401CAD: main (in ) 
==17102==  
==17102== Conditional jump or move depends on uninitialised value(s) 
==17102==    at 0x53AB190: __printf_fp (printf_fp.c:978) 
==17102==    by 0x53A9792: vfprintf (vfprintf.c:1660) 
==17102==    by 0x53AF498: printf (printf.c:33) 
==17102==    by 0x412FC1: uninit_memory_access_002 (in ) 
==17102==    by 0x4139E0: uninit_memory_access_main (in ) 
==17102==    by 0x401CAD: main (in ) 
==17102==  
==17102== Conditional jump or move depends on uninitialised value(s) 
==17102==    at 0x53AB1BF: __printf_fp (printf_fp.c:988) 
==17102==    by 0x53A9792: vfprintf (vfprintf.c:1660) 
==17102==    by 0x53AF498: printf (printf.c:33) 
==17102==    by 0x412FC1: uninit_memory_access_002 (in ) 
==17102==    by 0x4139E0: uninit_memory_access_main (in ) 
==17102==    by 0x401CAD: main (in ) 
==17102==  
==17102== Conditional jump or move depends on uninitialised value(s) 
==17102==    at 0x53AB1CE: __printf_fp (printf_fp.c:988) 
==17102==    by 0x53A9792: vfprintf (vfprintf.c:1660) 
==17102==    by 0x53AF498: printf (printf.c:33) 
==17102==    by 0x412FC1: uninit_memory_access_002 (in ) 
==17102==    by 0x4139E0: uninit_memory_access_main (in ) 
==17102==    by 0x401CAD: main (in ) 
==17102==  
==17102== Conditional jump or move depends on uninitialised value(s) 
==17102==    at 0x53AB5BC: round_away (rounding-mode.h:52) 
==17102==    by 0x53AB5BC: __printf_fp (printf_fp.c:995) 
==17102==    by 0x53A9792: vfprintf (vfprintf.c:1660) 
==17102==    by 0x53AF498: printf (printf.c:33) 
==17102==    by 0x412FC1: uninit_memory_access_002 (in ) 
==17102==    by 0x4139E0: uninit_memory_access_main (in ) 
==17102==    by 0x401CAD: main (in ) 
==17102==  
==17102== Conditional jump or move depends on uninitialised value(s) 
==17102==    at 0x53AB324: __printf_fp (printf_fp.c:1163) 
==17102==    by 0x53A9792: vfprintf (vfprintf.c:1660) 
==17102==    by 0x53AF498: printf (printf.c:33) 
==17102==    by 0x412FC1: uninit_memory_access_002 (in ) 
==17102==    by 0x4139E0: uninit_memory_access_main (in ) 
==17102==    by 0x401CAD: main (in ) 
==17102==  
==17102== Conditional jump or move depends on uninitialised value(s) 
==17102==    at 0x53AB405: __printf_fp (printf_fp.c:1170) 
==17102==    by 0x53A9792: vfprintf (vfprintf.c:1660) 
==17102==    by 0x53AF498: printf (printf.c:33) 
==17102==    by 0x412FC1: uninit_memory_access_002 (in ) 
==17102==    by 0x4139E0: uninit_memory_access_main (in ) 
==17102==    by 0x401CAD: main (in ) 
==17102==  
==17102== Conditional jump or move depends on uninitialised value(s) 
==17102==    at 0x53AB591: __printf_fp (printf_fp.c:1224) 
==17102==    by 0x53A9792: vfprintf (vfprintf.c:1660) 
==17102==    by 0x53AF498: printf (printf.c:33) 
==17102==    by 0x412FC1: uninit_memory_access_002 (in ) 
==17102==    by 0x4139E0: uninit_memory_access_main (in ) 
==17102==    by 0x401CAD: main (in ) 
==17102==  
==17102== Conditional jump or move depends on uninitialised value(s) 
==17102==    at 0x53AB572: __printf_fp (printf_fp.c:1226) 
==17102==    by 0x53A9792: vfprintf (vfprintf.c:1660) 
==17102==    by 0x53AF498: printf (printf.c:33) 
==17102==    by 0x412FC1: uninit_memory_access_002 (in ) 
==17102==    by 0x4139E0: uninit_memory_access_main (in ) 
==17102==    by 0x401CAD: main (in ) 
==17102==  
==17102== Syscall param write(buf) points to uninitialised byte(s) 
==17102==    at 0x5446870: __write_nocancel (syscall-template.S:81) 
==17102==    by 0x53D4002: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1261) 
==17102==    by 0x53D54DB: new_do_write (fileops.c:538) 
==17102==    by 0x53D54DB: _IO_do_write@@GLIBC_2.2.5 (fileops.c:511) 
==17102==    by 0x53D705D: _IO_flush_all_lockp (genops.c:848) 
==17102==    by 0x53D71B9: _IO_cleanup (genops.c:1013) 
==17102==    by 0x539720A: __run_exit_handlers (exit.c:95) 
==17102==    by 0x53972A4: exit (exit.c:104) 
==17102==    by 0x537CECB: (below main) (libc-start.c:321) 
==17102==  Address 0x4025034 is not stack'd, malloc'd or (recently) free'd 
==17102==  
==17102==  
==17102== HEAP SUMMARY: 
==17102==     in use at exit: 0 bytes in 0 blocks 
==17102==   total heap usage: 1 allocs, 1 frees, 24 bytes allocated 
==17102==  
==17102== All heap blocks were freed -- no leaks are possible 
==17102==  
==17102== For counts of detected and suppressed errors, rerun with: -v 
==17102== Use --track-origins=yes to see where uninitialised values come from 
==17102== ERROR SUMMARY: 31 errors from 16 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 45 3

==17103== Memcheck, a memory error detector 
==17103== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17103== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17103== Command: s 045003 
==17103==  
==17103== Use of uninitialised value of size 8 
==17103==    at 0x4C2E1C7: strcpy (in ) 
==17103==    by 0x413004: uninit_memory_access_003 (in ) 
==17103==    by 0x413A02: uninit_memory_access_main (in ) 
==17103==    by 0x401CAD: main (in ) 
==17103==  
==17103== Use of uninitialised value of size 8 
==17103==    at 0x4C2E1E4: strcpy (in ) 
==17103==    by 0x413004: uninit_memory_access_003 (in ) 
==17103==    by 0x413A02: uninit_memory_access_main (in ) 
==17103==    by 0x401CAD: main (in ) 
==17103==  
==17103== Conditional jump or move depends on uninitialised value(s) 
==17103==    at 0x4C2E205: strcpy (in ) 
==17103==    by 0x413004: uninit_memory_access_003 (in ) 
==17103==    by 0x413A02: uninit_memory_access_main (in ) 
==17103==    by 0x401CAD: main (in ) 
==17103==  
==17103== Conditional jump or move depends on uninitialised value(s) 
==17103==    at 0x4C2E21B: strcpy (in ) 
==17103==    by 0x413004: uninit_memory_access_003 (in ) 
==17103==    by 0x413A02: uninit_memory_access_main (in ) 
==17103==    by 0x401CAD: main (in ) 
==17103==  
==17103== Conditional jump or move depends on uninitialised value(s) 
==17103==    at 0x4C2E28D: strcpy (in ) 
==17103==    by 0x413004: uninit_memory_access_003 (in ) 
==17103==    by 0x413A02: uninit_memory_access_main (in ) 
==17103==    by 0x401CAD: main (in ) 
==17103==  
==17103== Conditional jump or move depends on uninitialised value(s) 
==17103==    at 0x53A67AB: vfprintf (vfprintf.c:1661) 
==17103==    by 0x53AF498: printf (printf.c:33) 
==17103==    by 0x41301E: uninit_memory_access_003 (in ) 
==17103==    by 0x413A02: uninit_memory_access_main (in ) 
==17103==    by 0x401CAD: main (in ) 
==17103==  
==17103== Use of uninitialised value of size 8 
==17103==    at 0x53A6A03: vfprintf (vfprintf.c:1661) 
==17103==    by 0x53AF498: printf (printf.c:33) 
==17103==    by 0x41301E: uninit_memory_access_003 (in ) 
==17103==    by 0x413A02: uninit_memory_access_main (in ) 
==17103==    by 0x401CAD: main (in ) 
==17103==  
==17103== Use of uninitialised value of size 8 
==17103==    at 0x53E773E: __GI_mempcpy (memcpy.S:95) 
==17103==    by 0x53D464C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1320) 
==17103==    by 0x53A69C4: vfprintf (vfprintf.c:1661) 
==17103==    by 0x53AF498: printf (printf.c:33) 
==17103==    by 0x41301E: uninit_memory_access_003 (in ) 
==17103==    by 0x413A02: uninit_memory_access_main (in ) 
==17103==    by 0x401CAD: main (in ) 
==17103==  
==17103==  
==17103== HEAP SUMMARY: 
==17103==     in use at exit: 0 bytes in 0 blocks 
==17103==   total heap usage: 1 allocs, 1 frees, 25 bytes allocated 
==17103==  
==17103== All heap blocks were freed -- no leaks are possible 
==17103==  
==17103== For counts of detected and suppressed errors, rerun with: -v 
==17103== Use --track-origins=yes to see where uninitialised values come from 
==17103== ERROR SUMMARY: 9 errors from 8 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 45 4

==17104== Memcheck, a memory error detector 
==17104== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17104== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17104== Command: s 045004 
==17104==  
==17104== Conditional jump or move depends on uninitialised value(s) 
==17104==    at 0x53A558E: vfprintf (vfprintf.c:1660) 
==17104==    by 0x53AF498: printf (printf.c:33) 
==17104==    by 0x413085: uninit_memory_access_004 (in ) 
==17104==    by 0x413A24: uninit_memory_access_main (in ) 
==17104==    by 0x401CAD: main (in ) 
==17104==  
==17104== Use of uninitialised value of size 8 
==17104==    at 0x53A4A4B: _itoa_word (_itoa.c:179) 
==17104==    by 0x53A86F6: vfprintf (vfprintf.c:1660) 
==17104==    by 0x53AF498: printf (printf.c:33) 
==17104==    by 0x413085: uninit_memory_access_004 (in ) 
==17104==    by 0x413A24: uninit_memory_access_main (in ) 
==17104==    by 0x401CAD: main (in ) 
==17104==  
==17104== Conditional jump or move depends on uninitialised value(s) 
==17104==    at 0x53A4A55: _itoa_word (_itoa.c:179) 
==17104==    by 0x53A86F6: vfprintf (vfprintf.c:1660) 
==17104==    by 0x53AF498: printf (printf.c:33) 
==17104==    by 0x413085: uninit_memory_access_004 (in ) 
==17104==    by 0x413A24: uninit_memory_access_main (in ) 
==17104==    by 0x401CAD: main (in ) 
==17104==  
==17104== Conditional jump or move depends on uninitialised value(s) 
==17104==    at 0x53A8742: vfprintf (vfprintf.c:1660) 
==17104==    by 0x53AF498: printf (printf.c:33) 
==17104==    by 0x413085: uninit_memory_access_004 (in ) 
==17104==    by 0x413A24: uninit_memory_access_main (in ) 
==17104==    by 0x401CAD: main (in ) 
==17104==  
==17104== Conditional jump or move depends on uninitialised value(s) 
==17104==    at 0x53A5659: vfprintf (vfprintf.c:1660) 
==17104==    by 0x53AF498: printf (printf.c:33) 
==17104==    by 0x413085: uninit_memory_access_004 (in ) 
==17104==    by 0x413A24: uninit_memory_access_main (in ) 
==17104==    by 0x401CAD: main (in ) 
==17104==  
==17104== Conditional jump or move depends on uninitialised value(s) 
==17104==    at 0x53A56DC: vfprintf (vfprintf.c:1660) 
==17104==    by 0x53AF498: printf (printf.c:33) 
==17104==    by 0x413085: uninit_memory_access_004 (in ) 
==17104==    by 0x413A24: uninit_memory_access_main (in ) 
==17104==    by 0x401CAD: main (in ) 
==17104==  
==17104==  
==17104== HEAP SUMMARY: 
==17104==     in use at exit: 0 bytes in 0 blocks 
==17104==   total heap usage: 1 allocs, 1 frees, 20 bytes allocated 
==17104==  
==17104== All heap blocks were freed -- no leaks are possible 
==17104==  
==17104== For counts of detected and suppressed errors, rerun with: -v 
==17104== Use --track-origins=yes to see where uninitialised values come from 
==17104== ERROR SUMMARY: 6 errors from 6 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 45 5

vflag_file = 45 vflag_func = 5 vflag_copy =45005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 45 6

==17106== Memcheck, a memory error detector 
==17106== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17106== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17106== Command: s 045006 
==17106==  
==17106== Conditional jump or move depends on uninitialised value(s) 
==17106==    at 0x41325D: uninit_memory_access_006_func_001 (in ) 
==17106==    by 0x4132C5: uninit_memory_access_006 (in ) 
==17106==    by 0x413A68: uninit_memory_access_main (in ) 
==17106==    by 0x401CAD: main (in ) 
==17106==  
==17106== Use of uninitialised value of size 8 
==17106==    at 0x413288: uninit_memory_access_006_func_001 (in ) 
==17106==    by 0x4132C5: uninit_memory_access_006 (in ) 
==17106==    by 0x413A68: uninit_memory_access_main (in ) 
==17106==    by 0x401CAD: main (in ) 
==17106==  
==17106== Use of uninitialised value of size 8 
==17106==    at 0x413271: uninit_memory_access_006_func_001 (in ) 
==17106==    by 0x4132C5: uninit_memory_access_006 (in ) 
==17106==    by 0x413A68: uninit_memory_access_main (in ) 
==17106==    by 0x401CAD: main (in ) 
==17106==  
==17106==  
==17106== HEAP SUMMARY: 
==17106==     in use at exit: 25 bytes in 1 blocks 
==17106==   total heap usage: 1 allocs, 0 frees, 25 bytes allocated 
==17106==  
==17106== LEAK SUMMARY: 
==17106==    definitely lost: 25 bytes in 1 blocks 
==17106==    indirectly lost: 0 bytes in 0 blocks 
==17106==      possibly lost: 0 bytes in 0 blocks 
==17106==    still reachable: 0 bytes in 0 blocks 
==17106==         suppressed: 0 bytes in 0 blocks 
==17106== Rerun with --leak-check=full to see details of leaked memory 
==17106==  
==17106== For counts of detected and suppressed errors, rerun with: -v 
==17106== Use --track-origins=yes to see where uninitialised values come from 
==17106== ERROR SUMMARY: 10 errors from 3 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 45 7

vflag_file = 45 vflag_func = 7 vflag_copy =45007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 45 8

vflag_file = 45 vflag_func = 8 vflag_copy =45008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 45 9

vflag_file = 45 vflag_func = 9 vflag_copy =45009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 45 10

vflag_file = 45 vflag_func = 10 vflag_copy =45010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 45 11

==17111== Memcheck, a memory error detector 
==17111== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17111== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17111== Command: s 045011 
==17111==  
==17111== Conditional jump or move depends on uninitialised value(s) 
==17111==    at 0x53A67AB: vfprintf (vfprintf.c:1661) 
==17111==    by 0x53CD578: vsnprintf (vsnprintf.c:119) 
==17111==    by 0x53AF531: snprintf (snprintf.c:33) 
==17111==    by 0x4136B0: uninit_memory_access_011_func_001 (in ) 
==17111==    by 0x4136F0: uninit_memory_access_011 (in ) 
==17111==    by 0x413B12: uninit_memory_access_main (in ) 
==17111==    by 0x401CAD: main (in ) 
==17111==  
==17111== Use of uninitialised value of size 8 
==17111==    at 0x53A6A03: vfprintf (vfprintf.c:1661) 
==17111==    by 0x53CD578: vsnprintf (vsnprintf.c:119) 
==17111==    by 0x53AF531: snprintf (snprintf.c:33) 
==17111==    by 0x4136B0: uninit_memory_access_011_func_001 (in ) 
==17111==    by 0x4136F0: uninit_memory_access_011 (in ) 
==17111==    by 0x413B12: uninit_memory_access_main (in ) 
==17111==    by 0x401CAD: main (in ) 
==17111==  
==17111== Conditional jump or move depends on uninitialised value(s) 
==17111==    at 0x53D6693: _IO_default_xsputn (genops.c:470) 
==17111==    by 0x53A69C4: vfprintf (vfprintf.c:1661) 
==17111==    by 0x53CD578: vsnprintf (vsnprintf.c:119) 
==17111==    by 0x53AF531: snprintf (snprintf.c:33) 
==17111==    by 0x4136B0: uninit_memory_access_011_func_001 (in ) 
==17111==    by 0x4136F0: uninit_memory_access_011 (in ) 
==17111==    by 0x413B12: uninit_memory_access_main (in ) 
==17111==    by 0x401CAD: main (in ) 
==17111==  
==17111== Use of uninitialised value of size 8 
==17111==    at 0x53D6768: _IO_default_xsputn (genops.c:475) 
==17111==    by 0x53A69C4: vfprintf (vfprintf.c:1661) 
==17111==    by 0x53CD578: vsnprintf (vsnprintf.c:119) 
==17111==    by 0x53AF531: snprintf (snprintf.c:33) 
==17111==    by 0x4136B0: uninit_memory_access_011_func_001 (in ) 
==17111==    by 0x4136F0: uninit_memory_access_011 (in ) 
==17111==    by 0x413B12: uninit_memory_access_main (in ) 
==17111==    by 0x401CAD: main (in ) 
==17111==  
==17111== Use of uninitialised value of size 8 
==17111==    at 0x53D6777: _IO_default_xsputn (genops.c:474) 
==17111==    by 0x53A69C4: vfprintf (vfprintf.c:1661) 
==17111==    by 0x53CD578: vsnprintf (vsnprintf.c:119) 
==17111==    by 0x53AF531: snprintf (snprintf.c:33) 
==17111==    by 0x4136B0: uninit_memory_access_011_func_001 (in ) 
==17111==    by 0x4136F0: uninit_memory_access_011 (in ) 
==17111==    by 0x413B12: uninit_memory_access_main (in ) 
==17111==    by 0x401CAD: main (in ) 
==17111==  
==17111==  
==17111== HEAP SUMMARY: 
==17111==     in use at exit: 0 bytes in 0 blocks 
==17111==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17111==  
==17111== All heap blocks were freed -- no leaks are possible 
==17111==  
==17111== For counts of detected and suppressed errors, rerun with: -v 
==17111== Use --track-origins=yes to see where uninitialised values come from 
==17111== ERROR SUMMARY: 7 errors from 5 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 45 12

vflag_file = 45 vflag_func = 12 vflag_copy =45012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 45 13

vflag_file = 45 vflag_func = 13 vflag_copy =45013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 45 14

==17114== Memcheck, a memory error detector 
==17114== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17114== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17114== Command: s 045014 
==17114==  
==17114== Invalid read of size 4 
==17114==    at 0x413875: uninit_memory_access_014 (in ) 
==17114==    by 0x413B78: uninit_memory_access_main (in ) 
==17114==    by 0x401CAD: main (in ) 
==17114==  Address 0xffffffffffffffff is not stack'd, malloc'd or (recently) free'd 
==17114==  
==17114==  
==17114== Process terminating with default action of signal 11 (SIGSEGV) 
==17114==  Access not within mapped region at address 0xFFFFFFFFFFFFFFFF 
==17114==    at 0x413875: uninit_memory_access_014 (in ) 
==17114==    by 0x413B78: uninit_memory_access_main (in ) 
==17114==    by 0x401CAD: main (in ) 
==17114==  If you believe this happened as a result of a stack 
==17114==  overflow in your program's main thread (unlikely but 
==17114==  possible), you can try to increase the size of the 
==17114==  main thread stack using the --main-stacksize= flag. 
==17114==  The main thread stack size used in this run was 8388608. 
==17114==  
==17114== HEAP SUMMARY: 
==17114==     in use at exit: 0 bytes in 0 blocks 
==17114==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17114==  
==17114== All heap blocks were freed -- no leaks are possible 
==17114==  
==17114== For counts of detected and suppressed errors, rerun with: -v 
==17114== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 45 15

vflag_file = 45 vflag_func = 15 vflag_copy =45015  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 46 1

==17119== Memcheck, a memory error detector 
==17119== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17119== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17119== Command: s 046001 
==17119==  
==17119== Use of uninitialised value of size 8 
==17119==    at 0x413BEA: uninit_pointer_001 (in ) 
==17119==    by 0x414515: uninit_pointer_main (in ) 
==17119==    by 0x401CCA: main (in ) 
==17119==  
==17119==  
==17119== HEAP SUMMARY: 
==17119==     in use at exit: 0 bytes in 0 blocks 
==17119==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17119==  
==17119== All heap blocks were freed -- no leaks are possible 
==17119==  
==17119== For counts of detected and suppressed errors, rerun with: -v 
==17119== Use --track-origins=yes to see where uninitialised values come from 
==17119== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 46 2

==17120== Memcheck, a memory error detector 
==17120== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17120== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17120== Command: s 046002 
==17120==  
==17120== Use of uninitialised value of size 8 
==17120==    at 0x413BF9: uninit_pointer_002 (in ) 
==17120==    by 0x414537: uninit_pointer_main (in ) 
==17120==    by 0x401CCA: main (in ) 
==17120==  
==17120==  
==17120== HEAP SUMMARY: 
==17120==     in use at exit: 0 bytes in 0 blocks 
==17120==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17120==  
==17120== All heap blocks were freed -- no leaks are possible 
==17120==  
==17120== For counts of detected and suppressed errors, rerun with: -v 
==17120== Use --track-origins=yes to see where uninitialised values come from 
==17120== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 46 3

==17121== Memcheck, a memory error detector 
==17121== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17121== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17121== Command: s 046003 
==17121==  
==17121== Use of uninitialised value of size 8 
==17121==    at 0x413C1B: uninit_pointer_003 (in ) 
==17121==    by 0x414559: uninit_pointer_main (in ) 
==17121==    by 0x401CCA: main (in ) 
==17121==  
==17121==  
==17121== HEAP SUMMARY: 
==17121==     in use at exit: 0 bytes in 0 blocks 
==17121==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17121==  
==17121== All heap blocks were freed -- no leaks are possible 
==17121==  
==17121== For counts of detected and suppressed errors, rerun with: -v 
==17121== Use --track-origins=yes to see where uninitialised values come from 
==17121== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 46 4

vflag_file = 46 vflag_func = 4 vflag_copy =46004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 46 5

==17123== Memcheck, a memory error detector 
==17123== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17123== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17123== Command: s 046005 
==17123==  
==17123== Use of uninitialised value of size 8 
==17123==    at 0x413D98: uninit_pointer_005_func_001 (in ) 
==17123==    by 0x413DB6: uninit_pointer_005 (in ) 
==17123==    by 0x41459D: uninit_pointer_main (in ) 
==17123==    by 0x401CCA: main (in ) 
==17123==  
==17123== Invalid read of size 4 
==17123==    at 0x413D98: uninit_pointer_005_func_001 (in ) 
==17123==    by 0x413DB6: uninit_pointer_005 (in ) 
==17123==    by 0x41459D: uninit_pointer_main (in ) 
==17123==    by 0x401CCA: main (in ) 
==17123==  Address 0xb3b9 is not stack'd, malloc'd or (recently) free'd 
==17123==  
==17123==  
==17123== Process terminating with default action of signal 11 (SIGSEGV) 
==17123==  Access not within mapped region at address 0xB3B9 
==17123==    at 0x413D98: uninit_pointer_005_func_001 (in ) 
==17123==    by 0x413DB6: uninit_pointer_005 (in ) 
==17123==    by 0x41459D: uninit_pointer_main (in ) 
==17123==    by 0x401CCA: main (in ) 
==17123==  If you believe this happened as a result of a stack 
==17123==  overflow in your program's main thread (unlikely but 
==17123==  possible), you can try to increase the size of the 
==17123==  main thread stack using the --main-stacksize= flag. 
==17123==  The main thread stack size used in this run was 8388608. 
==17123==  
==17123== HEAP SUMMARY: 
==17123==     in use at exit: 0 bytes in 0 blocks 
==17123==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17123==  
==17123== All heap blocks were freed -- no leaks are possible 
==17123==  
==17123== For counts of detected and suppressed errors, rerun with: -v 
==17123== Use --track-origins=yes to see where uninitialised values come from 
==17123== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 46 6

==17127== Memcheck, a memory error detector 
==17127== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17127== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17127== Command: s 046006 
==17127==  
==17127== Use of uninitialised value of size 8 
==17127==    at 0x413DC8: uninit_pointer_006_func_001 (in ) 
==17127==    by 0x413DE3: uninit_pointer_006 (in ) 
==17127==    by 0x4145BF: uninit_pointer_main (in ) 
==17127==    by 0x401CCA: main (in ) 
==17127==  
==17127==  
==17127== HEAP SUMMARY: 
==17127==     in use at exit: 0 bytes in 0 blocks 
==17127==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17127==  
==17127== All heap blocks were freed -- no leaks are possible 
==17127==  
==17127== For counts of detected and suppressed errors, rerun with: -v 
==17127== Use --track-origins=yes to see where uninitialised values come from 
==17127== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 46 7

==17128== Memcheck, a memory error detector 
==17128== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17128== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17128== Command: s 046007 
==17128==  
==17128== Use of uninitialised value of size 8 
==17128==    at 0x413EC5: uninit_pointer_007 (in ) 
==17128==    by 0x4145E1: uninit_pointer_main (in ) 
==17128==    by 0x401CCA: main (in ) 
==17128==  
==17128==  
==17128== Process terminating with default action of signal 11 (SIGSEGV) 
==17128==  Bad permissions for mapped region at address 0x536250C 
==17128==    at 0x413EC5: uninit_pointer_007 (in ) 
==17128==    by 0x4145E1: uninit_pointer_main (in ) 
==17128==    by 0x401CCA: main (in ) 
==17128==  
==17128== HEAP SUMMARY: 
==17128==     in use at exit: 32 bytes in 4 blocks 
==17128==   total heap usage: 4 allocs, 0 frees, 32 bytes allocated 
==17128==  
==17128== LEAK SUMMARY: 
==17128==    definitely lost: 0 bytes in 0 blocks 
==17128==    indirectly lost: 0 bytes in 0 blocks 
==17128==      possibly lost: 0 bytes in 0 blocks 
==17128==    still reachable: 32 bytes in 4 blocks 
==17128==         suppressed: 0 bytes in 0 blocks 
==17128== Rerun with --leak-check=full to see details of leaked memory 
==17128==  
==17128== For counts of detected and suppressed errors, rerun with: -v 
==17128== Use --track-origins=yes to see where uninitialised values come from 
==17128== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 46 8

vflag_file = 46 vflag_func = 8 vflag_copy =46008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 46 9

==17133== Memcheck, a memory error detector 
==17133== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17133== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17133== Command: s 046009 
==17133==  
==17133== Use of uninitialised value of size 8 
==17133==    at 0x4C2E1C7: strcpy (in ) 
==17133==    by 0x413FB4: uninit_pointer_009 (in ) 
==17133==    by 0x414625: uninit_pointer_main (in ) 
==17133==    by 0x401CCA: main (in ) 
==17133==  
==17133== Use of uninitialised value of size 8 
==17133==    at 0x4C2E1E4: strcpy (in ) 
==17133==    by 0x413FB4: uninit_pointer_009 (in ) 
==17133==    by 0x414625: uninit_pointer_main (in ) 
==17133==    by 0x401CCA: main (in ) 
==17133==  
==17133== Conditional jump or move depends on uninitialised value(s) 
==17133==    at 0x4C2E205: strcpy (in ) 
==17133==    by 0x413FB4: uninit_pointer_009 (in ) 
==17133==    by 0x414625: uninit_pointer_main (in ) 
==17133==    by 0xFFEFFFC4F: ??? 
==17133==    by 0x401CCA: main (in ) 
==17133==  
==17133== Conditional jump or move depends on uninitialised value(s) 
==17133==    at 0x4C2E21B: strcpy (in ) 
==17133==    by 0x413FB4: uninit_pointer_009 (in ) 
==17133==    by 0x414625: uninit_pointer_main (in ) 
==17133==    by 0xFFEFFFC4F: ??? 
==17133==    by 0x401CCA: main (in ) 
==17133==  
==17133== Conditional jump or move depends on uninitialised value(s) 
==17133==    at 0x4C2E28D: strcpy (in ) 
==17133==    by 0x413FB4: uninit_pointer_009 (in ) 
==17133==    by 0x414625: uninit_pointer_main (in ) 
==17133==    by 0xFFEFFFC4F: ??? 
==17133==    by 0x401CCA: main (in ) 
==17133==  
==17133==  
==17133== HEAP SUMMARY: 
==17133==     in use at exit: 0 bytes in 0 blocks 
==17133==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17133==  
==17133== All heap blocks were freed -- no leaks are possible 
==17133==  
==17133== For counts of detected and suppressed errors, rerun with: -v 
==17133== Use --track-origins=yes to see where uninitialised values come from 
==17133== ERROR SUMMARY: 6 errors from 5 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 46 10

vflag_file = 46 vflag_func = 10 vflag_copy =46010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 46 11

vflag_file = 46 vflag_func = 11 vflag_copy =46011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 46 12

vflag_file = 46 vflag_func = 12 vflag_copy =46012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 46 13

vflag_file = 46 vflag_func = 13 vflag_copy =46013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 46 14

vflag_file = 46 vflag_func = 14 vflag_copy =46014  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 46 15

==17142== Memcheck, a memory error detector 
==17142== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17142== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17142== Command: s 046015 
==17142==  
==17142== Use of uninitialised value of size 8 
==17142==    at 0x41433F: uninit_pointer_015_func_001 (in ) 
==17142==    by 0x414356: uninit_pointer_015 (in ) 
==17142==    by 0x4146F1: uninit_pointer_main (in ) 
==17142==    by 0x401CCA: main (in ) 
==17142==  
==17142==  
==17142== HEAP SUMMARY: 
==17142==     in use at exit: 0 bytes in 0 blocks 
==17142==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17142==  
==17142== All heap blocks were freed -- no leaks are possible 
==17142==  
==17142== For counts of detected and suppressed errors, rerun with: -v 
==17142== Use --track-origins=yes to see where uninitialised values come from 
==17142== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 46 16

==17143== Memcheck, a memory error detector 
==17143== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17143== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17143== Command: s 046016 
==17143==  
==17143== Conditional jump or move depends on uninitialised value(s) 
==17143==    at 0x4C2E1D1: strcpy (in ) 
==17143==    by 0x4144A9: uninit_pointer_016 (in ) 
==17143==    by 0x414713: uninit_pointer_main (in ) 
==17143==    by 0x401CCA: main (in ) 
==17143==  
==17143==  
==17143== HEAP SUMMARY: 
==17143==     in use at exit: 0 bytes in 0 blocks 
==17143==   total heap usage: 12 allocs, 12 frees, 190 bytes allocated 
==17143==  
==17143== All heap blocks were freed -- no leaks are possible 
==17143==  
==17143== For counts of detected and suppressed errors, rerun with: -v 
==17143== Use --track-origins=yes to see where uninitialised values come from 
==17143== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 47 1

vflag_file = 47 vflag_func = 1 vflag_copy =47001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 47 2

vflag_file = 47 vflag_func = 2 vflag_copy =47002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 47 3

vflag_file = 47 vflag_func = 3 vflag_copy =47003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 47 4

vflag_file = 47 vflag_func = 4 vflag_copy =47004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 47 5

vflag_file = 47 vflag_func = 5 vflag_copy =47005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 47 6

vflag_file = 47 vflag_func = 6 vflag_copy =47006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 47 7

vflag_file = 47 vflag_func = 7 vflag_copy =47007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 47 8

vflag_file = 47 vflag_func = 8 vflag_copy =47008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 47 9

==17152== Memcheck, a memory error detector 
==17152== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17152== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17152== Command: s 047009 
==17152==  
==17152== Conditional jump or move depends on uninitialised value(s) 
==17152==    at 0x4C2E1D1: strcpy (in ) 
==17152==    by 0x41483E: uninit_var_009_func_001 (in ) 
==17152==    by 0x414877: uninit_var_009 (in ) 
==17152==    by 0x414C31: uninit_var_main (in ) 
==17152==    by 0x401CE7: main (in ) 
==17152==  
==17152== Conditional jump or move depends on uninitialised value(s) 
==17152==    at 0x4C2E1EB: strcpy (in ) 
==17152==    by 0x41483E: uninit_var_009_func_001 (in ) 
==17152==    by 0x414877: uninit_var_009 (in ) 
==17152==    by 0x414C31: uninit_var_main (in ) 
==17152==    by 0x401CE7: main (in ) 
==17152==  
==17152==  
==17152== HEAP SUMMARY: 
==17152==     in use at exit: 0 bytes in 0 blocks 
==17152==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17152==  
==17152== All heap blocks were freed -- no leaks are possible 
==17152==  
==17152== For counts of detected and suppressed errors, rerun with: -v 
==17152== Use --track-origins=yes to see where uninitialised values come from 
==17152== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 47 10

vflag_file = 47 vflag_func = 10 vflag_copy =47010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 47 11

==17154== Memcheck, a memory error detector 
==17154== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17154== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17154== Command: s 047011 
==17154==  
==17154== Conditional jump or move depends on uninitialised value(s) 
==17154==    at 0x41495B: uninit_var_011_func_001 (in ) 
==17154==    by 0x41498C: uninit_var_011 (in ) 
==17154==    by 0x414C75: uninit_var_main (in ) 
==17154==    by 0x401CE7: main (in ) 
==17154==  
==17154==  
==17154== HEAP SUMMARY: 
==17154==     in use at exit: 0 bytes in 0 blocks 
==17154==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17154==  
==17154== All heap blocks were freed -- no leaks are possible 
==17154==  
==17154== For counts of detected and suppressed errors, rerun with: -v 
==17154== Use --track-origins=yes to see where uninitialised values come from 
==17154== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 47 12

==17155== Memcheck, a memory error detector 
==17155== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17155== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17155== Command: s 047012 
==17155==  
==17155== Conditional jump or move depends on uninitialised value(s) 
==17155==    at 0x4149B2: uninit_var_012_func_001 (in ) 
==17155==    by 0x414A00: uninit_var_012 (in ) 
==17155==    by 0x414C97: uninit_var_main (in ) 
==17155==    by 0x401CE7: main (in ) 
==17155==  
==17155== Conditional jump or move depends on uninitialised value(s) 
==17155==    at 0x4149B7: uninit_var_012_func_001 (in ) 
==17155==    by 0x414A00: uninit_var_012 (in ) 
==17155==    by 0x414C97: uninit_var_main (in ) 
==17155==    by 0x401CE7: main (in ) 
==17155==  
==17155== Conditional jump or move depends on uninitialised value(s) 
==17155==    at 0x4149BC: uninit_var_012_func_001 (in ) 
==17155==    by 0x414A00: uninit_var_012 (in ) 
==17155==    by 0x414C97: uninit_var_main (in ) 
==17155==    by 0x401CE7: main (in ) 
==17155==  
==17155==  
==17155== HEAP SUMMARY: 
==17155==     in use at exit: 0 bytes in 0 blocks 
==17155==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17155==  
==17155== All heap blocks were freed -- no leaks are possible 
==17155==  
==17155== For counts of detected and suppressed errors, rerun with: -v 
==17155== Use --track-origins=yes to see where uninitialised values come from 
==17155== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 47 13

vflag_file = 47 vflag_func = 13 vflag_copy =47013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 47 14

vflag_file = 47 vflag_func = 14 vflag_copy =47014  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 47 15

vflag_file = 47 vflag_func = 15 vflag_copy =47015  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 48 1

vflag_file = 48 vflag_func = 1 vflag_copy =48001  
Task1! Unlock without Lock, threadID# 112334592! thread no = THREAD2  
Task1! Unlock without Lock, threadID# 99747584! thread no = THREAD1  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 48 2

vflag_file = 48 vflag_func = 2 vflag_copy =48002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 48 3

vflag_file = 48 vflag_func = 3 vflag_copy =48003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 48 4

vflag_file = 48 vflag_func = 4 vflag_copy =48004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 48 5

vflag_file = 48 vflag_func = 5 vflag_copy =48005  
Task5! Unlock without Lock, threadID# 99747584! gbl5 = 5  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 48 6

vflag_file = 48 vflag_func = 6 vflag_copy =48006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 48 7

vflag_file = 48 vflag_func = 7 vflag_copy =48007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 48 8

vflag_file = 48 vflag_func = 8 vflag_copy =48008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 49 1

vflag_file = 49 vflag_func = 1 vflag_copy =49001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 49 2

vflag_file = 49 vflag_func = 2 vflag_copy =49002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 49 3

vflag_file = 49 vflag_func = 3 vflag_copy =49003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 49 4

vflag_file = 49 vflag_func = 4 vflag_copy =49004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 49 5

vflag_file = 49 vflag_func = 5 vflag_copy =49005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 49 6

vflag_file = 49 vflag_func = 6 vflag_copy =49006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 49 7

vflag_file = 49 vflag_func = 7 vflag_copy =49007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 50 1

vflag_file = 50 vflag_func = 1 vflag_copy =50001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 50 2

vflag_file = 50 vflag_func = 2 vflag_copy =50002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 50 3

==17191== Memcheck, a memory error detector 
==17191== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17191== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17191== Command: s 050003 
==17191==  
==17191== Invalid read of size 4 
==17191==    at 0x417182: wrong_arguments_func_pointer_003_func_001 (in ) 
==17191==    by 0x4171A7: wrong_arguments_func_pointer_003 (in ) 
==17191==    by 0x417CD8: wrong_arguments_func_pointer_main (in ) 
==17191==    by 0x401D3E: main (in ) 
==17191==  Address 0x1 is not stack'd, malloc'd or (recently) free'd 
==17191==  
==17191==  
==17191== Process terminating with default action of signal 11 (SIGSEGV) 
==17191==  Access not within mapped region at address 0x1 
==17191==    at 0x417182: wrong_arguments_func_pointer_003_func_001 (in ) 
==17191==    by 0x4171A7: wrong_arguments_func_pointer_003 (in ) 
==17191==    by 0x417CD8: wrong_arguments_func_pointer_main (in ) 
==17191==    by 0x401D3E: main (in ) 
==17191==  If you believe this happened as a result of a stack 
==17191==  overflow in your program's main thread (unlikely but 
==17191==  possible), you can try to increase the size of the 
==17191==  main thread stack using the --main-stacksize= flag. 
==17191==  The main thread stack size used in this run was 8388608. 
==17191==  
==17191== HEAP SUMMARY: 
==17191==     in use at exit: 0 bytes in 0 blocks 
==17191==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17191==  
==17191== All heap blocks were freed -- no leaks are possible 
==17191==  
==17191== For counts of detected and suppressed errors, rerun with: -v 
==17191== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 50 4

==17195== Memcheck, a memory error detector 
==17195== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17195== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17195== Command: s 050004 
==17195==  
==17195== Invalid read of size 1 
==17195==    at 0x4171B9: wrong_arguments_func_pointer_004_func_001 (in ) 
==17195==    by 0x4171E7: wrong_arguments_func_pointer_004 (in ) 
==17195==    by 0x417CFA: wrong_arguments_func_pointer_main (in ) 
==17195==    by 0x401D3E: main (in ) 
==17195==  Address 0xffefff710 is on thread 1's stack 
==17195==  1248 bytes below stack pointer 
==17195==  
==17195==  
==17195== HEAP SUMMARY: 
==17195==     in use at exit: 0 bytes in 0 blocks 
==17195==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17195==  
==17195== All heap blocks were freed -- no leaks are possible 
==17195==  
==17195== For counts of detected and suppressed errors, rerun with: -v 
==17195== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 50 5

vflag_file = 50 vflag_func = 5 vflag_copy =50005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 50 6

vflag_file = 50 vflag_func = 6 vflag_copy =50006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 50 7

vflag_file = 50 vflag_func = 7 vflag_copy =50007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 50 8

vflag_file = 50 vflag_func = 8 vflag_copy =50008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 50 9

==17200== Memcheck, a memory error detector 
==17200== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17200== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17200== Command: s 050009 
==17200==  
==17200== Invalid read of size 1 
==17200==    at 0x4C2DD94: strcat (in ) 
==17200==    by 0x4173A6: wrong_arguments_func_pointer_009_func_001 (in ) 
==17200==    by 0x41740E: wrong_arguments_func_pointer_009 (in ) 
==17200==    by 0x417DA4: wrong_arguments_func_pointer_main (in ) 
==17200==    by 0x401D3E: main (in ) 
==17200==  Address 0x53 is not stack'd, malloc'd or (recently) free'd 
==17200==  
==17200==  
==17200== Process terminating with default action of signal 11 (SIGSEGV) 
==17200==  Access not within mapped region at address 0x53 
==17200==    at 0x4C2DD94: strcat (in ) 
==17200==    by 0x4173A6: wrong_arguments_func_pointer_009_func_001 (in ) 
==17200==    by 0x41740E: wrong_arguments_func_pointer_009 (in ) 
==17200==    by 0x417DA4: wrong_arguments_func_pointer_main (in ) 
==17200==    by 0x401D3E: main (in ) 
==17200==  If you believe this happened as a result of a stack 
==17200==  overflow in your program's main thread (unlikely but 
==17200==  possible), you can try to increase the size of the 
==17200==  main thread stack using the --main-stacksize= flag. 
==17200==  The main thread stack size used in this run was 8388608. 
==17200==  
==17200== HEAP SUMMARY: 
==17200==     in use at exit: 80 bytes in 1 blocks 
==17200==   total heap usage: 1 allocs, 0 frees, 80 bytes allocated 
==17200==  
==17200== LEAK SUMMARY: 
==17200==    definitely lost: 0 bytes in 0 blocks 
==17200==    indirectly lost: 0 bytes in 0 blocks 
==17200==      possibly lost: 0 bytes in 0 blocks 
==17200==    still reachable: 80 bytes in 1 blocks 
==17200==         suppressed: 0 bytes in 0 blocks 
==17200== Rerun with --leak-check=full to see details of leaked memory 
==17200==  
==17200== For counts of detected and suppressed errors, rerun with: -v 
==17200== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 50 10

==17204== Memcheck, a memory error detector 
==17204== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17204== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17204== Command: s 050010 
==17204==  
==17204== Conditional jump or move depends on uninitialised value(s) 
==17204==    at 0x4C3135C: memset (in ) 
==17204==    by 0x417435: wrong_arguments_func_pointer_010_func_001 (in ) 
==17204==    by 0x417469: wrong_arguments_func_pointer_010 (in ) 
==17204==    by 0x417DC6: wrong_arguments_func_pointer_main (in ) 
==17204==    by 0x401D3E: main (in ) 
==17204==  
==17204== Use of uninitialised value of size 8 
==17204==    at 0x4C313C7: memset (in ) 
==17204==    by 0x417435: wrong_arguments_func_pointer_010_func_001 (in ) 
==17204==    by 0x417469: wrong_arguments_func_pointer_010 (in ) 
==17204==    by 0x417DC6: wrong_arguments_func_pointer_main (in ) 
==17204==    by 0x401D3E: main (in ) 
==17204==  
==17204==  
==17204== Process terminating with default action of signal 11 (SIGSEGV) 
==17204==  Bad permissions for mapped region at address 0x419038 
==17204==    at 0x4C313C7: memset (in ) 
==17204==    by 0x417435: wrong_arguments_func_pointer_010_func_001 (in ) 
==17204==    by 0x417469: wrong_arguments_func_pointer_010 (in ) 
==17204==    by 0x417DC6: wrong_arguments_func_pointer_main (in ) 
==17204==    by 0x401D3E: main (in ) 
==17204==  
==17204== HEAP SUMMARY: 
==17204==     in use at exit: 0 bytes in 0 blocks 
==17204==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17204==  
==17204== All heap blocks were freed -- no leaks are possible 
==17204==  
==17204== For counts of detected and suppressed errors, rerun with: -v 
==17204== Use --track-origins=yes to see where uninitialised values come from 
==17204== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 50 11

==17208== Memcheck, a memory error detector 
==17208== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17208== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17208== Command: s 050011 
==17208==  
==17208==  
==17208== Process terminating with default action of signal 11 (SIGSEGV) 
==17208==  Bad permissions for mapped region at address 0x4196AF 
==17208==    at 0x4C31375: memset (in ) 
==17208==    by 0x41748D: wrong_arguments_func_pointer_011_func_001 (in ) 
==17208==    by 0x417522: wrong_arguments_func_pointer_011 (in ) 
==17208==    by 0x417DE8: wrong_arguments_func_pointer_main (in ) 
==17208==    by 0x401D3E: main (in ) 
==17208==  
==17208== HEAP SUMMARY: 
==17208==     in use at exit: 0 bytes in 0 blocks 
==17208==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17208==  
==17208== All heap blocks were freed -- no leaks are possible 
==17208==  
==17208== For counts of detected and suppressed errors, rerun with: -v 
==17208== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 50 12

==17212== Memcheck, a memory error detector 
==17212== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17212== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17212== Command: s 050012 
==17212==  
==17212==  
==17212== Process terminating with default action of signal 11 (SIGSEGV) 
==17212==  Bad permissions for mapped region at address 0x4196AF 
==17212==    at 0x4C31375: memset (in ) 
==17212==    by 0x417570: wrong_arguments_func_pointer_012_func_001 (in ) 
==17212==    by 0x41764C: wrong_arguments_func_pointer_012 (in ) 
==17212==    by 0x417E0A: wrong_arguments_func_pointer_main (in ) 
==17212==    by 0x401D3E: main (in ) 
==17212==  
==17212== HEAP SUMMARY: 
==17212==     in use at exit: 52 bytes in 1 blocks 
==17212==   total heap usage: 1 allocs, 0 frees, 52 bytes allocated 
==17212==  
==17212== LEAK SUMMARY: 
==17212==    definitely lost: 0 bytes in 0 blocks 
==17212==    indirectly lost: 0 bytes in 0 blocks 
==17212==      possibly lost: 0 bytes in 0 blocks 
==17212==    still reachable: 52 bytes in 1 blocks 
==17212==         suppressed: 0 bytes in 0 blocks 
==17212== Rerun with --leak-check=full to see details of leaked memory 
==17212==  
==17212== For counts of detected and suppressed errors, rerun with: -v 
==17212== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 50 13

==17216== Memcheck, a memory error detector 
==17216== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17216== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17216== Command: s 050013 
==17216==  
==17216== Invalid write of size 8 
==17216==    at 0x4176E5: wrong_arguments_func_pointer_013_func_001 (in ) 
==17216==    by 0x417716: wrong_arguments_func_pointer_013 (in ) 
==17216==    by 0x417E2C: wrong_arguments_func_pointer_main (in ) 
==17216==    by 0x401D3E: main (in ) 
==17216==  Address 0x0 is not stack'd, malloc'd or (recently) free'd 
==17216==  
==17216==  
==17216== Process terminating with default action of signal 11 (SIGSEGV) 
==17216==  Access not within mapped region at address 0x0 
==17216==    at 0x4176E5: wrong_arguments_func_pointer_013_func_001 (in ) 
==17216==    by 0x417716: wrong_arguments_func_pointer_013 (in ) 
==17216==    by 0x417E2C: wrong_arguments_func_pointer_main (in ) 
==17216==    by 0x401D3E: main (in ) 
==17216==  If you believe this happened as a result of a stack 
==17216==  overflow in your program's main thread (unlikely but 
==17216==  possible), you can try to increase the size of the 
==17216==  main thread stack using the --main-stacksize= flag. 
==17216==  The main thread stack size used in this run was 8388608. 
==17216==  
==17216== HEAP SUMMARY: 
==17216==     in use at exit: 1 bytes in 1 blocks 
==17216==   total heap usage: 1 allocs, 0 frees, 1 bytes allocated 
==17216==  
==17216== LEAK SUMMARY: 
==17216==    definitely lost: 0 bytes in 0 blocks 
==17216==    indirectly lost: 0 bytes in 0 blocks 
==17216==      possibly lost: 0 bytes in 0 blocks 
==17216==    still reachable: 1 bytes in 1 blocks 
==17216==         suppressed: 0 bytes in 0 blocks 
==17216== Rerun with --leak-check=full to see details of leaked memory 
==17216==  
==17216== For counts of detected and suppressed errors, rerun with: -v 
==17216== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 50 14

vflag_file = 50 vflag_func = 14 vflag_copy =50014  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 50 15

==17221== Memcheck, a memory error detector 
==17221== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17221== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17221== Command: s 050015 
==17221==  
==17221== Invalid read of size 1 
==17221==    at 0x4C2E1C7: strcpy (in ) 
==17221==    by 0x41784C: wrong_arguments_func_pointer_015_func_002 (in ) 
==17221==    by 0x4178BF: wrong_arguments_func_pointer_015 (in ) 
==17221==    by 0x417E70: wrong_arguments_func_pointer_main (in ) 
==17221==    by 0x401D3E: main (in ) 
==17221==  Address 0x0 is not stack'd, malloc'd or (recently) free'd 
==17221==  
==17221==  
==17221== Process terminating with default action of signal 11 (SIGSEGV) 
==17221==  Access not within mapped region at address 0x0 
==17221==    at 0x4C2E1C7: strcpy (in ) 
==17221==    by 0x41784C: wrong_arguments_func_pointer_015_func_002 (in ) 
==17221==    by 0x4178BF: wrong_arguments_func_pointer_015 (in ) 
==17221==    by 0x417E70: wrong_arguments_func_pointer_main (in ) 
==17221==    by 0x401D3E: main (in ) 
==17221==  If you believe this happened as a result of a stack 
==17221==  overflow in your program's main thread (unlikely but 
==17221==  possible), you can try to increase the size of the 
==17221==  main thread stack using the --main-stacksize= flag. 
==17221==  The main thread stack size used in this run was 8388608. 
==17221==  
==17221== HEAP SUMMARY: 
==17221==     in use at exit: 115 bytes in 6 blocks 
==17221==   total heap usage: 6 allocs, 0 frees, 115 bytes allocated 
==17221==  
==17221== LEAK SUMMARY: 
==17221==    definitely lost: 0 bytes in 0 blocks 
==17221==    indirectly lost: 0 bytes in 0 blocks 
==17221==      possibly lost: 0 bytes in 0 blocks 
==17221==    still reachable: 115 bytes in 6 blocks 
==17221==         suppressed: 0 bytes in 0 blocks 
==17221== Rerun with --leak-check=full to see details of leaked memory 
==17221==  
==17221== For counts of detected and suppressed errors, rerun with: -v 
==17221== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 50 16

vflag_file = 50 vflag_func = 16 vflag_copy =50016  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 50 17

vflag_file = 50 vflag_func = 17 vflag_copy =50017  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 50 18

==17227== Memcheck, a memory error detector 
==17227== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17227== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17227== Command: s 050018 
==17227==  
==17227== Jump to the invalid address stated on the next line 
==17227==    at 0x700000006: ??? 
==17227==    by 0x900000007: ??? 
==17227==  Address 0x700000006 is not stack'd, malloc'd or (recently) free'd 
==17227==  
==17227==  
==17227== Process terminating with default action of signal 11 (SIGSEGV) 
==17227==  Access not within mapped region at address 0x700000006 
==17227==    at 0x700000006: ??? 
==17227==    by 0x900000007: ??? 
==17227==  If you believe this happened as a result of a stack 
==17227==  overflow in your program's main thread (unlikely but 
==17227==  possible), you can try to increase the size of the 
==17227==  main thread stack using the --main-stacksize= flag. 
==17227==  The main thread stack size used in this run was 8388608. 
==17227==  
==17227== HEAP SUMMARY: 
==17227==     in use at exit: 52 bytes in 1 blocks 
==17227==   total heap usage: 1 allocs, 0 frees, 52 bytes allocated 
==17227==  
==17227== LEAK SUMMARY: 
==17227==    definitely lost: 0 bytes in 0 blocks 
==17227==    indirectly lost: 0 bytes in 0 blocks 
==17227==      possibly lost: 0 bytes in 0 blocks 
==17227==    still reachable: 52 bytes in 1 blocks 
==17227==         suppressed: 0 bytes in 0 blocks 
==17227== Rerun with --leak-check=full to see details of leaked memory 
==17227==  
==17227== For counts of detected and suppressed errors, rerun with: -v 
==17227== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 51 1

==17231== Memcheck, a memory error detector 
==17231== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17231== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17231== Command: s 051001 
==17231==  
==17231==  
==17231== Process terminating with default action of signal 8 (SIGFPE) 
==17231==  Integer divide by zero at address 0x802D3DFE4 
==17231==    at 0x418004: zero_division_001 (in ) 
==17231==    by 0x4182F1: zero_division_main (in ) 
==17231==    by 0x401D5B: main (in ) 
==17231==  
==17231== HEAP SUMMARY: 
==17231==     in use at exit: 0 bytes in 0 blocks 
==17231==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17231==  
==17231== All heap blocks were freed -- no leaks are possible 
==17231==  
==17231== For counts of detected and suppressed errors, rerun with: -v 
==17231== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 51 2

==17235== Memcheck, a memory error detector 
==17235== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17235== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17235== Command: s 051002 
==17235==  
==17235==  
==17235== Process terminating with default action of signal 8 (SIGFPE) 
==17235==  Integer divide by zero at address 0x802D3E17C 
==17235==    at 0x41801F: zero_division_002 (in ) 
==17235==    by 0x418313: zero_division_main (in ) 
==17235==    by 0x401D5B: main (in ) 
==17235==  
==17235== HEAP SUMMARY: 
==17235==     in use at exit: 0 bytes in 0 blocks 
==17235==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17235==  
==17235== All heap blocks were freed -- no leaks are possible 
==17235==  
==17235== For counts of detected and suppressed errors, rerun with: -v 
==17235== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 51 3

==17239== Memcheck, a memory error detector 
==17239== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17239== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17239== Command: s 051003 
==17239==  
==17239==  
==17239== Process terminating with default action of signal 8 (SIGFPE) 
==17239==  Integer divide by zero at address 0x802D3E314 
==17239==    at 0x418040: zero_division_003 (in ) 
==17239==    by 0x418335: zero_division_main (in ) 
==17239==    by 0x401D5B: main (in ) 
==17239==  
==17239== HEAP SUMMARY: 
==17239==     in use at exit: 0 bytes in 0 blocks 
==17239==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17239==  
==17239== All heap blocks were freed -- no leaks are possible 
==17239==  
==17239== For counts of detected and suppressed errors, rerun with: -v 
==17239== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 51 4

==17243== Memcheck, a memory error detector 
==17243== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17243== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17243== Command: s 051004 
==17243==  
==17243==  
==17243== Process terminating with default action of signal 8 (SIGFPE) 
==17243==  Integer divide by zero at address 0x802D3E638 
==17243==    at 0x41805A: zero_division_004_func_001 (in ) 
==17243==    by 0x418089: zero_division_004 (in ) 
==17243==    by 0x418357: zero_division_main (in ) 
==17243==    by 0x401D5B: main (in ) 
==17243==  
==17243== HEAP SUMMARY: 
==17243==     in use at exit: 0 bytes in 0 blocks 
==17243==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17243==  
==17243== All heap blocks were freed -- no leaks are possible 
==17243==  
==17243== For counts of detected and suppressed errors, rerun with: -v 
==17243== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 51 5

==17247== Memcheck, a memory error detector 
==17247== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17247== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17247== Command: s 051005 
==17247==  
==17247==  
==17247== Process terminating with default action of signal 8 (SIGFPE) 
==17247==  Integer divide by zero at address 0x802D3E74E 
==17247==    at 0x4180BD: zero_division_005 (in ) 
==17247==    by 0x418379: zero_division_main (in ) 
==17247==    by 0x401D5B: main (in ) 
==17247==  
==17247== HEAP SUMMARY: 
==17247==     in use at exit: 0 bytes in 0 blocks 
==17247==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17247==  
==17247== All heap blocks were freed -- no leaks are possible 
==17247==  
==17247== For counts of detected and suppressed errors, rerun with: -v 
==17247== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 51 6

==17251== Memcheck, a memory error detector 
==17251== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17251== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17251== Command: s 051006 
==17251==  
==17251==  
==17251== Process terminating with default action of signal 8 (SIGFPE) 
==17251==  Integer divide by zero at address 0x802D3E863 
==17251==    at 0x4180E1: zero_division_006 (in ) 
==17251==    by 0x41839B: zero_division_main (in ) 
==17251==    by 0x401D5B: main (in ) 
==17251==  
==17251== HEAP SUMMARY: 
==17251==     in use at exit: 0 bytes in 0 blocks 
==17251==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17251==  
==17251== All heap blocks were freed -- no leaks are possible 
==17251==  
==17251== For counts of detected and suppressed errors, rerun with: -v 
==17251== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 51 7

==17255== Memcheck, a memory error detector 
==17255== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17255== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17255== Command: s 051007 
==17255==  
==17255==  
==17255== Process terminating with default action of signal 8 (SIGFPE) 
==17255==  Integer divide by zero at address 0x802D3EBDE 
==17255==    at 0x41811B: zero_division_007 (in ) 
==17255==    by 0x4183BD: zero_division_main (in ) 
==17255==    by 0x401D5B: main (in ) 
==17255==  
==17255== HEAP SUMMARY: 
==17255==     in use at exit: 0 bytes in 0 blocks 
==17255==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17255==  
==17255== All heap blocks were freed -- no leaks are possible 
==17255==  
==17255== For counts of detected and suppressed errors, rerun with: -v 
==17255== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 51 8

vflag_file = 51 vflag_func = 8 vflag_copy =51008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 51 9

==17260== Memcheck, a memory error detector 
==17260== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17260== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17260== Command: s 051009 
==17260==  
==17260==  
==17260== Process terminating with default action of signal 8 (SIGFPE) 
==17260==  Integer divide by zero at address 0x802D3ECED 
==17260==    at 0x41815C: zero_division_009 (in ) 
==17260==    by 0x418401: zero_division_main (in ) 
==17260==    by 0x401D5B: main (in ) 
==17260==  
==17260== HEAP SUMMARY: 
==17260==     in use at exit: 0 bytes in 0 blocks 
==17260==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17260==  
==17260== All heap blocks were freed -- no leaks are possible 
==17260==  
==17260== For counts of detected and suppressed errors, rerun with: -v 
==17260== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 51 10

vflag_file = 51 vflag_func = 10 vflag_copy =51010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 01.w_Defects 51 11

==17265== Memcheck, a memory error detector 
==17265== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17265== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17265== Command: s 051011 
==17265==  
==17265==  
==17265== Process terminating with default action of signal 8 (SIGFPE) 
==17265==  Integer divide by zero at address 0x802D3F07B 
==17265==    at 0x4181A2: zero_division_011 (in ) 
==17265==    by 0x418445: zero_division_main (in ) 
==17265==    by 0x401D5B: main (in ) 
==17265==  
==17265== HEAP SUMMARY: 
==17265==     in use at exit: 0 bytes in 0 blocks 
==17265==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17265==  
==17265== All heap blocks were freed -- no leaks are possible 
==17265==  
==17265== For counts of detected and suppressed errors, rerun with: -v 
==17265== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 51 12

==17269== Memcheck, a memory error detector 
==17269== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17269== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17269== Command: s 051012 
==17269==  
==17269==  
==17269== Process terminating with default action of signal 8 (SIGFPE) 
==17269==  Integer divide by zero at address 0x802D3F243 
==17269==    at 0x4181C9: zero_division_012 (in ) 
==17269==    by 0x418467: zero_division_main (in ) 
==17269==    by 0x401D5B: main (in ) 
==17269==  
==17269== HEAP SUMMARY: 
==17269==     in use at exit: 0 bytes in 0 blocks 
==17269==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17269==  
==17269== All heap blocks were freed -- no leaks are possible 
==17269==  
==17269== For counts of detected and suppressed errors, rerun with: -v 
==17269== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 51 13

==17273== Memcheck, a memory error detector 
==17273== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17273== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17273== Command: s 051013 
==17273==  
==17273==  
==17273== Process terminating with default action of signal 8 (SIGFPE) 
==17273==  Integer divide by zero at address 0x802D3F536 
==17273==    at 0x4181FA: zero_division_013 (in ) 
==17273==    by 0x418489: zero_division_main (in ) 
==17273==    by 0x401D5B: main (in ) 
==17273==  
==17273== HEAP SUMMARY: 
==17273==     in use at exit: 0 bytes in 0 blocks 
==17273==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17273==  
==17273== All heap blocks were freed -- no leaks are possible 
==17273==  
==17273== For counts of detected and suppressed errors, rerun with: -v 
==17273== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 51 14

==17277== Memcheck, a memory error detector 
==17277== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17277== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17277== Command: s 051014 
==17277==  
==17277==  
==17277== Process terminating with default action of signal 8 (SIGFPE) 
==17277==  Integer divide by zero at address 0x802D3F5B0 
==17277==    at 0x418217: zero_division_014_func_001 (in ) 
==17277==    by 0x41822C: zero_division_014 (in ) 
==17277==    by 0x4184AB: zero_division_main (in ) 
==17277==    by 0x401D5B: main (in ) 
==17277==  
==17277== HEAP SUMMARY: 
==17277==     in use at exit: 0 bytes in 0 blocks 
==17277==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17277==  
==17277== All heap blocks were freed -- no leaks are possible 
==17277==  
==17277== For counts of detected and suppressed errors, rerun with: -v 
==17277== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 51 15

==17281== Memcheck, a memory error detector 
==17281== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17281== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17281== Command: s 051015 
==17281==  
==17281==  
==17281== Process terminating with default action of signal 8 (SIGFPE) 
==17281==  Integer divide by zero at address 0x802D3F6C7 
==17281==    at 0x41824B: zero_division_015 (in ) 
==17281==    by 0x4184CD: zero_division_main (in ) 
==17281==    by 0x401D5B: main (in ) 
==17281==  
==17281== HEAP SUMMARY: 
==17281==     in use at exit: 0 bytes in 0 blocks 
==17281==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17281==  
==17281== All heap blocks were freed -- no leaks are possible 
==17281==  
==17281== For counts of detected and suppressed errors, rerun with: -v 
==17281== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 01.w_Defects 51 16

==17285== Memcheck, a memory error detector 
==17285== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17285== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17285== Command: s 051016 
==17285==  
==17285==  
==17285== Process terminating with default action of signal 8 (SIGFPE) 
==17285==  Integer divide by zero at address 0x802D407DC 
==17285==    at 0x4182C4: zero_division_016 (in ) 
==17285==    by 0x4184EF: zero_division_main (in ) 
==17285==    by 0x401D5B: main (in ) 
==17285==  
==17285== HEAP SUMMARY: 
==17285==     in use at exit: 4 bytes in 1 blocks 
==17285==   total heap usage: 1 allocs, 0 frees, 4 bytes allocated 
==17285==  
==17285== LEAK SUMMARY: 
==17285==    definitely lost: 0 bytes in 0 blocks 
==17285==    indirectly lost: 0 bytes in 0 blocks 
==17285==      possibly lost: 0 bytes in 0 blocks 
==17285==    still reachable: 4 bytes in 1 blocks 
==17285==         suppressed: 0 bytes in 0 blocks 
==17285== Rerun with --leak-check=full to see details of leaked memory 
==17285==  
==17285== For counts of detected and suppressed errors, rerun with: -v 
==17285== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0) 
 

Confirmed as True Positive 

Valgrind being tested on 02.wo_Defects 1 1

vflag_file = 1 vflag_func = 1 vflag_copy =1001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 1 2

vflag_file = 1 vflag_func = 2 vflag_copy =1002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 1 3

vflag_file = 1 vflag_func = 3 vflag_copy =1003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 1 4

vflag_file = 1 vflag_func = 4 vflag_copy =1004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 1 5

vflag_file = 1 vflag_func = 5 vflag_copy =1005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 1 6

vflag_file = 1 vflag_func = 6 vflag_copy =1006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 1 7

vflag_file = 1 vflag_func = 7 vflag_copy =1007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 1 8

vflag_file = 1 vflag_func = 8 vflag_copy =1008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 1 9

vflag_file = 1 vflag_func = 9 vflag_copy =1009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 1 10

vflag_file = 1 vflag_func = 10 vflag_copy =1010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 1 11

vflag_file = 1 vflag_func = 11 vflag_copy =1011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 1 12

vflag_file = 1 vflag_func = 12 vflag_copy =1012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 1 13

vflag_file = 1 vflag_func = 13 vflag_copy =1013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 1 14

vflag_file = 1 vflag_func = 14 vflag_copy =1014  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 1 15

vflag_file = 1 vflag_func = 15 vflag_copy =1015  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 1 16

vflag_file = 1 vflag_func = 16 vflag_copy =1016  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 1 17

vflag_file = 1 vflag_func = 17 vflag_copy =1017  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 1

vflag_file = 2 vflag_func = 1 vflag_copy =2001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 2

vflag_file = 2 vflag_func = 2 vflag_copy =2002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 3

vflag_file = 2 vflag_func = 3 vflag_copy =2003  
1Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 4

vflag_file = 2 vflag_func = 4 vflag_copy =2004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 5

vflag_file = 2 vflag_func = 5 vflag_copy =2005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 6

vflag_file = 2 vflag_func = 6 vflag_copy =2006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 7

vflag_file = 2 vflag_func = 7 vflag_copy =2007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 8

vflag_file = 2 vflag_func = 8 vflag_copy =2008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 9

vflag_file = 2 vflag_func = 9 vflag_copy =2009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 10

vflag_file = 2 vflag_func = 10 vflag_copy =2010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 11

vflag_file = 2 vflag_func = 11 vflag_copy =2011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 12

vflag_file = 2 vflag_func = 12 vflag_copy =2012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 13

vflag_file = 2 vflag_func = 13 vflag_copy =2013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 14

vflag_file = 2 vflag_func = 14 vflag_copy =2014  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 15

vflag_file = 2 vflag_func = 15 vflag_copy =2015  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 16

vflag_file = 2 vflag_func = 16 vflag_copy =2016  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 17

vflag_file = 2 vflag_func = 17 vflag_copy =2017  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 18

vflag_file = 2 vflag_func = 18 vflag_copy =2018  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 19

vflag_file = 2 vflag_func = 19 vflag_copy =2019  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 20

vflag_file = 2 vflag_func = 20 vflag_copy =2020  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 21

vflag_file = 2 vflag_func = 21 vflag_copy =2021  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 22

vflag_file = 2 vflag_func = 22 vflag_copy =2022  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 23

vflag_file = 2 vflag_func = 23 vflag_copy =2023  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 24

vflag_file = 2 vflag_func = 24 vflag_copy =2024  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 25

vflag_file = 2 vflag_func = 25 vflag_copy =2025  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 26

vflag_file = 2 vflag_func = 26 vflag_copy =2026  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 27

vflag_file = 2 vflag_func = 27 vflag_copy =2027  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 28

vflag_file = 2 vflag_func = 28 vflag_copy =2028  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 29

vflag_file = 2 vflag_func = 29 vflag_copy =2029  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 30

vflag_file = 2 vflag_func = 30 vflag_copy =2030  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 31

vflag_file = 2 vflag_func = 31 vflag_copy =2031  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 2 32

vflag_file = 2 vflag_func = 32 vflag_copy =2032  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 1

vflag_file = 3 vflag_func = 1 vflag_copy =3001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 2

vflag_file = 3 vflag_func = 2 vflag_copy =3002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 3

vflag_file = 3 vflag_func = 3 vflag_copy =3003  
1Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 4

vflag_file = 3 vflag_func = 4 vflag_copy =3004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 5

vflag_file = 3 vflag_func = 5 vflag_copy =3005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 6

vflag_file = 3 vflag_func = 6 vflag_copy =3006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 7

vflag_file = 3 vflag_func = 7 vflag_copy =3007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 8

vflag_file = 3 vflag_func = 8 vflag_copy =3008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 9

vflag_file = 3 vflag_func = 9 vflag_copy =3009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 10

vflag_file = 3 vflag_func = 10 vflag_copy =3010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 11

vflag_file = 3 vflag_func = 11 vflag_copy =3011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 12

vflag_file = 3 vflag_func = 12 vflag_copy =3012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 13

vflag_file = 3 vflag_func = 13 vflag_copy =3013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 14

vflag_file = 3 vflag_func = 14 vflag_copy =3014  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 15

vflag_file = 3 vflag_func = 15 vflag_copy =3015  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 16

vflag_file = 3 vflag_func = 16 vflag_copy =3016  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 17

vflag_file = 3 vflag_func = 17 vflag_copy =3017  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 18

vflag_file = 3 vflag_func = 18 vflag_copy =3018  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 19

vflag_file = 3 vflag_func = 19 vflag_copy =3019  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 20

vflag_file = 3 vflag_func = 20 vflag_copy =3020  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 21

vflag_file = 3 vflag_func = 21 vflag_copy =3021  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 22

vflag_file = 3 vflag_func = 22 vflag_copy =3022  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 23

vflag_file = 3 vflag_func = 23 vflag_copy =3023  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 24

vflag_file = 3 vflag_func = 24 vflag_copy =3024  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 25

vflag_file = 3 vflag_func = 25 vflag_copy =3025  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 26

vflag_file = 3 vflag_func = 26 vflag_copy =3026  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 27

vflag_file = 3 vflag_func = 27 vflag_copy =3027  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 28

vflag_file = 3 vflag_func = 28 vflag_copy =3028  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 29

vflag_file = 3 vflag_func = 29 vflag_copy =3029  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 30

vflag_file = 3 vflag_func = 30 vflag_copy =3030  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 31

vflag_file = 3 vflag_func = 31 vflag_copy =3031  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 32

vflag_file = 3 vflag_func = 32 vflag_copy =3032  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 33

vflag_file = 3 vflag_func = 33 vflag_copy =3033  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 34

vflag_file = 3 vflag_func = 34 vflag_copy =3034  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 35

vflag_file = 3 vflag_func = 35 vflag_copy =3035  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 36

vflag_file = 3 vflag_func = 36 vflag_copy =3036  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 37

vflag_file = 3 vflag_func = 37 vflag_copy =3037  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 3 38

vflag_file = 3 vflag_func = 38 vflag_copy =3038  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 4 1

vflag_file = 4 vflag_func = 1 vflag_copy =4001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 4 2

vflag_file = 4 vflag_func = 2 vflag_copy =4002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 5 1

vflag_file = 5 vflag_func = 1 vflag_copy =5001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 5 2

vflag_file = 5 vflag_func = 2 vflag_copy =5002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 5 3

vflag_file = 5 vflag_func = 3 vflag_copy =5003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 5 4

vflag_file = 5 vflag_func = 4 vflag_copy =5004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 5 5

vflag_file = 5 vflag_func = 5 vflag_copy =5005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 5 6

vflag_file = 5 vflag_func = 6 vflag_copy =5006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 5 7

vflag_file = 5 vflag_func = 7 vflag_copy =5007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 5 8

vflag_file = 5 vflag_func = 8 vflag_copy =5008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 5 9

vflag_file = 5 vflag_func = 9 vflag_copy =5009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 5 10

vflag_file = 5 vflag_func = 10 vflag_copy =5010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 6 1

vflag_file = 6 vflag_func = 1 vflag_copy =6001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 6 2

vflag_file = 6 vflag_func = 2 vflag_copy =6002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 6 3

vflag_file = 6 vflag_func = 3 vflag_copy =6003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 6 4

vflag_file = 6 vflag_func = 4 vflag_copy =6004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 6 5

vflag_file = 6 vflag_func = 5 vflag_copy =6005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 6 6

vflag_file = 6 vflag_func = 6 vflag_copy =6006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 6 7

vflag_file = 6 vflag_func = 7 vflag_copy =6007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 6 8

vflag_file = 6 vflag_func = 8 vflag_copy =6008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 6 9

vflag_file = 6 vflag_func = 9 vflag_copy =6009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 6 10

vflag_file = 6 vflag_func = 10 vflag_copy =6010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 6 11

vflag_file = 6 vflag_func = 11 vflag_copy =6011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 6 12

vflag_file = 6 vflag_func = 12 vflag_copy =6012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 6 13

vflag_file = 6 vflag_func = 13 vflag_copy =6013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 6 14

vflag_file = 6 vflag_func = 14 vflag_copy =6014  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 6 15

vflag_file = 6 vflag_func = 15 vflag_copy =6015  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 6 16

vflag_file = 6 vflag_func = 16 vflag_copy =6016  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 6 17

vflag_file = 6 vflag_func = 17 vflag_copy =6017  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 6 18

vflag_file = 6 vflag_func = 18 vflag_copy =6018  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 6 19

vflag_file = 6 vflag_func = 19 vflag_copy =6019  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 7 1

vflag_file = 7 vflag_func = 1 vflag_copy =7001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 7 2

vflag_file = 7 vflag_func = 2 vflag_copy =7002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 7 3

vflag_file = 7 vflag_func = 3 vflag_copy =7003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 7 4

vflag_file = 7 vflag_func = 4 vflag_copy =7004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 7 5

vflag_file = 7 vflag_func = 5 vflag_copy =7005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 7 6

vflag_file = 7 vflag_func = 6 vflag_copy =7006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 7 7

vflag_file = 7 vflag_func = 7 vflag_copy =7007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 7 8

vflag_file = 7 vflag_func = 8 vflag_copy =7008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 7 9

vflag_file = 7 vflag_func = 9 vflag_copy =7009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 7 10

vflag_file = 7 vflag_func = 10 vflag_copy =7010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 7 11

vflag_file = 7 vflag_func = 11 vflag_copy =7011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 7 12

vflag_file = 7 vflag_func = 12 vflag_copy =7012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 7 13

vflag_file = 7 vflag_func = 13 vflag_copy =7013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 7 14

vflag_file = 7 vflag_func = 14 vflag_copy =7014  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 7 15

vflag_file = 7 vflag_func = 15 vflag_copy =7015  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 7 16

vflag_file = 7 vflag_func = 16 vflag_copy =7016  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 7 17

vflag_file = 7 vflag_func = 17 vflag_copy =7017  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 7 18

vflag_file = 7 vflag_func = 18 vflag_copy =7018  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 7 19

vflag_file = 7 vflag_func = 19 vflag_copy =7019  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 7 20

vflag_file = 7 vflag_func = 20 vflag_copy =7020  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 7 21

vflag_file = 7 vflag_func = 21 vflag_copy =7021  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 7 22

vflag_file = 7 vflag_func = 22 vflag_copy =7022  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 7 23

vflag_file = 7 vflag_func = 23 vflag_copy =7023  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 7 24

vflag_file = 7 vflag_func = 24 vflag_copy =7024  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 7 25

vflag_file = 7 vflag_func = 25 vflag_copy =7025  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 8 1

vflag_file = 8 vflag_func = 1 vflag_copy =8001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 8 2

vflag_file = 8 vflag_func = 2 vflag_copy =8002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 8 3

vflag_file = 8 vflag_func = 3 vflag_copy =8003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 8 4

vflag_file = 8 vflag_func = 4 vflag_copy =8004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 8 5

vflag_file = 8 vflag_func = 5 vflag_copy =8005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 8 6

vflag_file = 8 vflag_func = 6 vflag_copy =8006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 8 7

vflag_file = 8 vflag_func = 7 vflag_copy =8007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 8 8

vflag_file = 8 vflag_func = 8 vflag_copy =8008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 8 9

vflag_file = 8 vflag_func = 9 vflag_copy =8009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 8 10

vflag_file = 8 vflag_func = 10 vflag_copy =8010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 8 11

vflag_file = 8 vflag_func = 11 vflag_copy =8011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 8 12

vflag_file = 8 vflag_func = 12 vflag_copy =8012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 9 1

vflag_file = 9 vflag_func = 1 vflag_copy =9001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 9 2

vflag_file = 9 vflag_func = 2 vflag_copy =9002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 9 3

vflag_file = 9 vflag_func = 3 vflag_copy =9003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 9 4

vflag_file = 9 vflag_func = 4 vflag_copy =9004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 9 5

vflag_file = 9 vflag_func = 5 vflag_copy =9005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 9 6

vflag_file = 9 vflag_func = 6 vflag_copy =9006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 9 7

vflag_file = 9 vflag_func = 7 vflag_copy =9007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 9 8

vflag_file = 9 vflag_func = 8 vflag_copy =9008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 9 9

vflag_file = 9 vflag_func = 9 vflag_copy =9009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 9 10

vflag_file = 9 vflag_func = 10 vflag_copy =9010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 9 11

vflag_file = 9 vflag_func = 11 vflag_copy =9011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 9 12

vflag_file = 9 vflag_func = 12 vflag_copy =9012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 9 13

vflag_file = 9 vflag_func = 13 vflag_copy =9013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 10 1

vflag_file = 10 vflag_func = 1 vflag_copy =10001  
Task1! dead_lock= 20  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 10 2

vflag_file = 10 vflag_func = 2 vflag_copy =10002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 10 3

vflag_file = 10 vflag_func = 3 vflag_copy =10003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 10 4

vflag_file = 10 vflag_func = 4 vflag_copy =10004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 10 5

vflag_file = 10 vflag_func = 5 vflag_copy =10005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 11 1

vflag_file = 11 vflag_func = 1 vflag_copy =11001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 11 2

vflag_file = 11 vflag_func = 2 vflag_copy =11002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 11 3

vflag_file = 11 vflag_func = 3 vflag_copy =11003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 12 1

vflag_file = 12 vflag_func = 1 vflag_copy =12001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 12 2

vflag_file = 12 vflag_func = 2 vflag_copy =12002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 12 3

vflag_file = 12 vflag_func = 3 vflag_copy =12003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 12 4

vflag_file = 12 vflag_func = 4 vflag_copy =12004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 12 5

vflag_file = 12 vflag_func = 5 vflag_copy =12005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 12 6

vflag_file = 12 vflag_func = 6 vflag_copy =12006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 12 7

vflag_file = 12 vflag_func = 7 vflag_copy =12007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 12 8

vflag_file = 12 vflag_func = 8 vflag_copy =12008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 12 9

vflag_file = 12 vflag_func = 9 vflag_copy =12009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 12 10

vflag_file = 12 vflag_func = 10 vflag_copy =12010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 12 11

vflag_file = 12 vflag_func = 11 vflag_copy =12011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 12 12

vflag_file = 12 vflag_func = 12 vflag_copy =12012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 13 1

vflag_file = 13 vflag_func = 1 vflag_copy =13001  
Task1! It's me, thread #99747584! 
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 13 2

vflag_file = 13 vflag_func = 2 vflag_copy =13002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 13 3

vflag_file = 13 vflag_func = 3 vflag_copy =13003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 13 4

vflag_file = 13 vflag_func = 4 vflag_copy =13004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 14 1

vflag_file = 14 vflag_func = 1 vflag_copy =14001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 14 2

vflag_file = 14 vflag_func = 2 vflag_copy =14002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 14 3

vflag_file = 14 vflag_func = 3 vflag_copy =14003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 14 4

vflag_file = 14 vflag_func = 4 vflag_copy =14004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 14 5

vflag_file = 14 vflag_func = 5 vflag_copy =14005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 14 6

vflag_file = 14 vflag_func = 6 vflag_copy =14006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 15 1

vflag_file = 15 vflag_func = 1 vflag_copy =15001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 15 2

vflag_file = 15 vflag_func = 2 vflag_copy =15002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 15 3

vflag_file = 15 vflag_func = 3 vflag_copy =15003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 15 4

vflag_file = 15 vflag_func = 4 vflag_copy =15004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 15 5

vflag_file = 15 vflag_func = 5 vflag_copy =15005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 15 6

vflag_file = 15 vflag_func = 6 vflag_copy =15006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 15 7

vflag_file = 15 vflag_func = 7 vflag_copy =15007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 15 8

vflag_file = 15 vflag_func = 8 vflag_copy =15008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 15 9

vflag_file = 15 vflag_func = 9 vflag_copy =15009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 16 1

vflag_file = 16 vflag_func = 1 vflag_copy =16001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 16 2

vflag_file = 16 vflag_func = 2 vflag_copy =16002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 16 3

vflag_file = 16 vflag_func = 3 vflag_copy =16003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 16 4

vflag_file = 16 vflag_func = 4 vflag_copy =16004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 16 5

vflag_file = 16 vflag_func = 5 vflag_copy =16005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 16 6

vflag_file = 16 vflag_func = 6 vflag_copy =16006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 16 7

vflag_file = 16 vflag_func = 7 vflag_copy =16007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 16 8

vflag_file = 16 vflag_func = 8 vflag_copy =16008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 16 9

vflag_file = 16 vflag_func = 9 vflag_copy =16009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 16 10

vflag_file = 16 vflag_func = 10 vflag_copy =16010  
gPrinted from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 16 11

vflag_file = 16 vflag_func = 11 vflag_copy =16011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 16 12

vflag_file = 16 vflag_func = 12 vflag_copy =16012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 16 13

vflag_file = 16 vflag_func = 13 vflag_copy =16013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 16 14

vflag_file = 16 vflag_func = 14 vflag_copy =16014  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 16 15

vflag_file = 16 vflag_func = 15 vflag_copy =16015  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 16 16

vflag_file = 16 vflag_func = 16 vflag_copy =16016  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 17 1

vflag_file = 17 vflag_func = 1 vflag_copy =17001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 17 2

vflag_file = 17 vflag_func = 2 vflag_copy =17002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 17 3

vflag_file = 17 vflag_func = 3 vflag_copy =17003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 17 4

vflag_file = 17 vflag_func = 4 vflag_copy =17004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 17 5

vflag_file = 17 vflag_func = 5 vflag_copy =17005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 17 6

vflag_file = 17 vflag_func = 6 vflag_copy =17006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 17 8

vflag_file = 17 vflag_func = 8 vflag_copy =17008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 17 11

vflag_file = 17 vflag_func = 11 vflag_copy =17011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 18 1

vflag_file = 18 vflag_func = 1 vflag_copy =18001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 18 2

vflag_file = 18 vflag_func = 2 vflag_copy =18002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 18 3

vflag_file = 18 vflag_func = 3 vflag_copy =18003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 18 4

vflag_file = 18 vflag_func = 4 vflag_copy =18004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 18 5

vflag_file = 18 vflag_func = 5 vflag_copy =18005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 18 6

vflag_file = 18 vflag_func = 6 vflag_copy =18006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 18 7

vflag_file = 18 vflag_func = 7 vflag_copy =18007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 18 8

vflag_file = 18 vflag_func = 8 vflag_copy =18008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 18 9

vflag_file = 18 vflag_func = 9 vflag_copy =18009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 18 10

vflag_file = 18 vflag_func = 10 vflag_copy =18010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 18 11

vflag_file = 18 vflag_func = 11 vflag_copy =18011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 18 12

vflag_file = 18 vflag_func = 12 vflag_copy =18012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 18 13

vflag_file = 18 vflag_func = 13 vflag_copy =18013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 18 14

vflag_file = 18 vflag_func = 14 vflag_copy =18014  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 18 15

vflag_file = 18 vflag_func = 15 vflag_copy =18015  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 19 1

vflag_file = 19 vflag_func = 1 vflag_copy =19001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 19 2

vflag_file = 19 vflag_func = 2 vflag_copy =19002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 19 3

vflag_file = 19 vflag_func = 3 vflag_copy =19003  
a 
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 19 4

vflag_file = 19 vflag_func = 4 vflag_copy =19004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 19 5

vflag_file = 19 vflag_func = 5 vflag_copy =19005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 19 6

vflag_file = 19 vflag_func = 6 vflag_copy =19006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 19 7

vflag_file = 19 vflag_func = 7 vflag_copy =19007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 19 8

vflag_file = 19 vflag_func = 8 vflag_copy =19008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 19 9

vflag_file = 19 vflag_func = 9 vflag_copy =19009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 19 10

vflag_file = 19 vflag_func = 10 vflag_copy =19010  
TEST STRING 
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 19 11

vflag_file = 19 vflag_func = 11 vflag_copy =19011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 19 12

vflag_file = 19 vflag_func = 12 vflag_copy =19012  
APrinted from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 19 13

vflag_file = 19 vflag_func = 13 vflag_copy =19013  
STRING#Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 19 14

vflag_file = 19 vflag_func = 14 vflag_copy =19014  
APrinted from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 19 15

vflag_file = 19 vflag_func = 15 vflag_copy =19015  
TEST 
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 19 16

vflag_file = 19 vflag_func = 16 vflag_copy =19016  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 21 1

vflag_file = 21 vflag_func = 1 vflag_copy =21001  
00 
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 21 2

vflag_file = 21 vflag_func = 2 vflag_copy =21002  
00 
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 21 3

vflag_file = 21 vflag_func = 3 vflag_copy =21003  
00102030405060708090Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 21 4

vflag_file = 21 vflag_func = 4 vflag_copy =21004  
102030405060708090100 
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 22 1

vflag_file = 22 vflag_func = 1 vflag_copy =22001  
1804289381Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 23 1

vflag_file = 23 vflag_func = 1 vflag_copy =23001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 23 2

vflag_file = 23 vflag_func = 2 vflag_copy =23002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 23 3

vflag_file = 23 vflag_func = 3 vflag_copy =23003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 23 4

vflag_file = 23 vflag_func = 4 vflag_copy =23004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 23 5

vflag_file = 23 vflag_func = 5 vflag_copy =23005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 23 6

vflag_file = 23 vflag_func = 6 vflag_copy =23006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 24 1

vflag_file = 24 vflag_func = 1 vflag_copy =24001  
10Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 24 2

vflag_file = 24 vflag_func = 2 vflag_copy =24002  
10.500000Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 24 3

vflag_file = 24 vflag_func = 3 vflag_copy =24003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 24 4

vflag_file = 24 vflag_func = 4 vflag_copy =24004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 24 5

vflag_file = 24 vflag_func = 5 vflag_copy =24005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 24 6

vflag_file = 24 vflag_func = 6 vflag_copy =24006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 24 7

vflag_file = 24 vflag_func = 7 vflag_copy =24007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 24 8

vflag_file = 24 vflag_func = 8 vflag_copy =24008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 24 9

vflag_file = 24 vflag_func = 9 vflag_copy =24009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 24 10

vflag_file = 24 vflag_func = 10 vflag_copy =24010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 24 11

vflag_file = 24 vflag_func = 11 vflag_copy =24011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 24 12

vflag_file = 24 vflag_func = 12 vflag_copy =24012  
10Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 24 13

vflag_file = 24 vflag_func = 13 vflag_copy =24013  
10Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 24 14

vflag_file = 24 vflag_func = 14 vflag_copy =24014  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 24 15

vflag_file = 24 vflag_func = 15 vflag_copy =24015  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 24 16

vflag_file = 24 vflag_func = 16 vflag_copy =24016  
invalid gbl= STRING00  
invalid str= STRING00  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 24 17

vflag_file = 24 vflag_func = 17 vflag_copy =24017  
invalid gbl= TEST  
invalid str= TEST  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 25 1

vflag_file = 25 vflag_func = 1 vflag_copy =25001  
16843009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 25 2

vflag_file = 25 vflag_func = 2 vflag_copy =25002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 25 3

vflag_file = 25 vflag_func = 3 vflag_copy =25003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 25 4

vflag_file = 25 vflag_func = 4 vflag_copy =25004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 25 5

vflag_file = 25 vflag_func = 5 vflag_copy =25005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 25 6

vflag_file = 25 vflag_func = 6 vflag_copy =25006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 25 7

vflag_file = 25 vflag_func = 7 vflag_copy =25007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 25 8

==17609== Memcheck, a memory error detector 
==17609== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17609== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17609== Command: s 025008 
==17609==  
==17609== Invalid write of size 4 
==17609==    at 0x417FBD: littlemem_st_008_func_002 (in ) 
==17609==    by 0x417FE7: littlemem_st_008 (in ) 
==17609==    by 0x4181F5: littlemem_st_main (in ) 
==17609==    by 0x40347D: main (in ) 
==17609==  Address 0x8 is not stack'd, malloc'd or (recently) free'd 
==17609==  
==17609==  
==17609== Process terminating with default action of signal 11 (SIGSEGV) 
==17609==  Access not within mapped region at address 0x8 
==17609==    at 0x417FBD: littlemem_st_008_func_002 (in ) 
==17609==    by 0x417FE7: littlemem_st_008 (in ) 
==17609==    by 0x4181F5: littlemem_st_main (in ) 
==17609==    by 0x40347D: main (in ) 
==17609==  If you believe this happened as a result of a stack 
==17609==  overflow in your program's main thread (unlikely but 
==17609==  possible), you can try to increase the size of the 
==17609==  main thread stack using the --main-stacksize= flag. 
==17609==  The main thread stack size used in this run was 8388608. 
==17609==  
==17609== HEAP SUMMARY: 
==17609==     in use at exit: 0 bytes in 0 blocks 
==17609==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17609==  
==17609== All heap blocks were freed -- no leaks are possible 
==17609==  
==17609== For counts of detected and suppressed errors, rerun with: -v 
==17609== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as False Positive 

Valgrind being tested on 02.wo_Defects 25 9

==17613== Memcheck, a memory error detector 
==17613== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17613== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17613== Command: s 025009 
==17613==  
==17613== Invalid write of size 4 
==17613==    at 0x41801C: littlemem_st_009_func_002 (in ) 
==17613==    by 0x418046: littlemem_st_009 (in ) 
==17613==    by 0x418217: littlemem_st_main (in ) 
==17613==    by 0x40347D: main (in ) 
==17613==  Address 0x8 is not stack'd, malloc'd or (recently) free'd 
==17613==  
==17613==  
==17613== Process terminating with default action of signal 11 (SIGSEGV) 
==17613==  Access not within mapped region at address 0x8 
==17613==    at 0x41801C: littlemem_st_009_func_002 (in ) 
==17613==    by 0x418046: littlemem_st_009 (in ) 
==17613==    by 0x418217: littlemem_st_main (in ) 
==17613==    by 0x40347D: main (in ) 
==17613==  If you believe this happened as a result of a stack 
==17613==  overflow in your program's main thread (unlikely but 
==17613==  possible), you can try to increase the size of the 
==17613==  main thread stack using the --main-stacksize= flag. 
==17613==  The main thread stack size used in this run was 8388608. 
==17613==  
==17613== HEAP SUMMARY: 
==17613==     in use at exit: 0 bytes in 0 blocks 
==17613==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17613==  
==17613== All heap blocks were freed -- no leaks are possible 
==17613==  
==17613== For counts of detected and suppressed errors, rerun with: -v 
==17613== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as False Positive 

Valgrind being tested on 02.wo_Defects 25 10

==17617== Memcheck, a memory error detector 
==17617== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17617== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17617== Command: s 025010 
==17617==  
==17617== Invalid write of size 4 
==17617==    at 0x418069: littlemem_st_010_func_002 (in ) 
==17617==    by 0x418089: littlemem_st_010 (in ) 
==17617==    by 0x418239: littlemem_st_main (in ) 
==17617==    by 0x40347D: main (in ) 
==17617==  Address 0x8 is not stack'd, malloc'd or (recently) free'd 
==17617==  
==17617==  
==17617== Process terminating with default action of signal 11 (SIGSEGV) 
==17617==  Access not within mapped region at address 0x8 
==17617==    at 0x418069: littlemem_st_010_func_002 (in ) 
==17617==    by 0x418089: littlemem_st_010 (in ) 
==17617==    by 0x418239: littlemem_st_main (in ) 
==17617==    by 0x40347D: main (in ) 
==17617==  If you believe this happened as a result of a stack 
==17617==  overflow in your program's main thread (unlikely but 
==17617==  possible), you can try to increase the size of the 
==17617==  main thread stack using the --main-stacksize= flag. 
==17617==  The main thread stack size used in this run was 8388608. 
==17617==  
==17617== HEAP SUMMARY: 
==17617==     in use at exit: 0 bytes in 0 blocks 
==17617==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17617==  
==17617== All heap blocks were freed -- no leaks are possible 
==17617==  
==17617== For counts of detected and suppressed errors, rerun with: -v 
==17617== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as False Positive 

Valgrind being tested on 02.wo_Defects 25 11

==17621== Memcheck, a memory error detector 
==17621== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al. 
==17621== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info 
==17621== Command: s 025011 
==17621==  
==17621== Invalid write of size 4 
==17621==    at 0x4180B5: littlemem_st_011_func_002 (in ) 
==17621==    by 0x4180DF: littlemem_st_011 (in ) 
==17621==    by 0x41825B: littlemem_st_main (in ) 
==17621==    by 0x40347D: main (in ) 
==17621==  Address 0x8 is not stack'd, malloc'd or (recently) free'd 
==17621==  
==17621==  
==17621== Process terminating with default action of signal 11 (SIGSEGV) 
==17621==  Access not within mapped region at address 0x8 
==17621==    at 0x4180B5: littlemem_st_011_func_002 (in ) 
==17621==    by 0x4180DF: littlemem_st_011 (in ) 
==17621==    by 0x41825B: littlemem_st_main (in ) 
==17621==    by 0x40347D: main (in ) 
==17621==  If you believe this happened as a result of a stack 
==17621==  overflow in your program's main thread (unlikely but 
==17621==  possible), you can try to increase the size of the 
==17621==  main thread stack using the --main-stacksize= flag. 
==17621==  The main thread stack size used in this run was 8388608. 
==17621==  
==17621== HEAP SUMMARY: 
==17621==     in use at exit: 0 bytes in 0 blocks 
==17621==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated 
==17621==  
==17621== All heap blocks were freed -- no leaks are possible 
==17621==  
==17621== For counts of detected and suppressed errors, rerun with: -v 
==17621== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0) 
 

Confirmed as False Positive 

Valgrind being tested on 02.wo_Defects 27 1

vflag_file = 27 vflag_func = 1 vflag_copy =27001  
Task1! Lock Never Unlock, threadID# 99747584! gbl1 = 1  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 27 2

vflag_file = 27 vflag_func = 2 vflag_copy =27002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 27 3

vflag_file = 27 vflag_func = 3 vflag_copy =27003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 27 4

vflag_file = 27 vflag_func = 4 vflag_copy =27004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 27 5

vflag_file = 27 vflag_func = 5 vflag_copy =27005  
Task5! Lock Never Unlock, threadID# 99747584! gbl5 = 5  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 27 6

vflag_file = 27 vflag_func = 6 vflag_copy =27006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 27 7

vflag_file = 27 vflag_func = 7 vflag_copy =27007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 27 8

vflag_file = 27 vflag_func = 8 vflag_copy =27008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 27 9

vflag_file = 27 vflag_func = 9 vflag_copy =27009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 28 1

vflag_file = 28 vflag_func = 1 vflag_copy =28001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 28 2

vflag_file = 28 vflag_func = 2 vflag_copy =28002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 28 3

vflag_file = 28 vflag_func = 3 vflag_copy =28003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 28 4

vflag_file = 28 vflag_func = 4 vflag_copy =28004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 28 5

vflag_file = 28 vflag_func = 5 vflag_copy =28005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 28 6

vflag_file = 28 vflag_func = 6 vflag_copy =28006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 28 7

vflag_file = 28 vflag_func = 7 vflag_copy =28007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 28 8

vflag_file = 28 vflag_func = 8 vflag_copy =28008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 28 9

vflag_file = 28 vflag_func = 9 vflag_copy =28009  
String Test123Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 28 10

vflag_file = 28 vflag_func = 10 vflag_copy =28010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 28 11

vflag_file = 28 vflag_func = 11 vflag_copy =28011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 28 12

vflag_file = 28 vflag_func = 12 vflag_copy =28012  
0Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 28 13

vflag_file = 28 vflag_func = 13 vflag_copy =28013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 28 14

vflag_file = 28 vflag_func = 14 vflag_copy =28014  
0 10.500000Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 28 15

vflag_file = 28 vflag_func = 15 vflag_copy =28015  
1Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 28 16

vflag_file = 28 vflag_func = 16 vflag_copy =28016  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 29 1

vflag_file = 29 vflag_func = 1 vflag_copy =29001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 29 2

vflag_file = 29 vflag_func = 2 vflag_copy =29002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 29 3

vflag_file = 29 vflag_func = 3 vflag_copy =29003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 29 4

vflag_file = 29 vflag_func = 4 vflag_copy =29004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 29 5

vflag_file = 29 vflag_func = 5 vflag_copy =29005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 29 6

vflag_file = 29 vflag_func = 6 vflag_copy =29006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 29 7

vflag_file = 29 vflag_func = 7 vflag_copy =29007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 29 8

vflag_file = 29 vflag_func = 8 vflag_copy =29008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 29 9

vflag_file = 29 vflag_func = 9 vflag_copy =29009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 29 10

vflag_file = 29 vflag_func = 10 vflag_copy =29010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 29 11

vflag_file = 29 vflag_func = 11 vflag_copy =29011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 29 12

vflag_file = 29 vflag_func = 12 vflag_copy =29012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 29 13

vflag_file = 29 vflag_func = 13 vflag_copy =29013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 29 14

vflag_file = 29 vflag_func = 14 vflag_copy =29014  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 29 15

vflag_file = 29 vflag_func = 15 vflag_copy =29015  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 29 16

vflag_file = 29 vflag_func = 16 vflag_copy =29016  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 29 17

vflag_file = 29 vflag_func = 17 vflag_copy =29017  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 29 18

vflag_file = 29 vflag_func = 18 vflag_copy =29018  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 30 1

vflag_file = 30 vflag_func = 1 vflag_copy =30001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 30 2

vflag_file = 30 vflag_func = 2 vflag_copy =30002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 30 3

vflag_file = 30 vflag_func = 3 vflag_copy =30003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 30 4

vflag_file = 30 vflag_func = 4 vflag_copy =30004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 31 1

vflag_file = 31 vflag_func = 1 vflag_copy =31001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 31 2

vflag_file = 31 vflag_func = 2 vflag_copy =31002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 31 3

vflag_file = 31 vflag_func = 3 vflag_copy =31003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 31 4

vflag_file = 31 vflag_func = 4 vflag_copy =31004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 31 5

vflag_file = 31 vflag_func = 5 vflag_copy =31005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 31 6

vflag_file = 31 vflag_func = 6 vflag_copy =31006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 31 7

vflag_file = 31 vflag_func = 7 vflag_copy =31007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 31 8

vflag_file = 31 vflag_func = 8 vflag_copy =31008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 31 9

vflag_file = 31 vflag_func = 9 vflag_copy =31009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 31 10

vflag_file = 31 vflag_func = 10 vflag_copy =31010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 31 11

vflag_file = 31 vflag_func = 11 vflag_copy =31011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 31 12

vflag_file = 31 vflag_func = 12 vflag_copy =31012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 31 13

vflag_file = 31 vflag_func = 13 vflag_copy =31013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 31 14

vflag_file = 31 vflag_func = 14 vflag_copy =31014  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 31 15

vflag_file = 31 vflag_func = 15 vflag_copy =31015  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 31 17

vflag_file = 31 vflag_func = 17 vflag_copy =31017  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 1

vflag_file = 32 vflag_func = 1 vflag_copy =32001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 2

vflag_file = 32 vflag_func = 2 vflag_copy =32002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 3

vflag_file = 32 vflag_func = 3 vflag_copy =32003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 4

vflag_file = 32 vflag_func = 4 vflag_copy =32004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 5

vflag_file = 32 vflag_func = 5 vflag_copy =32005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 6

vflag_file = 32 vflag_func = 6 vflag_copy =32006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 7

vflag_file = 32 vflag_func = 7 vflag_copy =32007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 8

vflag_file = 32 vflag_func = 8 vflag_copy =32008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 9

vflag_file = 32 vflag_func = 9 vflag_copy =32009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 10

vflag_file = 32 vflag_func = 10 vflag_copy =32010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 11

vflag_file = 32 vflag_func = 11 vflag_copy =32011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 12

vflag_file = 32 vflag_func = 12 vflag_copy =32012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 13

vflag_file = 32 vflag_func = 13 vflag_copy =32013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 14

vflag_file = 32 vflag_func = 14 vflag_copy =32014  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 15

vflag_file = 32 vflag_func = 15 vflag_copy =32015  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 16

vflag_file = 32 vflag_func = 16 vflag_copy =32016  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 17

vflag_file = 32 vflag_func = 17 vflag_copy =32017  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 18

vflag_file = 32 vflag_func = 18 vflag_copy =32018  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 19

vflag_file = 32 vflag_func = 19 vflag_copy =32019  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 20

vflag_file = 32 vflag_func = 20 vflag_copy =32020  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 21

vflag_file = 32 vflag_func = 21 vflag_copy =32021  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 22

vflag_file = 32 vflag_func = 22 vflag_copy =32022  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 23

vflag_file = 32 vflag_func = 23 vflag_copy =32023  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 24

vflag_file = 32 vflag_func = 24 vflag_copy =32024  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 25

vflag_file = 32 vflag_func = 25 vflag_copy =32025  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 26

vflag_file = 32 vflag_func = 26 vflag_copy =32026  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 27

vflag_file = 32 vflag_func = 27 vflag_copy =32027  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 28

vflag_file = 32 vflag_func = 28 vflag_copy =32028  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 29

vflag_file = 32 vflag_func = 29 vflag_copy =32029  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 30

vflag_file = 32 vflag_func = 30 vflag_copy =32030  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 31

vflag_file = 32 vflag_func = 31 vflag_copy =32031  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 32

vflag_file = 32 vflag_func = 32 vflag_copy =32032  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 33

vflag_file = 32 vflag_func = 33 vflag_copy =32033  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 34

vflag_file = 32 vflag_func = 34 vflag_copy =32034  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 35

vflag_file = 32 vflag_func = 35 vflag_copy =32035  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 36

vflag_file = 32 vflag_func = 36 vflag_copy =32036  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 37

vflag_file = 32 vflag_func = 37 vflag_copy =32037  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 38

vflag_file = 32 vflag_func = 38 vflag_copy =32038  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 39

vflag_file = 32 vflag_func = 39 vflag_copy =32039  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 40

vflag_file = 32 vflag_func = 40 vflag_copy =32040  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 41

vflag_file = 32 vflag_func = 41 vflag_copy =32041  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 42

vflag_file = 32 vflag_func = 42 vflag_copy =32042  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 43

vflag_file = 32 vflag_func = 43 vflag_copy =32043  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 44

vflag_file = 32 vflag_func = 44 vflag_copy =32044  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 45

vflag_file = 32 vflag_func = 45 vflag_copy =32045  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 46

vflag_file = 32 vflag_func = 46 vflag_copy =32046  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 47

vflag_file = 32 vflag_func = 47 vflag_copy =32047  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 48

vflag_file = 32 vflag_func = 48 vflag_copy =32048  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 49

vflag_file = 32 vflag_func = 49 vflag_copy =32049  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 50

vflag_file = 32 vflag_func = 50 vflag_copy =32050  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 51

vflag_file = 32 vflag_func = 51 vflag_copy =32051  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 52

vflag_file = 32 vflag_func = 52 vflag_copy =32052  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 53

vflag_file = 32 vflag_func = 53 vflag_copy =32053  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 32 54

vflag_file = 32 vflag_func = 54 vflag_copy =32054  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 33 1

vflag_file = 33 vflag_func = 1 vflag_copy =33001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 33 2

vflag_file = 33 vflag_func = 2 vflag_copy =33002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 35 1

vflag_file = 35 vflag_func = 1 vflag_copy =35001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 35 2

vflag_file = 35 vflag_func = 2 vflag_copy =35002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 36 1

vflag_file = 36 vflag_func = 1 vflag_copy =36001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 36 2

vflag_file = 36 vflag_func = 2 vflag_copy =36002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 36 3

vflag_file = 36 vflag_func = 3 vflag_copy =36003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 36 4

vflag_file = 36 vflag_func = 4 vflag_copy =36004  
Task1! Lock Never Unlock, threadID# 99747584! gbl1 = 1  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 36 5

vflag_file = 36 vflag_func = 5 vflag_copy =36005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 36 6

vflag_file = 36 vflag_func = 6 vflag_copy =36006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 36 7

vflag_file = 36 vflag_func = 7 vflag_copy =36007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 36 8

vflag_file = 36 vflag_func = 8 vflag_copy =36008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 37 1

vflag_file = 37 vflag_func = 1 vflag_copy =37001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 37 2

vflag_file = 37 vflag_func = 2 vflag_copy =37002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 37 3

vflag_file = 37 vflag_func = 3 vflag_copy =37003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 37 4

vflag_file = 37 vflag_func = 4 vflag_copy =37004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 37 5

vflag_file = 37 vflag_func = 5 vflag_copy =37005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 37 6

vflag_file = 37 vflag_func = 6 vflag_copy =37006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 37 7

vflag_file = 37 vflag_func = 7 vflag_copy =37007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 37 8

vflag_file = 37 vflag_func = 8 vflag_copy =37008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 37 9

vflag_file = 37 vflag_func = 9 vflag_copy =37009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 37 10

vflag_file = 37 vflag_func = 10 vflag_copy =37010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 37 11

vflag_file = 37 vflag_func = 11 vflag_copy =37011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 37 12

vflag_file = 37 vflag_func = 12 vflag_copy =37012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 37 13

vflag_file = 37 vflag_func = 13 vflag_copy =37013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 37 14

 

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 38 1

vflag_file = 38 vflag_func = 1 vflag_copy =38001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 38 2

vflag_file = 38 vflag_func = 2 vflag_copy =38002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 39 1

vflag_file = 39 vflag_func = 1 vflag_copy =39001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 39 2

vflag_file = 39 vflag_func = 2 vflag_copy =39002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 39 3

vflag_file = 39 vflag_func = 3 vflag_copy =39003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 39 4

vflag_file = 39 vflag_func = 4 vflag_copy =39004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 39 5

vflag_file = 39 vflag_func = 5 vflag_copy =39005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 39 6

vflag_file = 39 vflag_func = 6 vflag_copy =39006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 39 7

vflag_file = 39 vflag_func = 7 vflag_copy =39007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 39 8

vflag_file = 39 vflag_func = 8 vflag_copy =39008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 39 9

vflag_file = 39 vflag_func = 9 vflag_copy =39009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 39 10

vflag_file = 39 vflag_func = 10 vflag_copy =39010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 39 11

vflag_file = 39 vflag_func = 11 vflag_copy =39011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 39 12

vflag_file = 39 vflag_func = 12 vflag_copy =39012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 39 13

vflag_file = 39 vflag_func = 13 vflag_copy =39013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 39 14

vflag_file = 39 vflag_func = 14 vflag_copy =39014  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 39 15

vflag_file = 39 vflag_func = 15 vflag_copy =39015  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 39 16

vflag_file = 39 vflag_func = 16 vflag_copy =39016  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 39 17

vflag_file = 39 vflag_func = 17 vflag_copy =39017  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 39 18

vflag_file = 39 vflag_func = 18 vflag_copy =39018  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 39 19

vflag_file = 39 vflag_func = 19 vflag_copy =39019  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 40 1

vflag_file = 40 vflag_func = 1 vflag_copy =40001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 40 2

vflag_file = 40 vflag_func = 2 vflag_copy =40002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 40 3

vflag_file = 40 vflag_func = 3 vflag_copy =40003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 41 1

vflag_file = 41 vflag_func = 1 vflag_copy =41001  
Task1! Cross thread stack access, threadID# 99747584! thread no = THREAD1 200 
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 41 2

vflag_file = 41 vflag_func = 2 vflag_copy =41002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 41 3

vflag_file = 41 vflag_func = 3 vflag_copy =41003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 41 4

vflag_file = 41 vflag_func = 4 vflag_copy =41004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 41 5

vflag_file = 41 vflag_func = 5 vflag_copy =41005  
Task5! Cross thread stack access, threadID# 99747584! gbl5 = 5 arrval = 55  
Task5_2! Cross thread stack access, threadID# 112334592! gbl5 = 10 
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 41 6

vflag_file = 41 vflag_func = 6 vflag_copy =41006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 42 1

vflag_file = 42 vflag_func = 1 vflag_copy =42001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 42 2

vflag_file = 42 vflag_func = 2 vflag_copy =42002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 42 3

vflag_file = 42 vflag_func = 3 vflag_copy =42003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 42 4

vflag_file = 42 vflag_func = 4 vflag_copy =42004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 42 5

vflag_file = 42 vflag_func = 5 vflag_copy =42005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 42 6

vflag_file = 42 vflag_func = 6 vflag_copy =42006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 42 7

vflag_file = 42 vflag_func = 7 vflag_copy =42007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 43 1

vflag_file = 43 vflag_func = 1 vflag_copy =43001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 43 2

vflag_file = 43 vflag_func = 2 vflag_copy =43002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 43 3

vflag_file = 43 vflag_func = 3 vflag_copy =43003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 43 4

vflag_file = 43 vflag_func = 4 vflag_copy =43004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 43 5

vflag_file = 43 vflag_func = 5 vflag_copy =43005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 43 6

vflag_file = 43 vflag_func = 6 vflag_copy =43006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 43 7

vflag_file = 43 vflag_func = 7 vflag_copy =43007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 44 1

vflag_file = 44 vflag_func = 1 vflag_copy =44001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 44 2

vflag_file = 44 vflag_func = 2 vflag_copy =44002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 44 3

vflag_file = 44 vflag_func = 3 vflag_copy =44003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 44 4

vflag_file = 44 vflag_func = 4 vflag_copy =44004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 44 5

vflag_file = 44 vflag_func = 5 vflag_copy =44005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 44 6

vflag_file = 44 vflag_func = 6 vflag_copy =44006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 44 7

vflag_file = 44 vflag_func = 7 vflag_copy =44007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 44 8

vflag_file = 44 vflag_func = 8 vflag_copy =44008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 44 9

vflag_file = 44 vflag_func = 9 vflag_copy =44009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 44 10

vflag_file = 44 vflag_func = 10 vflag_copy =44010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 44 11

vflag_file = 44 vflag_func = 11 vflag_copy =44011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 44 12

vflag_file = 44 vflag_func = 12 vflag_copy =44012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 44 13

vflag_file = 44 vflag_func = 13 vflag_copy =44013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 45 1

vflag_file = 45 vflag_func = 1 vflag_copy =45001  
10 Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 45 2

vflag_file = 45 vflag_func = 2 vflag_copy =45002  
10.000000 Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 45 3

vflag_file = 45 vflag_func = 3 vflag_copy =45003  
THIS IS STRING THIS IS STRING 
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 45 4

vflag_file = 45 vflag_func = 4 vflag_copy =45004  
20  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 45 5

vflag_file = 45 vflag_func = 5 vflag_copy =45005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 45 6

vflag_file = 45 vflag_func = 6 vflag_copy =45006  
STRING 
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 45 7

vflag_file = 45 vflag_func = 7 vflag_copy =45007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 45 8

vflag_file = 45 vflag_func = 8 vflag_copy =45008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 45 9

vflag_file = 45 vflag_func = 9 vflag_copy =45009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 45 10

vflag_file = 45 vflag_func = 10 vflag_copy =45010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 45 11

vflag_file = 45 vflag_func = 11 vflag_copy =45011  
 test Error: STRING 
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 45 12

vflag_file = 45 vflag_func = 12 vflag_copy =45012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 45 13

vflag_file = 45 vflag_func = 13 vflag_copy =45013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 45 14

vflag_file = 45 vflag_func = 14 vflag_copy =45014  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 45 15

vflag_file = 45 vflag_func = 15 vflag_copy =45015  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 46 1

vflag_file = 46 vflag_func = 1 vflag_copy =46001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 46 2

vflag_file = 46 vflag_func = 2 vflag_copy =46002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 46 3

vflag_file = 46 vflag_func = 3 vflag_copy =46003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 46 4

vflag_file = 46 vflag_func = 4 vflag_copy =46004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 46 5

vflag_file = 46 vflag_func = 5 vflag_copy =46005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 46 6

vflag_file = 46 vflag_func = 6 vflag_copy =46006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 46 7

vflag_file = 46 vflag_func = 7 vflag_copy =46007  
uninit a  
uninit a  
uninit a  
uninit a  
uninit a  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 46 8

vflag_file = 46 vflag_func = 8 vflag_copy =46008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 46 9

vflag_file = 46 vflag_func = 9 vflag_copy =46009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 46 10

vflag_file = 46 vflag_func = 10 vflag_copy =46010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 46 11

vflag_file = 46 vflag_func = 11 vflag_copy =46011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 46 12

vflag_file = 46 vflag_func = 12 vflag_copy =46012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 46 13

vflag_file = 46 vflag_func = 13 vflag_copy =46013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 46 14

vflag_file = 46 vflag_func = 14 vflag_copy =46014  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 46 15

vflag_file = 46 vflag_func = 15 vflag_copy =46015  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 46 16

vflag_file = 46 vflag_func = 16 vflag_copy =46016  
unint p STRING00  
unint p STRING00  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 47 1

vflag_file = 47 vflag_func = 1 vflag_copy =47001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 47 2

vflag_file = 47 vflag_func = 2 vflag_copy =47002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 47 3

vflag_file = 47 vflag_func = 3 vflag_copy =47003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 47 4

vflag_file = 47 vflag_func = 4 vflag_copy =47004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 47 5

vflag_file = 47 vflag_func = 5 vflag_copy =47005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 47 6

vflag_file = 47 vflag_func = 6 vflag_copy =47006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 47 7

vflag_file = 47 vflag_func = 7 vflag_copy =47007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 47 8

vflag_file = 47 vflag_func = 8 vflag_copy =47008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 47 9

vflag_file = 47 vflag_func = 9 vflag_copy =47009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 47 10

vflag_file = 47 vflag_func = 10 vflag_copy =47010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 47 11

vflag_file = 47 vflag_func = 11 vflag_copy =47011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 47 12

vflag_file = 47 vflag_func = 12 vflag_copy =47012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 47 13

vflag_file = 47 vflag_func = 13 vflag_copy =47013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 47 14

vflag_file = 47 vflag_func = 14 vflag_copy =47014  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 47 15

vflag_file = 47 vflag_func = 15 vflag_copy =47015  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 48 1

vflag_file = 48 vflag_func = 1 vflag_copy =48001  
Task1! Unlock without Lock, threadID# 99747584! thread no = THREAD1  
Task1! Unlock without Lock, threadID# 112334592! thread no = THREAD2  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 48 2

vflag_file = 48 vflag_func = 2 vflag_copy =48002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 48 3

vflag_file = 48 vflag_func = 3 vflag_copy =48003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 48 4

vflag_file = 48 vflag_func = 4 vflag_copy =48004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 48 5

vflag_file = 48 vflag_func = 5 vflag_copy =48005  
Task5! Unlock without Lock, threadID# 99747584! gbl5 = 5  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 48 6

vflag_file = 48 vflag_func = 6 vflag_copy =48006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 48 7

vflag_file = 48 vflag_func = 7 vflag_copy =48007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 48 8

vflag_file = 48 vflag_func = 8 vflag_copy =48008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 49 1

vflag_file = 49 vflag_func = 1 vflag_copy =49001  
3Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 49 2

vflag_file = 49 vflag_func = 2 vflag_copy =49002  
3Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 49 3

vflag_file = 49 vflag_func = 3 vflag_copy =49003  
3Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 49 4

vflag_file = 49 vflag_func = 4 vflag_copy =49004  
3Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 49 5

vflag_file = 49 vflag_func = 5 vflag_copy =49005  
3Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 49 6

vflag_file = 49 vflag_func = 6 vflag_copy =49006  
3Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 49 7

vflag_file = 49 vflag_func = 7 vflag_copy =49007  
3Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 50 1

vflag_file = 50 vflag_func = 1 vflag_copy =50001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 50 2

vflag_file = 50 vflag_func = 2 vflag_copy =50002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 50 3

vflag_file = 50 vflag_func = 3 vflag_copy =50003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 50 4

vflag_file = 50 vflag_func = 4 vflag_copy =50004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 50 5

vflag_file = 50 vflag_func = 5 vflag_copy =50005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 50 6

vflag_file = 50 vflag_func = 6 vflag_copy =50006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 50 7

vflag_file = 50 vflag_func = 7 vflag_copy =50007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 50 8

vflag_file = 50 vflag_func = 8 vflag_copy =50008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 50 9

vflag_file = 50 vflag_func = 9 vflag_copy =50009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 50 10

vflag_file = 50 vflag_func = 10 vflag_copy =50010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 50 11

vflag_file = 50 vflag_func = 11 vflag_copy =50011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 50 12

vflag_file = 50 vflag_func = 12 vflag_copy =50012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 50 13

vflag_file = 50 vflag_func = 13 vflag_copy =50013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 50 14

vflag_file = 50 vflag_func = 14 vflag_copy =50014  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 50 15

vflag_file = 50 vflag_func = 15 vflag_copy =50015  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 50 16

vflag_file = 50 vflag_func = 16 vflag_copy =50016  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 50 17

vflag_file = 50 vflag_func = 17 vflag_copy =50017  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 50 18

vflag_file = 50 vflag_func = 18 vflag_copy =50018  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 51 1

vflag_file = 51 vflag_func = 1 vflag_copy =51001  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 51 2

vflag_file = 51 vflag_func = 2 vflag_copy =51002  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 51 3

vflag_file = 51 vflag_func = 3 vflag_copy =51003  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 51 4

vflag_file = 51 vflag_func = 4 vflag_copy =51004  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 51 5

vflag_file = 51 vflag_func = 5 vflag_copy =51005  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 51 6

vflag_file = 51 vflag_func = 6 vflag_copy =51006  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 51 7

vflag_file = 51 vflag_func = 7 vflag_copy =51007  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 51 8

vflag_file = 51 vflag_func = 8 vflag_copy =51008  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 51 9

vflag_file = 51 vflag_func = 9 vflag_copy =51009  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 51 10

vflag_file = 51 vflag_func = 10 vflag_copy =51010  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 51 11

vflag_file = 51 vflag_func = 11 vflag_copy =51011  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 51 12

vflag_file = 51 vflag_func = 12 vflag_copy =51012  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 51 13

vflag_file = 51 vflag_func = 13 vflag_copy =51013  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 51 14

vflag_file = 51 vflag_func = 14 vflag_copy =51014  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 51 15

vflag_file = 51 vflag_func = 15 vflag_copy =51015  
Printed from main function  

Confirmed Negative 

Valgrind being tested on 02.wo_Defects 51 16

vflag_file = 51 vflag_func = 16 vflag_copy =51016  
Printed from main function  

Confirmed Negative 

